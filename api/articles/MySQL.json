{"title":"MySQL数据库","uid":"316ff0598b1fb3e13d8a93f68504bdf9","slug":"MySQL","date":"2022-09-23T10:49:36.000Z","updated":"2023-11-09T07:58:21.150Z","comments":true,"path":"api/articles/MySQL.json","keywords":null,"cover":"image/cover3.jpg","content":"<h1 id=\"第-00-章-写在前面\"><a href=\"#第-00-章-写在前面\" class=\"headerlink\" title=\"第 00 章_写在前面\"></a>第 00 章_写在前面</h1><ul>\n<li>讲师：尚硅谷-宋红康（康师傅）<br>官网： <strong><a href=\"http://www.atguigu.comhttp//www.atguigu.com/\">http://www.atguigu.comhttp://www.atguigu.com/</a></strong> )</li>\n</ul>\n<h2 id=\"一、MySQL数据库基础篇大纲\"><a href=\"#一、MySQL数据库基础篇大纲\" class=\"headerlink\" title=\"一、MySQL数据库基础篇大纲\"></a>一、MySQL数据库基础篇大纲</h2><p><strong>MySQL数据库基础篇分为 5 个篇章：</strong></p>\n<h2 id=\"1-数据库概述与MySQL安装篇\"><a href=\"#1-数据库概述与MySQL安装篇\" class=\"headerlink\" title=\"1. 数据库概述与MySQL安装篇\"></a>1. 数据库概述与MySQL安装篇</h2><ul>\n<li>第 01 章：数据库概述</li>\n<li>第 02 章：MySQL环境搭建</li>\n</ul>\n<h2 id=\"2-SQL之SELECT使用篇\"><a href=\"#2-SQL之SELECT使用篇\" class=\"headerlink\" title=\"2. SQL之SELECT使用篇\"></a>2. SQL之SELECT使用篇</h2><ul>\n<li>第 03 章：基本的SELECT语句</li>\n<li>第 04 章：运算符</li>\n<li>第 05 章：排序与分页</li>\n<li>第 06 章：多表查询</li>\n<li>第 07 章：单行函数</li>\n<li>第 08 章：聚合函数</li>\n<li>第 09 章：子查询</li>\n</ul>\n<h2 id=\"3-SQL之DDL、DML、DCL使用篇\"><a href=\"#3-SQL之DDL、DML、DCL使用篇\" class=\"headerlink\" title=\"3. SQL之DDL、DML、DCL使用篇\"></a>3. SQL之DDL、DML、DCL使用篇</h2><ul>\n<li>第 10 章：创建和管理表</li>\n<li>第 11 章：数据处理之增删改</li>\n<li>第 12 章：MySQL数据类型精讲</li>\n<li>第 13 章：约束</li>\n</ul>\n<h2 id=\"4-其它数据库对象篇\"><a href=\"#4-其它数据库对象篇\" class=\"headerlink\" title=\"4. 其它数据库对象篇\"></a>4. 其它数据库对象篇</h2><ul>\n<li>第 14 章：视图</li>\n<li>第 15 章：存储过程与函数</li>\n<li>第 16 章：变量、流程控制与游标</li>\n<li>第 17 章：触发器</li>\n</ul>\n<h2 id=\"5-MySQL-8-新特性篇\"><a href=\"#5-MySQL-8-新特性篇\" class=\"headerlink\" title=\"5. MySQL 8 新特性篇\"></a>5. MySQL 8 新特性篇</h2><ul>\n<li>第 18 章：MySQL 8 其它新特性</li>\n</ul>\n<h2 id=\"二、MySQL高级特性篇大纲\"><a href=\"#二、MySQL高级特性篇大纲\" class=\"headerlink\" title=\"二、MySQL高级特性篇大纲\"></a>二、MySQL高级特性篇大纲</h2><p><strong>MySQL高级特性分为 4 个篇章：</strong></p>\n<h3 id=\"1-MySQL架构篇\"><a href=\"#1-MySQL架构篇\" class=\"headerlink\" title=\"1. MySQL架构篇\"></a>1. MySQL架构篇</h3><ul>\n<li>第 01 章：Linux下MySQL的安装与使用</li>\n<li>第 02 章：MySQL的数据目录</li>\n<li>第 03 章：用户与权限管理</li>\n<li>第 04 章：逻辑架构</li>\n<li>第 05 章：存储引擎</li>\n<li>第 06 章：InnoDB数据页结构</li>\n</ul>\n<h3 id=\"2-索引及调优篇\"><a href=\"#2-索引及调优篇\" class=\"headerlink\" title=\"2. 索引及调优篇\"></a>2. 索引及调优篇</h3><ul>\n<li>第 07 章：索引</li>\n<li>第 08 章：性能分析工具的使用</li>\n<li>第 09 章：索引优化与SQL优化</li>\n<li>第 10 章：数据库的设计规范</li>\n<li>第 11 章：数据库其他调优策略</li>\n</ul>\n<h3 id=\"3-事务篇\"><a href=\"#3-事务篇\" class=\"headerlink\" title=\"3. 事务篇\"></a>3. 事务篇</h3><ul>\n<li>第 12 章：事务基础知识</li>\n<li>第 13 章：MySQL事务日志</li>\n<li>第 14 章：锁</li>\n<li>第 15 章：多版本并发控制(MVCC)</li>\n</ul>\n<h3 id=\"4-日志与备份篇\"><a href=\"#4-日志与备份篇\" class=\"headerlink\" title=\"4. 日志与备份篇\"></a>4. 日志与备份篇</h3><ul>\n<li>第 16 章：其它数据库日志</li>\n<li>第 17 章：主从复制</li>\n<li>第 18 章：数据库备份与恢复</li>\n</ul>\n<h2 id=\"三、MySQL高手是怎样炼成的\"><a href=\"#三、MySQL高手是怎样炼成的\" class=\"headerlink\" title=\"三、MySQL高手是怎样炼成的\"></a>三、MySQL高手是怎样炼成的</h2><p><strong>针对开发工程师、DBA、运维</strong></p>\n<ul>\n<li>mysql服务器的安装配置</li>\n<li>SQL编程(自定义函数、存储过程、触发器、定时任务)</li>\n<li>数据库索引建立</li>\n<li>SQL语句优化</li>\n<li>数据库内部结构和原理</li>\n<li>数据库的性能监控分析与系统优化</li>\n<li>各种参数常量设定</li>\n<li>数据库建模优化</li>\n<li>主从复制</li>\n<li>分布式架构搭建、垂直切割和水平切割</li>\n<li>MyCat</li>\n<li>数据迁移</li>\n<li>容灾备份和恢复</li>\n<li>对开源数据库进行二次开发</li>\n</ul>\n<p><strong>数据库就像一棵常青的技能树</strong> ，不管是普通开发还是首席架构、CTO 都能够从中汲取足够的技术养料。</p>\n<p><strong>普通开发</strong> 往往积累单点技术、比如 CRUD、锁类型、索引的数据结构…而对于 <strong>技术骨干、架构师</strong> 则往往需要对底层原理吃透，数据库事务 ACID 是如何实现的？何时命中索引、何时不能，为什么？<br>分布式场景下数据库怎么优化才能保持高性能？</p>\n<p>说白了，知道怎么用是一方面，知道为什么则是更为 <strong>稀缺的能力</strong> 。</p>\n<p>很多技术专家在总结程序员核心能力的时候都会提到至关重要的一点： <strong>精通数据库。精通意味着</strong>：</p>\n<ul>\n<li>第一形成知识网，更灵活地应对突发问题；</li>\n<li>第二底层原理要懂，懂了才能更自由地应对复杂多变的业务场景。</li>\n</ul>\n<h2 id=\"四、本套课程适合人群\"><a href=\"#四、本套课程适合人群\" class=\"headerlink\" title=\"四、本套课程适合人群\"></a>四、本套课程适合人群</h2><p>1 、MySQL数据库初学者。建议按照顺序从套课程的“基础篇”开始学习。</p>\n<p>2 、从事后台开发(Java、Python、GO、PHP等)、MySQL开发 1~3 年的开发人员和运维人员。建议选择“基础篇”部分内容学习，或者跳过“基础篇”，直接从“高级特性篇”开始学习。</p>\n<p>3 、有资历的MySQL DBA。本课程可以作为“案头书”。在解决问题时，如果记不清某些概念或者细节比较模糊，则可以拿来参考。</p>\n<h2 id=\"五、希望你能获取的\"><a href=\"#五、希望你能获取的\" class=\"headerlink\" title=\"五、希望你能获取的\"></a>五、希望你能获取的</h2><p>先说一个笑话。这个笑话是我从万维钢的专栏里看到的。</p>\n<p>三个逻辑学家走进酒吧，酒保问他们，三位都喝啤酒吗？ 第一个逻辑学家说，我不知道。 第二个逻辑学家说，我不知道。 第三个逻辑学家说，是的。</p>\n<p>对于知识，是需要<strong>认真</strong>和<strong>讲究逻辑</strong>的。希望这份认真、严谨你在课程的每个细节都能体会到。希望通过这套课程的系统性训练，你也能感受到这种思维方式的美，最终也能获得这种思维方式。</p>\n<p><strong>具备优秀的思维能力</strong>才是在未来可以迁移的能力，如果只是学习一些命令，则很快会过时，<strong>思维能力</strong>和<strong>学习能力</strong>的提升才是不会变的东西。</p>\n<h1 id=\"第-01-章-数据库概述\"><a href=\"#第-01-章-数据库概述\" class=\"headerlink\" title=\"第 01 章_数据库概述\"></a>第 01 章_数据库概述</h1><h2 id=\"1-为什么要使用数据库\"><a href=\"#1-为什么要使用数据库\" class=\"headerlink\" title=\"1. 为什么要使用数据库\"></a>1. 为什么要使用数据库</h2><ul>\n<li>持久化(persistence)： <strong>把数据保存到可掉电式存储设备中以供之后使用</strong> 。大多数情况下，特别是企业级应用， <strong>数据持久化意味着将内存中的数据保存到硬盘上加以”固化”</strong> ，而持久化的实现过程大多通过各种关系数据库来完成。</li>\n<li>持久化的主要作用是 <strong>将内存中的数据存储在关系型数据库中</strong> ，当然也可以存储在磁盘文件、XML数据文件中。</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726093912035.png\" alt=\"image-20220726093912035\"></p>\n<p>生活中的例子：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726094346629.png\" alt=\"image-20220726094346629\"></p>\n<h2 id=\"2-数据库与数据库管理系统\"><a href=\"#2-数据库与数据库管理系统\" class=\"headerlink\" title=\"2. 数据库与数据库管理系统\"></a>2. 数据库与数据库管理系统</h2><h3 id=\"2-1-数据库的相关概念\"><a href=\"#2-1-数据库的相关概念\" class=\"headerlink\" title=\"2. 1 数据库的相关概念\"></a>2. 1 数据库的相关概念</h3><table>\n<thead>\n<tr>\n<th>DB：数据库（Database）</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>即存储数据的“仓库”，其本质是一个文件系统。它保存了一系列有组织的数据。</td>\n</tr>\n<tr>\n<td><strong>DBMS：数据库管理系统（Database Management System）</strong></td>\n</tr>\n<tr>\n<td>是一种操纵和管理数据库的大型软件，用于建立、使用和维护数据库，对数据库进行统一管理和控制。用户通过数据库管理系统访问数据库中表内的数据。</td>\n</tr>\n<tr>\n<td><strong>SQL：结构化查询语言（Structured Query Language）</strong></td>\n</tr>\n<tr>\n<td>专门用来与数据库通信的语言。</td>\n</tr>\n</tbody></table>\n<h3 id=\"2-2-数据库与数据库管理系统的关系\"><a href=\"#2-2-数据库与数据库管理系统的关系\" class=\"headerlink\" title=\"2. 2 数据库与数据库管理系统的关系\"></a>2. 2 数据库与数据库管理系统的关系</h3><p>数据库管理系统(DBMS)可以管理多个数据库，一般开发人员会针对每一个应用创建一个数据库。为保存应用中实体的数据，一般会在数据库创建多个表，以保存程序中实体用户的数据。</p>\n<p>数据库管理系统、数据库和表的关系如图所示：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726094328550.png\" alt=\"image-20220726094328550\"></p>\n<h3 id=\"2-3-常见的数据库管理系统排名-DBMS\"><a href=\"#2-3-常见的数据库管理系统排名-DBMS\" class=\"headerlink\" title=\"2. 3 常见的数据库管理系统排名(DBMS)\"></a>2. 3 常见的数据库管理系统排名(DBMS)</h3><p>目前互联网上常见的数据库管理软件有Oracle、MySQL、MS SQL Server、DB2、PostgreSQL、Access、Sybase、Informix这几种。以下是 2021 年 <strong>DB-Engines Ranking</strong> 对各数据库受欢迎程度进行调查后的统计结果：（查看数据库最新排名: <strong><a href=\"https://db-engines.com/en/ranking\">https://db-engines.com/en/ranking</a></strong> ）</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726094501457.png\" alt=\"image-20220726094501457\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726094515597.png\" alt=\"image-20220726094515597\"></p>\n<p>对应的走势图：（ <strong><a href=\"https://db-engines.com/en/ranking_trend\">https://db-engines.com/en/ranking_trend</a></strong>）</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726094536043.png\" alt=\"image-20220726094536043\"></p>\n<h3 id=\"2-4-常见的数据库介绍\"><a href=\"#2-4-常见的数据库介绍\" class=\"headerlink\" title=\"2. 4 常见的数据库介绍\"></a>2. 4 常见的数据库介绍</h3><p><strong>Oracle</strong></p>\n<p>1979 年，Oracle 2 诞生，它是第一个商用的 RDBMS（关系型数据库管理系统）。随着 Oracle 软件的名气越来越大，公司也改名叫 Oracle 公司。</p>\n<p>2007 年，总计 85 亿美金收购BEA Systems。</p>\n<p>2009 年，总计 74 亿美金收购SUN。此前的 2008 年，SUN以 10 亿美金收购MySQL。意味着Oracle 同时拥有了MySQL 的管理权，至此 Oracle 在数据库领域中成为绝对的领导者。</p>\n<p>2013 年，甲骨文超越IBM，成为继Microsoft后全球第二大软件公司。</p>\n<p>如今 Oracle 的年收入达到了 400 亿美金，足以证明商用（收费）数据库软件的价值。</p>\n<p><strong>SQL Server</strong><br>SQL Server 是微软开发的大型商业数据库，诞生于 1989 年。C#、.net等语言常使用，与WinNT完全集成，也可以很好地与Microsoft BackOffice产品集成。</p>\n<p><strong>DB2</strong><br>IBM公司的数据库产品,收费的。常应用在银行系统中。</p>\n<p><strong>PostgreSQL</strong><br>PostgreSQL 的稳定性极强，最符合SQL标准，开放源码，具备商业级DBMS质量。PG对数据量大的文本以及SQL处理较快。</p>\n<p><strong>SyBase</strong><br>已经淡出历史舞台。提供了一个非常专业数据建模的工具PowerDesigner。</p>\n<p><strong>SQLite</strong><br>嵌入式的小型数据库，应用在手机端。 零配置，SQlite3不用安装，不用配置，不用启动，关闭或者配数据库实例。当系统崩溃后不用做任何恢复操作，再下次使用数据库的时候自动恢复。</p>\n<p><strong>informix</strong><br>IBM公司出品，取自Information 和Unix的结合，它是第一个被移植到Linux上的商业数据库产品。仅运行于unix&#x2F;linux平台，命令行操作。 性能较高，支持集群，适应于安全性要求极高的系统，尤其是银行，证券系统的应用。</p>\n<h2 id=\"3-MySQL介绍\"><a href=\"#3-MySQL介绍\" class=\"headerlink\" title=\"3. MySQL介绍\"></a>3. MySQL介绍</h2><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726102623233.png\" alt=\"image-20220726102623233\"></p>\n<h3 id=\"3-1-概述\"><a href=\"#3-1-概述\" class=\"headerlink\" title=\"3. 1 概述\"></a>3. 1 概述</h3><ul>\n<li>MySQL是一个<strong>开放源代码的关系型数据库管理系统</strong>，由瑞典MySQL AB（创始人Michael Widenius）公司 1995 年开发，迅速成为开源数据库的 No.1。</li>\n<li>2008 被<strong>Sun</strong>收购（ 10 亿美金）， 2009 年Sun被<strong>Oracle</strong>收购。<strong>MariaDB</strong>应运而生。（MySQL 的创造者担心 MySQL 有闭源的风险，因此创建了 MySQL 的分支项目 MariaDB）</li>\n<li>MySQL6.x 版本之后分为<strong>社区版</strong>和<strong>商业版</strong>。</li>\n<li>MySQL是一种关联数据库管理系统，将数据保存在不同的表中，而不是将所有数据放在一个大仓库内，这样就增加了速度并提高了灵活性。</li>\n<li>MySQL是开源的，所以你不需要支付额外的费用。</li>\n<li>MySQL是可以定制的，采用了<strong>GPL（GNU General Public License）</strong>协议，你可以修改源码来开发自己的MySQL系统。</li>\n<li>MySQL支持大型的数据库。可以处理拥有上千万条记录的大型数据库。</li>\n<li>MySQL支持大型数据库，支持 5000 万条记录的数据仓库， 32 位系统表文件最大可支持<strong>4GB</strong>， 64 位系统支持最大的表文件为<strong>8TB</strong>。</li>\n<li>MySQL使用<strong>标准的SQL数据语言</strong>形式。</li>\n<li>MySQL可以允许运行于多个系统上，并且支持多种语言。这些编程语言包括C、C++、Python、Java、Perl、PHP和Ruby等。</li>\n</ul>\n<h3 id=\"3-2-MySQL发展史重大事件\"><a href=\"#3-2-MySQL发展史重大事件\" class=\"headerlink\" title=\"3. 2 MySQL发展史重大事件\"></a>3. 2 MySQL发展史重大事件</h3><p>MySQL的历史就是整个互联网的发展史。互联网业务从社交领域、电商领域到金融领域的发展，推动着应用对数据库的需求提升，对传统的数据库服务能力提出了挑战。高并发、高性能、高可用、轻资源、易维护、易扩展的需求，促进了MySQL的长足发展。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726102712158.png\" alt=\"image-20220726102712158\"></p>\n<h3 id=\"1-4-关于MySQL-8-0\"><a href=\"#1-4-关于MySQL-8-0\" class=\"headerlink\" title=\"1. 4 关于MySQL 8. 0\"></a>1. 4 关于MySQL 8. 0</h3><p><strong>MySQL从5.7版本直接跳跃发布了8.0版本</strong>，可见这是一个令人兴奋的里程碑版本。MySQL 8版本在功能上做了显著的改进与增强，开发者对MySQL的源代码进行了重构，最突出的一点是多MySQL  Optimizer优化器进行了改进。不仅在速度上得到了改善，还为用户带来了更好的性能和更棒的体验。</p>\n<h3 id=\"1-5-Why-choose-MySQL\"><a href=\"#1-5-Why-choose-MySQL\" class=\"headerlink\" title=\"1.5 Why choose MySQL?\"></a>1.5 Why choose MySQL?</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726095216632.png\" alt=\"image-20220726095216632\"></p>\n<p>为什么如此多的厂商要选用MySQL？大概总结的原因主要有以下几点：</p>\n<ol>\n<li>开放源代码，使用成本低。</li>\n<li>性能卓越，服务稳定。</li>\n<li>软件体积小，使用简单，并且易于维护。</li>\n<li>历史悠久，社区用户非常活跃，遇到问题可以寻求帮助。</li>\n<li>许多互联网公司在用，经过了时间的验证。</li>\n</ol>\n<h3 id=\"1-6-Oracle-vs-MySQL\"><a href=\"#1-6-Oracle-vs-MySQL\" class=\"headerlink\" title=\"1.6 Oracle vs MySQL\"></a>1.6 Oracle vs MySQL</h3><p>Oracle 更适合大型跨国企业的使用，因为他们对费用不敏感，但是对性能要求以及安全性有更高的要求。</p>\n<p>MySQL 由于其 <strong>体积小、速度快、总体拥有成本低，可处理上千万条记录的大型数据库，尤其是开放源码这一特点，使得很多互联网公司、中小型网站选择了MySQL作为网站数据库</strong> （Facebook，Twitter，YouTube，阿里巴巴&#x2F;蚂蚁金服，去哪儿，美团外卖，腾讯）。</p>\n<h2 id=\"4-RDBMS-与-非RDBMS\"><a href=\"#4-RDBMS-与-非RDBMS\" class=\"headerlink\" title=\"4. RDBMS 与 非RDBMS\"></a>4. RDBMS 与 非RDBMS</h2><p>从排名中我们能看出来，关系型数据库绝对是 DBMS 的主流，其中使用最多的 DBMS 分别是 Oracle、MySQL 和 SQL Server。这些都是关系型数据库（RDBMS）。</p>\n<h3 id=\"4-1-关系型数据库-RDBMS\"><a href=\"#4-1-关系型数据库-RDBMS\" class=\"headerlink\" title=\"4.1 关系型数据库(RDBMS)\"></a>4.1 关系型数据库(RDBMS)</h3><h4 id=\"4-1-1-实质\"><a href=\"#4-1-1-实质\" class=\"headerlink\" title=\"4. 1. 1 实质\"></a>4. 1. 1 实质</h4><ul>\n<li>这种类型的数据库是<strong>最古老</strong>的数据库类型，关系型数据库模型是把复杂的数据结构归结为简单的<strong>二元关系</strong>（即二维表格形式）。</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726095255154.png\" alt=\"image-20220726095255154\"></p>\n<ul>\n<li>关系型数据库以**行(row)<strong>和</strong>列(column)<strong>的形式存储数据，以便于用户理解。这一系列的行和列被称为</strong>表(table)**，一组表组成了一个库(database)。</li>\n<li>表与表之间的数据记录有关系(relationship)。现实世界中的各种实体以及实体之间的各种联系均用<strong>关系模型</strong>来表示。关系型数据库，就是建立在<strong>关系模型</strong>基础上的数据库。</li>\n<li>SQL 就是关系型数据库的查询语言。</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726095317374.png\" alt=\"image-20220726095317374\"></p>\n<h4 id=\"4-1-2-优势\"><a href=\"#4-1-2-优势\" class=\"headerlink\" title=\"4. 1. 2 优势\"></a>4. 1. 2 优势</h4><ul>\n<li><p><strong>复杂查询</strong> </p>\n<p>可以用SQL语句方便的在一个表以及多个表之间做非常复杂的数据查询。</p>\n</li>\n<li><p><strong>事务支持</strong> </p>\n<p>使得对于安全性能很高的数据访问要求得以实现。</p>\n</li>\n</ul>\n<h3 id=\"4-2-非关系型数据库-非RDBMS\"><a href=\"#4-2-非关系型数据库-非RDBMS\" class=\"headerlink\" title=\"4. 2 非关系型数据库(非RDBMS)\"></a>4. 2 非关系型数据库(非RDBMS)</h3><h4 id=\"4-2-1-介绍\"><a href=\"#4-2-1-介绍\" class=\"headerlink\" title=\"4. 2. 1 介绍\"></a>4. 2. 1 介绍</h4><p><strong>非关系型数据库</strong> ，可看成传统关系型数据库的功能<strong>阉割版本</strong>，基于键值对存储数据，不需要经过SQL层的解析，<strong>性能非常高</strong>。同时，通过减少不常用的功能，进一步提高性能。</p>\n<p>目前基本上大部分主流的非关系型数据库都是免费的。</p>\n<h4 id=\"4-2-2-有哪些非关系型数据库\"><a href=\"#4-2-2-有哪些非关系型数据库\" class=\"headerlink\" title=\"4. 2. 2 有哪些非关系型数据库\"></a>4. 2. 2 有哪些非关系型数据库</h4><p>相比于 SQL，NoSQL 泛指非关系型数据库，包括了榜单上的键值型数据库、文档型数据库、搜索引擎和列存储等，除此以外还包括图形数据库。也只有用 NoSQL 一词才能将这些技术囊括进来。</p>\n<p><strong>键值型数据库</strong></p>\n<p>键值型数据库通过 Key-Value 键值的方式来存储数据，其中 Key 和 Value 可以是简单的对象，也可以是复杂的对象。Key 作为唯一的标识符，优点是查找速度快，在这方面明显优于关系型数据库，缺点是无法像关系型数据库一样使用条件过滤（比如 WHERE），如果你不知道去哪里找数据，就要遍历所有的键，这就会消耗大量的计算。</p>\n<p>键值型数据库典型的使用场景是作为<strong>内存缓存</strong>。<strong>Redis</strong>是最流行的键值型数据库。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726095702944.png\" alt=\"image-20220726095702944\"></p>\n<p><strong>文档型数据库</strong></p>\n<p>此类数据库可存放并获取文档，可以是XML、JSON等格式。在数据库中文档作为处理信息的基本单位，一个文档就相当于一条记录。文档数据库所存放的文档，就相当于键值数据库所存放的“值”。MongoDB是最流行的文档型数据库。此外，还有CouchDB等。</p>\n<p><strong>搜索引擎数据库</strong></p>\n<p>虽然关系型数据库采用了索引提升检索效率，但是针对全文索引效率却较低。搜索引擎数据库是应用在搜索引擎领域的数据存储形式，由于搜索引擎会爬取大量的数据，并以特定的格式进行存储，这样在检索的时候才能保证性能最优。核心原理是“倒排索引”。</p>\n<p>典型产品：Solr、Elasticsearch、Splunk 等。</p>\n<p><strong>列式数据库</strong></p>\n<p>列式数据库是相对于行式存储的数据库，Oracle、MySQL、SQL Server 等数据库都是采用的行式存储（Row-based），而列式数据库是将数据按照列存储到数据库中，这样做的好处是可以大量降低系统的I&#x2F;O，适合于分布式文件系统，不足在于功能相对有限。典型产品：HBase等。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726095849770.png\" alt=\"image-20220726095849770\"></p>\n<p><strong>图形数据库</strong></p>\n<p>图形数据库，利用了图这种数据结构存储了实体（对象）之间的关系。图形数据库最典型的例子就是社交网络中人与人的关系，数据模型主要是以节点和边（关系）来实现，特点在于能高效地解决复杂的关系问题。</p>\n<p>图形数据库顾名思义，就是一种存储图形关系的数据库。它利用了图这种数据结构存储了实体（对象）之间的关系。关系型数据用于存储明确关系的数据，但对于复杂关系的数据存储却有些力不从心。如社交网络中人物之间的关系，如果用关系型数据库则非常复杂，用图形数据库将非常简单。典型产品：Neo4J、InfoGrid等。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726095950715.png\" alt=\"image-20220726095950715\"></p>\n<h4 id=\"4-2-3-NoSQL的演变\"><a href=\"#4-2-3-NoSQL的演变\" class=\"headerlink\" title=\"4. 2. 3 NoSQL的演变\"></a>4. 2. 3 NoSQL的演变</h4><p>由于 SQL 一直称霸 DBMS，因此许多人在思考是否有一种数据库技术能远离 SQL，于是 NoSQL 诞生了，但是随着发展却发现越来越离不开 SQL。到目前为止 NoSQL 阵营中的 DBMS 都会有实现类似 SQL 的功能。下面是“NoSQL”这个名词在不同时期的诠释，从这些释义的变化中可以看出 <strong>NoSQL 功能的演变</strong>：</p>\n<p>1970 ：NoSQL &#x3D; We have no SQL</p>\n<p>1980 ：NoSQL &#x3D; Know SQL</p>\n<p>2000 ：NoSQL &#x3D; No SQL!</p>\n<p>2005 ：NoSQL &#x3D; Not only SQL</p>\n<p>2013 ：NoSQL &#x3D; No, SQL!</p>\n<p>NoSQL 对 SQL 做出了很好的补充，比如实际开发中，有很多业务需求，其实并不需要完整的关系型数据库功能，非关系型数据库的功能就足够使用了。这种情况下，使用<strong>性能更高、成本更低</strong>的非关系型数据库当然是更明智的选择。比如：日志收集、排行榜、定时器等。</p>\n<h3 id=\"4-3-小结\"><a href=\"#4-3-小结\" class=\"headerlink\" title=\"4. 3 小结\"></a>4. 3 小结</h3><p>NoSQL 的分类很多，即便如此，在 DBMS 排名中，还是 SQL 阵营的比重更大，影响力前 5 的 DBMS 中有4 个是关系型数据库，而排名前 20 的 DBMS 中也有 12 个是关系型数据库。所以说，掌握 SQL 是非常有必要的。整套课程将围绕 SQL 展开。</p>\n<h2 id=\"5-关系型数据库设计规则\"><a href=\"#5-关系型数据库设计规则\" class=\"headerlink\" title=\"5. 关系型数据库设计规则\"></a>5. 关系型数据库设计规则</h2><ul>\n<li>关系型数据库的典型数据结构就是<strong>数据表</strong>，这些数据表的组成都是结构化的（Structured）。</li>\n<li>将数据放到表中，表再放到库中。</li>\n<li>一个数据库中可以有多个表，每个表都有一个名字，用来标识自己。表名具有唯一性。</li>\n<li>表具有一些特性，这些特性定义了数据在表中如何存储，类似Java和Python中 “类”的设计。</li>\n</ul>\n<h3 id=\"5-1-表、记录、字段\"><a href=\"#5-1-表、记录、字段\" class=\"headerlink\" title=\"5. 1 表、记录、字段\"></a>5. 1 表、记录、字段</h3><ul>\n<li>E-R（entity-relationship，实体-联系）模型中有三个主要概念是：<strong>实体集、属性、联系集</strong>。</li>\n<li>一个实体集（class）对应于数据库中的一个表（table），一个实体（instance）则对应于数据库表中的一行（row），也称为一条记录（record）。一个属性（attribute）对应于数据库表中的一列（column），也称为一个字段（field）。</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726100223471.png\" alt=\"image-20220726100223471\"></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #82AAFF\">ORM思想</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">Object</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">Relational</span><span style=\"color: #BABED8\"> Mapping</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\">体现：</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">数据库中的一个表 </span><span style=\"color: #89DDFF\">&lt;--</span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">Java或Python中的一个类</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">表中的一条数据 </span><span style=\"color: #89DDFF\">&lt;--</span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> 类中的一个对象（或实体）</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">表中的一个列 </span><span style=\"color: #89DDFF\">&lt;----&gt;</span><span style=\"color: #BABED8\"> 类中的一个字段、属性</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">fild</span><span style=\"color: #89DDFF\">)</span></span></code></pre></div><h3 id=\"5-2表的关联关系\"><a href=\"#5-2表的关联关系\" class=\"headerlink\" title=\"5.2表的关联关系\"></a>5.2表的关联关系</h3><ul>\n<li>表与表之间的数据记录有关系(relationship)。现实世界中的各种实体以及实体之间的各种联系均用关系模型来表示。</li>\n<li>四种：一对一关联、一对多关联、多对多关联、自我引用</li>\n</ul>\n<h4 id=\"5-2-1-一对一关联（one-to-one）\"><a href=\"#5-2-1-一对一关联（one-to-one）\" class=\"headerlink\" title=\"5.2.1 一对一关联（one-to-one）\"></a>5.2.1 一对一关联（one-to-one）</h4><ul>\n<li><p>在实际的开发中应用不多，因为一对一可以创建成一张表。</p>\n</li>\n<li><p>举例：设计<strong>学生表</strong>：学号、姓名、手机号码、班级、系别、身份证号码、家庭住址、籍贯、紧急 联系人、…</p>\n<ul>\n<li>拆为两个表：两个表的记录是一一对应关系。</li>\n<li><strong>基础信息表</strong>（常用信息）：学号、姓名、手机号码、班级、系别</li>\n<li><strong>档案信息表</strong>（不常用信息）：学号、身份证号码、家庭住址、籍贯、紧急联系人、..</li>\n</ul>\n</li>\n<li><p>两种建表原则：</p>\n<ul>\n<li><p>外键唯一：主表的主键和从表的外键（唯一），形成主外键关系，外键唯一。</p>\n</li>\n<li><p>外键是主键：主表的主键和从表的主键，形成主外键关系。</p>\n</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726100435230.png\" alt=\"image-20220726100435230\"></p>\n<h4 id=\"5-2-2-一对多关系（one-to-many）\"><a href=\"#5-2-2-一对多关系（one-to-many）\" class=\"headerlink\" title=\"5.2.2 一对多关系（one-to-many）\"></a>5.2.2 一对多关系（one-to-many）</h4><ul>\n<li><p>常见实例场景：<strong>客户表和订单表，分类表和商品表，部门表和员工表</strong>。</p>\n</li>\n<li><p>举例：</p>\n<ul>\n<li><p>员工表：编号、姓名、…、所属部门</p>\n</li>\n<li><p>部门表：编号、名称、简介</p>\n</li>\n</ul>\n</li>\n<li><p>一对多建表原则：在从表(多方)创建一个字段，字段作为外键指向主表(一方)的主键</p>\n</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726101022499.png\" alt=\"image-20220726101022499\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726101050705.png\" alt=\"image-20220726101050705\"></p>\n<h4 id=\"5-2-3-多对多（many-to-many）\"><a href=\"#5-2-3-多对多（many-to-many）\" class=\"headerlink\" title=\"5. 2. 3 多对多（many-to-many）\"></a>5. 2. 3 多对多（many-to-many）</h4><p> 要表示多对多关系，必须创建第三个表，该表通常称为<strong>联接表</strong>，它将多对多关系划分为两个一对多关系。将这两个表的主键都插入到第三个表中。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726101115961.png\" alt=\"image-20220726101115961\"></p>\n<ul>\n<li><p><strong>举例 1 ：学生-课程</strong></p>\n<ul>\n<li><p><strong>学生信息表</strong>：一行代表一个学生的信息（学号、姓名、手机号码、班级、系别…）</p>\n</li>\n<li><p><strong>课程信息表</strong>：一行代表一个课程的信息（课程编号、授课老师、简介…）</p>\n</li>\n<li><p><strong>选课信息表</strong>：一个学生可以选多门课，一门课可以被多个学生选择</p>\n</li>\n</ul>\n</li>\n</ul>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">学号 课程编号</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">1    1001</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">2    1001</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">1    1002</span></span></code></pre></div><ul>\n<li><strong>举例 2 ：产品-订单</strong><br> “订单”表和“产品”表有一种多对多的关系，这种关系是通过与“订单明细”表建立两个一对多关系来定义的。一个订单可以有多个产品，每个产品可以出现在多个订单中。<ul>\n<li><strong>产品表</strong>：“产品”表中的每条记录表示一个产品。</li>\n<li><strong>订单表</strong>：“订单”表中的每条记录表示一个订单。</li>\n<li><strong>订单明细表</strong>：每个产品可以与“订单”表中的多条记录对应，即出现在多个订单中。一个订单可以与“产品”表中的多条记录对应，即包含多个产品。</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726101253257.png\" alt=\"image-20220726101253257\"></p>\n<ul>\n<li><strong>举例 3 ：用户-角色</strong></li>\n<li>多对多关系建表原则：需要创建第三张表，中间表中至少两个字段，这两个字段分别作为外键指向各自一方的主键。</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726101316038.png\" alt=\"image-20220726101316038\"></p>\n<h4 id=\"5-2-4-自我引用-Self-reference\"><a href=\"#5-2-4-自我引用-Self-reference\" class=\"headerlink\" title=\"5.2.4 自我引用(Self reference)\"></a>5.2.4 自我引用(Self reference)</h4><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726101336782.png\" alt=\"image-20220726101336782\"></p>\n<hr>\n<h1 id=\"第-02-章-MySQL环境搭建\"><a href=\"#第-02-章-MySQL环境搭建\" class=\"headerlink\" title=\"第 02 章_MySQL环境搭建\"></a>第 02 章_MySQL环境搭建</h1><h2 id=\"1-MySQL的卸载\"><a href=\"#1-MySQL的卸载\" class=\"headerlink\" title=\"1. MySQL的卸载\"></a>1. MySQL的卸载</h2><h3 id=\"步骤-1-：停止MySQL服务\"><a href=\"#步骤-1-：停止MySQL服务\" class=\"headerlink\" title=\"步骤 1 ：停止MySQL服务\"></a>步骤 1 ：停止MySQL服务</h3><p>在卸载之前，先停止MySQL8.0的服务。按键盘上的“Ctrl + Alt + Delete”组合键，打开“任务管理器”对话框，可以在“服务”列表找到“MySQL8.0”的服务，如果现在“正在运行”状态，可以右键单击服务，选择“停止”选项停止MySQL8.0的服务，如图所示。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921141605050.png\" alt=\"image-20220921141605050\"></p>\n<h3 id=\"步骤-2-：软件的卸载\"><a href=\"#步骤-2-：软件的卸载\" class=\"headerlink\" title=\"步骤 2 ：软件的卸载\"></a>步骤 2 ：软件的卸载</h3><p><strong>方式 1 ：通过控制面板方式</strong></p>\n<p>卸载MySQL8.0的程序可以和其他桌面应用程序一样直接在“控制面板”选择“卸载程序”，并在程序列表中找到MySQL8.0服务器程序，直接双击卸载即可，如图所示。这种方式删除，数据目录下的数据不会跟着删除。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921141631153.png\" alt=\"image-20220921141631153\"></p>\n<p><strong>方式 2 ：通过 360 或电脑管家等软件卸载</strong></p>\n<p>略</p>\n<p><strong>方式 3 ：通过安装包提供的卸载功能卸载</strong></p>\n<p>你也可以通过安装向导程序进行MySQL8.0服务器程序的卸载。</p>\n<p>① 再次双击下载的mysql-installer-community-8.0.26.0.msi文件，打开安装向导。安装向导会自动检测已安装的MySQL服务器程序。</p>\n<p>② 选择要卸载的MySQL服务器程序，单击“Remove”（移除），即可进行卸载。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921141656145.png\" alt=\"image-20220921141656145\"></p>\n<p>③ 单击“Next”（下一步）按钮，确认卸载。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921141722824.png\" alt=\"image-20220921141722824\"></p>\n<p>④ 弹出是否同时移除数据目录选择窗口。如果想要同时删除MySQL服务器中的数据，则勾选“Remove thedata directory”，如图所示。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921141746332.png\" alt=\"image-20220921141746332\"></p>\n<p>⑤ 执行卸载。单击“Execute”（执行）按钮进行卸载。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921141802464.png\" alt=\"image-20220921141802464\"></p>\n<p>⑥ 完成卸载。单击“Finish”（完成）按钮即可。如果想要同时卸载MySQL8.0的安装向导程序，勾选“Yes，Uninstall MySQL Installer”即可，如图所示。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921141817257.png\" alt=\"image-20220921141817257\"></p>\n<h3 id=\"步骤-3-：残余文件的清理\"><a href=\"#步骤-3-：残余文件的清理\" class=\"headerlink\" title=\"步骤 3 ：残余文件的清理\"></a>步骤 3 ：残余文件的清理</h3><p>如果再次安装不成功，可以卸载后对残余文件进行清理后再安装。</p>\n<p>（ 1 ）服务目录：mysql服务的安装目录<br>（ 2 ）数据目录：默认在C:\\ProgramData\\MySQL<br>如果自己单独指定过数据目录，就找到自己的数据目录进行删除即可。</p>\n<p>注意：</p>\n<ul>\n<li>请在卸载前做好数据备份</li>\n<li>在操作完以后，需要重启计算机，然后进行安装即可。 <strong>如果仍然安装失败，需要继续操作如下步骤 4</strong> 。</li>\n</ul>\n<h3 id=\"步骤-4-：清理注册表（选做）\"><a href=\"#步骤-4-：清理注册表（选做）\" class=\"headerlink\" title=\"步骤 4 ：清理注册表（选做）\"></a>步骤 4 ：清理注册表（选做）</h3><p>如果前几步做了，再次安装还是失败，那么可以清理注册表。</p>\n<p>如何打开注册表编辑器：在系统的搜索框中输入<code>regedit</code></p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet001\\Services\\Eventlog\\Application\\MySQL服务 目录删除</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet001\\Services\\MySQL服务 目录删除</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet002\\Services\\Eventlog\\Application\\MySQL服务 目录删除</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet002\\Services\\MySQL服务 目录删除</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Eventlog\\Application\\MySQL服务目录删除</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\MySQL服务删除</span></span></code></pre></div><ul>\n<li>注册表中的ControlSet001,ControlSet002,不一定是001和002,可能是ControlSet005、006之类</li>\n</ul>\n<h3 id=\"步骤-5-：删除环境变量配置\"><a href=\"#步骤-5-：删除环境变量配置\" class=\"headerlink\" title=\"步骤 5 ：删除环境变量配置\"></a>步骤 5 ：删除环境变量配置</h3><p>找到path环境变量，将其中关于mysql的环境变量删除， <strong>切记不要全部删除。</strong><br>例如：删除 D:\\develop_tools\\mysql\\MySQLServer8.0.26\\bin; 这个部分</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921142249274.png\" alt=\"image-20220921142249274\"></p>\n<h2 id=\"2-MySQL的下载、安装、配置\"><a href=\"#2-MySQL的下载、安装、配置\" class=\"headerlink\" title=\"2. MySQL的下载、安装、配置\"></a>2. MySQL的下载、安装、配置</h2><h3 id=\"2-1-MySQL的-4-大版本\"><a href=\"#2-1-MySQL的-4-大版本\" class=\"headerlink\" title=\"2. 1 MySQL的 4 大版本\"></a>2. 1 MySQL的 4 大版本</h3><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">MySQL Community Server 社区版本 ，开源免费，自由下载，但不提供官方技术支持，适用于大多数普通用户。</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">MySQL Enterprise Edition 企业版本 ，需付费，不能在线下载，可以试用 30 天。提供了更多的功能和更完备的技术支持，更适合于对数据库的功能和可靠性要求较高的企业客户。</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">MySQL Cluster 集群版 ，开源免费。用于架设集群服务器，可将几个MySQL Server封装成一个Server。需要在社区版或企业版的基础上使用。</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">MySQL Cluster CGE 高级集群版 ，需付费。</span></span></code></pre></div><ul>\n<li><p>目前最新版本为<code> 8.0.27</code>，发布时间 <code>2021 年 10 月</code>。此前，8.0.0 在 2016.9.12日就发布了。</p>\n</li>\n<li><p>本课程中使用<code>8.0.26</code>版本。</p>\n</li>\n</ul>\n<p>此外，官方还提供了<code>MySQL Workbench</code>（GUITOOL）一款专为MySQL设计的<code>图形界面管理工具</code>。<br>MySQLWorkbench又分为两个版本，分别是<code>社区版</code>（MySQL Workbench OSS）、<code>商用版</code>（MySQL  WorkbenchSE）。</p>\n<h3 id=\"2-2-软件的下载\"><a href=\"#2-2-软件的下载\" class=\"headerlink\" title=\"2. 2 软件的下载\"></a>2. 2 软件的下载</h3><p><strong>1.下载地址</strong></p>\n<p>官网： <strong><a href=\"https://www.mysql.com/\">https://www.mysql.com</a></strong></p>\n<p><strong>2. 打开官网，点击DOWNLOADS</strong></p>\n<p>然后，点击<code>MySQL Community(GPL) Downloads</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921142740271.png\" alt=\"image-20220921142740271\"></p>\n<p><strong>3. 点击 MySQL Community Server</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921142825278.png\" alt=\"image-20220921142825278\"></p>\n<p><strong>4. 在General Availability(GA) Releases中选择适合的版本</strong></p>\n<p>Windows平台下提供两种安装文件：MySQL二进制分发版（.msi安装文件）和免安装版（.zip压缩文件）。一般来讲，应当使用二进制分发版，因为该版本提供了图形化的安装向导过程，比其他的分发版使用起来要简单，不再需要其他工具启动就可以运行MySQL。</p>\n<ul>\n<li>这里在Windows 系统下推荐下载MSI安装程序；点击Go to Download Page进行下载即可</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921142911928.png\" alt=\"image-20220921142911928\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921142925308.png\" alt=\"image-20220921142925308\"></p>\n<ul>\n<li>Windows下的MySQL 8. 0 安装有两种安装程序<ul>\n<li><code>mysql-installer-web-community-8.0.26.0.msi</code> 下载程序大小： 2. 4 M；安装时需要联网安装组件。</li>\n<li><code>mysql-installer-community-8.0.26.0.msi</code> 下载程序大小： 450. 7 M；安装时离线安装即可。 <strong>推荐。</strong></li>\n</ul>\n</li>\n<li>如果安装MySQL 5. 7 版本的话，选择<code>Archives</code>，接着选择MySQL 5. 7 的相应版本即可。这里下载最近期的MySQL 5. 7. 34 版本。</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921143044018.png\" alt=\"image-20220921143044018\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921143059341.png\" alt=\"image-20220921143059341\"></p>\n<h3 id=\"2-3-MySQL-8-0-版本的安装\"><a href=\"#2-3-MySQL-8-0-版本的安装\" class=\"headerlink\" title=\"2. 3 MySQL 8. 0 版本的安装\"></a>2. 3 MySQL 8. 0 版本的安装</h3><p>MySQL下载完成后，找到下载文件，双击进行安装，具体操作步骤如下。</p>\n<p>步骤 1 ：双击下载的mysql-installer-community-8.0.26.0.msi文件，打开安装向导。</p>\n<p>步骤 2 ：打开“Choosing a Setup Type”（选择安装类型）窗口，在其中列出了 5 种安装类型，分别是Developer Default（默认安装类型）、Server only（仅作为服务器）、Client only（仅作为客户端）、Full（完全安装）、Custom（自定义安装）。这里选择“Custom（自定义安装）”类型按钮，单击“Next(下一步)”按钮。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921143155203.png\" alt=\"image-20220921143155203\"></p>\n<p>步骤 3 ：打开“Select Products” （选择产品）窗口，可以定制需要安装的产品清单。例如，选择“MySQL Server 8.0.26-X64”后，单击“→”添加按钮，即可选择安装MySQL服务器，如图所示。采用通用的方法，可以添加其他你需要安装的产品。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921143214777.png\" alt=\"image-20220921143214777\"></p>\n<p>此时如果直接“Next”（下一步），则产品的安装路径是默认的。如果想要自定义安装目录，则可以选中对应的产品，然后在下面会出现“Advanced Options”（高级选项）的超链接。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921143229911.png\" alt=\"image-20220921143229911\"></p>\n<p>单击“Advanced Options”（高级选项）则会弹出安装目录的选择窗口，如图所示，此时你可以分别设置MySQL的服务程序安装目录和数据存储目录。如果不设置，默认分别在C盘的Program Files目录和ProgramData目录（这是一个隐藏目录）。如果自定义安装目录，请避免“中文”目录。另外，建议服务目录和数据目录分开存放。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921143246115.png\" alt=\"image-20220921143246115\"></p>\n<p>步骤 4 ：在上一步选择好要安装的产品之后，单击“Next”（下一步）进入确认窗口，如图所示。单击“Execute”（执行）按钮开始安装。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921143258202.png\" alt=\"image-20220921143258202\"></p>\n<p>步骤 5 ：安装完成后在“Status”（状态）列表下将显示“Complete”（安装完成），如图所示。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921143317370.png\" alt=\"image-20220921143317370\"></p>\n<h3 id=\"2-4-配置MySQL-8-0\"><a href=\"#2-4-配置MySQL-8-0\" class=\"headerlink\" title=\"2. 4 配置MySQL 8. 0\"></a>2. 4 配置MySQL 8. 0</h3><p>MySQL安装之后，需要对服务器进行配置。具体的配置步骤如下。</p>\n<p>步骤 1 ：在上一个小节的最后一步，单击“Next”（下一步）按钮，就可以进入产品配置窗口。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921143342524.png\" alt=\"image-20220921143342524\"></p>\n<p>步骤 2 ：单击“Next”（下一步）按钮，进入MySQL服务器类型配置窗口，如图所示。端口号一般选择默认端口号 3306 。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921143401067.png\" alt=\"image-20220921143401067\"></p>\n<p>其中，“Config Type”选项用于设置服务器的类型。单击该选项右侧的下三角按钮，即可查看 3 个选项，如图所示。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921143415162.png\" alt=\"image-20220921143415162\"></p>\n<ul>\n<li><code>Development Machine（开发机器）</code>：该选项代表典型个人用桌面工作站。此时机器上需要运行多个应用程序，那么MySQL服务器将占用最少的系统资源。</li>\n<li><code>Server Machine（服务器）</code>：该选项代表服务器，MySQL服务器可以同其他服务器应用程序一起运行，例如Web服务器等。MySQL服务器配置成适当比例的系统资源。</li>\n<li><code>Dedicated Machine（专用服务器）</code>：该选项代表只运行MySQL服务的服务器。MySQL服务器配置成使用所有可用系统资源。</li>\n</ul>\n<p>步骤 3 ：单击“Next”（下一步）按钮，打开设置授权方式窗口。其中，上面的选项是MySQL8.0提供的新的授权方式，采用SHA256基础的密码加密方法；下面的选项是传统授权方法（保留5.x版本兼容性）。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921143543992.png\" alt=\"image-20220921143543992\"></p>\n<p>步骤 4 ：单击“Next”（下一步）按钮，打开设置服务器root超级管理员的密码窗口，如图所示，需要输入两次同样的登录密码。也可以通过“Add User”添加其他用户，添加其他用户时，需要指定用户名、允许该用户名在哪台&#x2F;哪些主机上登录，还可以指定用户角色等。此处暂不添加用户，用户管理在MySQL高级特性篇中讲解。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921143607894.png\" alt=\"image-20220921143607894\"></p>\n<p>步骤 5 ：单击“Next”（下一步）按钮，打开设置服务器名称窗口，如图所示。该服务名会出现在Windows服务列表中，也可以在命令行窗口中使用该服务名进行启动和停止服务。本书将服务名设置为“MySQL80”。如果希望开机自启动服务，也可以勾选“Start the MySQL Server at System Startup”选项（推荐）。</p>\n<p>下面是选择以什么方式运行服务？可以选择“Standard System Account”(标准系统用户)或者“Custom User”(自定义用户)中的一个。这里推荐前者。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921143625819.png\" alt=\"image-20220921143625819\"></p>\n<p>步骤 6 ：单击“Next”（下一步）按钮，打开确认设置服务器窗口，单击“Execute”（执行）按钮。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921143638770.png\" alt=\"image-20220921143638770\"></p>\n<p>步骤 7 ：完成配置，如图所示。单击“Finish”（完成）按钮，即可完成服务器的配置。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921143650482.png\" alt=\"image-20220921143650482\"></p>\n<p>步骤 8 ：如果还有其他产品需要配置，可以选择其他产品，然后继续配置。如果没有，直接选择“Next”（下一步），直接完成整个安装和配置过程。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921143710728.png\" alt=\"image-20220921143710728\"></p>\n<p>步骤 9 ：结束安装和配置。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921143721372.png\" alt=\"image-20220921143721372\"></p>\n<h3 id=\"2-5-配置MySQL-8-0-环境变量\"><a href=\"#2-5-配置MySQL-8-0-环境变量\" class=\"headerlink\" title=\"2. 5 配置MySQL 8. 0 环境变量\"></a>2. 5 配置MySQL 8. 0 环境变量</h3><p>如果不配置MySQL环境变量，就不能在命令行直接输入MySQL登录命令。下面说如何配置MySQL的环境变量：<br>步骤 1 ：在桌面上右击【此电脑】图标，在弹出的快捷菜单中选择【属性】菜单命令。<br>步骤 2 ：打开【系统】窗口，单击【高级系统设置】链接。<br>步骤 3 ：打开【系统属性】对话框，选择【高级】选项卡，然后单击【环境变量】按钮。<br>步骤 4 ：打开【环境变量】对话框，在系统变量列表中选择path变量。<br>步骤5 ：单击【编辑】按钮，在【编辑环境变量】对话框中，将MySQL应用程序的bin目录（C:\\Program Files\\MySQL\\MySQL Server 8.0\\bin）添加到变量值中，用分号将其与其他路径分隔开。<br>步骤 6 ：添加完成之后，单击【确定】按钮，这样就完成了配置path变量的操作，然后就可以直接输入MySQL命令来登录数据库了。</p>\n<h3 id=\"2-6-MySQL-5-7-版本的安装、配置\"><a href=\"#2-6-MySQL-5-7-版本的安装、配置\" class=\"headerlink\" title=\"2. 6 MySQL 5. 7 版本的安装、配置\"></a>2. 6 MySQL 5. 7 版本的安装、配置</h3><ul>\n<li><strong>安装</strong></li>\n</ul>\n<p>此版本的安装过程与上述过程除了版本号不同之外，其它环节都是相同的。所以这里省略了MySQL5.7.34版本的安装截图。</p>\n<ul>\n<li><strong>配置</strong></li>\n</ul>\n<p>配置环节与MySQL8.0版本确有细微不同。大部分情况下直接选择“Next”即可，不影响整理使用。<br>这里配置MySQL5.7时，重点强调： <strong>与前面安装好的MySQL 8. 0 不能使用相同的端口号。</strong></p>\n<h3 id=\"2-7-安装失败问题\"><a href=\"#2-7-安装失败问题\" class=\"headerlink\" title=\"2. 7 安装失败问题\"></a>2. 7 安装失败问题</h3><p>MySQL的安装和配置是一件非常简单的事，但是在操作过程中也可能出现问题，特别是初学者。</p>\n<p><strong>问题 1 ：无法打开MySQL 8. 0 软件安装包或者安装过程中失败，如何解决？</strong></p>\n<p>在运行MySQL8.0软件安装包之前，用户需要确保系统中已经安装了.Net Framework相关软件，如果缺少此软件，将不能正常地安装MySQL8.0软件。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921143918162.png\" alt=\"image-20220921143918162\"></p>\n<p>解决方案：到这个地址 <strong><a href=\"https://www.microsoft.com/en-us/download/details.aspx?id=42642\">https://www.microsoft.com/en-us/download/details.aspx?id=42642</a></strong> 下载Microsoft.NET Framework 4.5并安装后，再去安装MySQL。</p>\n<p>另外，还要确保Windows Installer正常安装。windows上安装mysql8.0需要操作系统提前已安装好Microsoft Visual C++ 2015-2019。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921144056522.png\" alt=\"image-20220921144056522\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921144107404.png\" alt=\"image-20220921144107404\"></p>\n<p>解决方案同样是，提前到微软官网 <strong><a href=\"https://support.microsoft.com/en-us/topic/the-latest-supported-visual-c-downloads-2647da03-1eea-4433-9aff-95f26a218cc0\">https://support.microsoft.com/en-us/topic/the-latest-supported-visual-c-downloads-2647da03-1eea-4433-9aff-95f26a218cc0</a></strong> ，下载相应的环境。</p>\n<p><strong>问题 2 ：卸载重装MySQL失败？</strong></p>\n<p>该问题通常是因为MySQL卸载时，没有完全清除相关信息导致的。</p>\n<p>解决办法是，把以前的安装目录删除。如果之前安装并未单独指定过服务安装目录，则默认安装目录是“C:\\Program Files\\MySQL”，彻底删除该目录。同时删除MySQL的Data目录，如果之前安装并未单独指定过数据目录，则默认安装目录是“C:\\ProgramData\\MySQL”，该目录一般为隐藏目录。删除后，重新安装即可。</p>\n<p><strong>问题 3 ：如何在Windows系统删除之前的未卸载干净的MySQL服务列表？</strong></p>\n<p>操作方法如下，在系统“搜索框”中输入“cmd”，按“Enter”（回车）键确认，弹出命令提示符界面。然后输入“sc delete MySQL服务名”,按“Enter”（回车）键，就能彻底删除残余的MySQL服务了。</p>\n<h2 id=\"3-MySQL的登录\"><a href=\"#3-MySQL的登录\" class=\"headerlink\" title=\"3. MySQL的登录\"></a>3. MySQL的登录</h2><h3 id=\"3-1-服务的启动与停止\"><a href=\"#3-1-服务的启动与停止\" class=\"headerlink\" title=\"3. 1 服务的启动与停止\"></a>3. 1 服务的启动与停止</h3><p>MySQL安装完毕之后，需要启动服务器进程，不然客户端无法连接数据库。<br>在前面的配置过程中，已经将MySQL安装为Windows服务，并且勾选当Windows启动、停止时，MySQL也自动启动、停止。</p>\n<h4 id=\"方式-1-：使用图形界面工具\"><a href=\"#方式-1-：使用图形界面工具\" class=\"headerlink\" title=\"方式 1 ：使用图形界面工具\"></a>方式 1 ：使用图形界面工具</h4><ul>\n<li>步骤 1 ：打开windows服务<ul>\n<li>方式 1 ：计算机（点击鼠标右键）→ 管理（点击）→ 服务和应用程序（点击）→ 服务（点击）</li>\n<li>方式 2 ：控制面板（点击）→ 系统和安全（点击）→ 管理工具（点击）→ 服务（点击）</li>\n<li>方式 3 ：任务栏（点击鼠标右键）→ 启动任务管理器（点击）→ 服务（点击）</li>\n<li>方式 4 ：单击【开始】菜单，在搜索框中输入“services.msc”，按Enter键确认</li>\n</ul>\n</li>\n<li>步骤 2 ：找到MySQL80（点击鼠标右键）→ 启动或停止（点击）</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921144328115.png\" alt=\"image-20220921144328115\"></p>\n<h4 id=\"方式-2-：使用命令行工具\"><a href=\"#方式-2-：使用命令行工具\" class=\"headerlink\" title=\"方式 2 ：使用命令行工具\"></a>方式 2 ：使用命令行工具</h4><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\"># 启动 MySQL 服务命令：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">net start MySQL服务名</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"># 停止 MySQL 服务命令：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">net stop MySQL服务名</span></span></code></pre></div><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921144430044.png\" alt=\"image-20220921144430044\"></p>\n<p>说明：</p>\n<ol>\n<li>start和stop后面的服务名应与之前配置时指定的服务名一致。</li>\n<li>如果当你输入命令后，提示“拒绝服务”，请以系统管理员身份打开命令提示符界面重新尝试。</li>\n</ol>\n<h3 id=\"3-2-自带客户端的登录与退出\"><a href=\"#3-2-自带客户端的登录与退出\" class=\"headerlink\" title=\"3. 2 自带客户端的登录与退出\"></a>3. 2 自带客户端的登录与退出</h3><p>当MySQL服务启动完成后，便可以通过客户端来登录MySQL数据库。注意：确认服务是开启的。</p>\n<h4 id=\"登录方式-1-：MySQL自带客户端\"><a href=\"#登录方式-1-：MySQL自带客户端\" class=\"headerlink\" title=\"登录方式 1 ：MySQL自带客户端\"></a>登录方式 1 ：MySQL自带客户端</h4><p>开始菜单 → 所有程序 → MySQL → MySQL 8.0 Command Line Client</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921144529869.png\" alt=\"image-20220921144529869\"></p>\n<p>说明：仅限root用户</p>\n<h4 id=\"登录方式-2-：windows命令行\"><a href=\"#登录方式-2-：windows命令行\" class=\"headerlink\" title=\"登录方式 2 ：windows命令行\"></a>登录方式 2 ：windows命令行</h4><ul>\n<li>格式：</li>\n</ul>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">mysql -h 主机名 -P 端口号 -u 用户名 -p密码</span></span></code></pre></div><ul>\n<li>举例：</li>\n</ul>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">mysql -h localhost -P 3306 -u root -pabc123 # 这里我设置的root用户的密码是abc123</span></span></code></pre></div><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921144650655.png\" alt=\"image-20220921144650655\"></p>\n<p>注意：</p>\n<p>（ 1 ）-p与密码之间不能有空格，其他参数名与参数值之间可以有空格也可以没有空格。如：</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">mysql -hlocalhost -P3306 -uroot -pabc123</span></span></code></pre></div><p>（ 2 ）密码建议在下一行输入，保证安全</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">mysql -h localhost -P 3306 -u root -p</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">Enter password:****</span></span></code></pre></div><p>（ 3 ）客户端和服务器在同一台机器上，所以输入localhost或者IP地址127.0.0.1。同时，因为是连接本机： -hlocalhost就可以省略，如果端口号没有修改：-P3306也可以省略<br>简写成：</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">mysql -u root -p</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">Enter password:****</span></span></code></pre></div><p>连接成功后，有关于MySQL Server服务版本的信息，还有第几次连接的id标识。<br>也可以在命令行通过以下方式获取MySQL Server服务版本的信息：</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">c:\\&gt; mysql -V</span></span></code></pre></div><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">c:\\&gt; mysql --version</span></span></code></pre></div><p>或 <strong>登录</strong> 后，通过以下方式查看当前版本信息：</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">mysql&gt; select version();</span></span></code></pre></div><h4 id=\"退出登录\"><a href=\"#退出登录\" class=\"headerlink\" title=\"退出登录\"></a>退出登录</h4><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">exit</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">或</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">quit</span></span></code></pre></div><h2 id=\"4-MySQL演示使用\"><a href=\"#4-MySQL演示使用\" class=\"headerlink\" title=\"4. MySQL演示使用\"></a>4. MySQL演示使用</h2><h3 id=\"4-1-MySQL的使用演示\"><a href=\"#4-1-MySQL的使用演示\" class=\"headerlink\" title=\"4. 1 MySQL的使用演示\"></a>4. 1 MySQL的使用演示</h3><p>1 、查看所有的数据库</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">show databases;</span></span></code></pre></div><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">“information_schema”是 MySQL 系统自带的数据库，主要保存 MySQL 数据库服务器的系统信息，比如数据库的名称、数据表的名称、字段名称、存取权限、数据文件 所在的文件夹和系统使用的文件夹，等等</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">“performance_schema”是 MySQL 系统自带的数据库，可以用来监控 MySQL 的各类性能指标。</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">“sys”数据库是 MySQL 系统自带的数据库，主要作用是以一种更容易被理解的方式展示 MySQL 数据库服务器的各类性能指标，帮助系统管理员和开发人员监控 MySQL 的技术性能。</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">“mysql”数据库保存了 MySQL 数据库服务器运行时需要的系统信息，比如数据文件夹、当前使用的字符集、约束检查信息，等等</span></span></code></pre></div><p>为什么 Workbench 里面我们只能看到“demo”和“sys”这 2 个数据库呢？</p>\n<p>这是因为，Workbench 是图形化的管理工具，主要面向开发人 员，“demo”和“sys”这 2 个数据库已经够用了。如果有特殊需求，比如，需要监控 MySQL 数据库各项性能指标、直接操作 MySQL 数据库系统文件等，可以由 DBA 通过 SQL 语句，查看其它的系统数据库。</p>\n<p>2 、创建自己的数据库</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">create</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">database</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">数据库名</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">#创建atguigudb数据库，该名称不能与已经存在的数据库重名。</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">create</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">database</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">atguigudb</span><span style=\"color: #BABED8\">;</span></span></code></pre></div><p>3 、使用自己的数据库</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">use</span><span style=\"color: #BABED8\"> 数据库名;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">#使用atguigudb数据库</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">use</span><span style=\"color: #BABED8\"> atguigudb;</span></span></code></pre></div><p>说明：如果没有使用use语句，后面针对数据库的操作也没有加“数据名”的限定，那么会报“ERROR 1046(3D000): No database selected”（没有选择数据库）</p>\n<p>使用完use语句之后，如果接下来的SQL都是针对一个数据库操作的，那就不用重复use了，如果要针对另一个数据库操作，那么要重新use。</p>\n<p>4 、查看某个库的所有表格</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">show tables;  #要求前面有use语句</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">show tables </span><span style=\"color: #F78C6C\">from</span><span style=\"color: #BABED8\"> 数据库名;</span></span></code></pre></div><p>5 、创建新的表格</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">create</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">table</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">表名称</span><span style=\"color: #BABED8\">(</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    字段名 数据类型,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    字段名 数据类型</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">);</span></span></code></pre></div><p>说明：如果是最后一个字段，后面就用加逗号，因为逗号的作用是分割每个字段。</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">#创建学生表</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">create</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">table</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">student</span><span style=\"color: #BABED8\">(</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    id </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F78C6C\">name</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">varchar</span><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">20</span><span style=\"color: #BABED8\">) #说名字最长不超过20个字符</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">);</span></span></code></pre></div><p>6 、查看一个表的数据</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">select</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">from</span><span style=\"color: #BABED8\"> 数据库表名称;</span></span></code></pre></div><div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">#查看学生表的数据</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">select</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">from</span><span style=\"color: #BABED8\"> student;</span></span></code></pre></div><p>7 、添加一条记录</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">insert into</span><span style=\"color: #BABED8\"> 表名称 </span><span style=\"color: #F78C6C\">values</span><span style=\"color: #BABED8\">(值列表);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">#添加两条记录到student表中</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">insert into</span><span style=\"color: #BABED8\"> student </span><span style=\"color: #F78C6C\">values</span><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">,</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">张三</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">);</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">insert into</span><span style=\"color: #BABED8\"> student </span><span style=\"color: #F78C6C\">values</span><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\">,</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">李四</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">);</span></span></code></pre></div><p>报错：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">mysql</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">insert into</span><span style=\"color: #BABED8\"> student </span><span style=\"color: #F78C6C\">values</span><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">,</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">张三</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">ERROR </span><span style=\"color: #F78C6C\">1366</span><span style=\"color: #BABED8\"> (HY000): Incorrect string </span><span style=\"color: #F78C6C\">value</span><span style=\"color: #BABED8\">: </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">\\xD5\\xC5\\xC8\\xFD</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">for</span><span style=\"color: #BABED8\"> column </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">name</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">at</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">row</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">mysql</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">insert into</span><span style=\"color: #BABED8\"> student </span><span style=\"color: #F78C6C\">values</span><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\">,</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">李四</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">ERROR </span><span style=\"color: #F78C6C\">1366</span><span style=\"color: #BABED8\"> (HY000): Incorrect string </span><span style=\"color: #F78C6C\">value</span><span style=\"color: #BABED8\">: </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">\\xC0\\xEE\\xCB\\xC4</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">for</span><span style=\"color: #BABED8\"> column </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">name</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">at</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">row</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">mysql</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> show </span><span style=\"color: #F78C6C\">create</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">table</span><span style=\"color: #BABED8\"> student;</span></span></code></pre></div><p>字符集的问题。</p>\n<p>8 、查看表的创建信息</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">show </span><span style=\"color: #F78C6C\">create</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">table</span><span style=\"color: #BABED8\"> 表名称\\G</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">#查看student表的详细创建信息</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">show </span><span style=\"color: #F78C6C\">create</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">table</span><span style=\"color: #BABED8\"> student\\G</span></span></code></pre></div><div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">#结果如下</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">***************************</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">. </span><span style=\"color: #F78C6C\">row</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">***************************</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">Table</span><span style=\"color: #BABED8\">: student</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">Create</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">Table</span><span style=\"color: #BABED8\">: </span><span style=\"color: #F78C6C\">CREATE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">TABLE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">student</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #BABED8\"> (</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">id</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">11</span><span style=\"color: #BABED8\">) </span><span style=\"color: #C792EA\">DEFAULT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">NULL</span><span style=\"color: #BABED8\">,</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">name</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">varchar</span><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">20</span><span style=\"color: #BABED8\">) </span><span style=\"color: #C792EA\">DEFAULT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">NULL</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">) ENGINE</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">InnoDB </span><span style=\"color: #C792EA\">DEFAULT</span><span style=\"color: #BABED8\"> CHARSET</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">latin1</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">row</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">in</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">set</span><span style=\"color: #BABED8\"> (</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">00</span><span style=\"color: #BABED8\"> sec)</span></span></code></pre></div><p>上面的结果显示student的表格的默认字符集是“latin1”不支持中文。</p>\n<p>9 、查看数据库的创建信息</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">show </span><span style=\"color: #F78C6C\">create</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">database</span><span style=\"color: #BABED8\"> 数据库名\\G</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">#查看atguigudb数据库的详细创建信息</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">show </span><span style=\"color: #F78C6C\">create</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">database</span><span style=\"color: #BABED8\"> atguigudb\\G</span></span></code></pre></div><div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">#结果如下</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">***************************</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">. </span><span style=\"color: #F78C6C\">row</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">***************************</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">Database</span><span style=\"color: #BABED8\">: atguigudb</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">Create</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">Database</span><span style=\"color: #BABED8\">: </span><span style=\"color: #F78C6C\">CREATE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">DATABASE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">atguigudb</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">/*!40100 DEFAULT CHARACTER SET latin1 */</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">row</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">in</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">set</span><span style=\"color: #BABED8\"> (</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">00</span><span style=\"color: #BABED8\"> sec)</span></span></code></pre></div><p>上面的结果显示atguigudb数据库也不支持中文，字符集默认是latin1。</p>\n<p>10 、删除表格</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">drop</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">table</span><span style=\"color: #BABED8\"> 表名称;</span></span></code></pre></div><div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">#删除学生表</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">drop</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">table</span><span style=\"color: #BABED8\"> student;</span></span></code></pre></div><p>11 、删除数据库</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">drop</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">database</span><span style=\"color: #BABED8\"> 数据库名;</span></span></code></pre></div><div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">#删除atguigudb数据库</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">drop</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">database</span><span style=\"color: #BABED8\"> atguigudb;</span></span></code></pre></div><h3 id=\"4-2-MySQL的编码设置\"><a href=\"#4-2-MySQL的编码设置\" class=\"headerlink\" title=\"4. 2 MySQL的编码设置\"></a>4. 2 MySQL的编码设置</h3><h4 id=\"MySQL-5-7-中\"><a href=\"#MySQL-5-7-中\" class=\"headerlink\" title=\"MySQL 5. 7 中\"></a>MySQL 5. 7 中</h4><p><strong>问题再现：命令行操作sql乱码问题</strong></p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">mysql</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">INSERT INTO</span><span style=\"color: #BABED8\"> t_stu </span><span style=\"color: #F78C6C\">VALUES</span><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">,</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">张三</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">,</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">男</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">ERROR </span><span style=\"color: #F78C6C\">1366</span><span style=\"color: #BABED8\"> (HY000): Incorrect string </span><span style=\"color: #F78C6C\">value</span><span style=\"color: #BABED8\">: </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">\\xD5\\xC5\\xC8\\xFD</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">for</span><span style=\"color: #BABED8\"> column </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">sname</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">at</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">row</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span></span></code></pre></div><p><strong>问题解决</strong></p>\n<p>步骤 1 ：查看编码命令</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">show variables like &#39;character_%&#39;;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">show variables like &#39;collation_%&#39;;</span></span></code></pre></div><p>步骤 2 ：修改mysql的数据目录下的my.ini配置文件</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">[mysql] #大概在63行左右，在其下添加</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">...</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">default</span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">character</span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">set</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">utf8 #默认字符集</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">[mysqld] # 大概在76行左右，在其下添加</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">...</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">character</span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">set</span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">server</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">utf8</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">collation</span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">server</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">utf8_general_ci</span></span></code></pre></div><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">注意：建议修改配置文件使用notepad++等高级文本编辑器，使用记事本等软件打开修改后可能会</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">导致文件编码修改为“含BOM头”的编码，从而服务重启失败。</span></span></code></pre></div><p>步骤 3 ：重启服务</p>\n<p>步骤 4 ：查看编码命令</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">show variables </span><span style=\"color: #F78C6C\">like</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">character_%</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">show variables </span><span style=\"color: #F78C6C\">like</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">collation_%</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">;</span></span></code></pre></div><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921150012517.png\" alt=\"image-20220921150012517\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921150022637.png\" alt=\"image-20220921150022637\"></p>\n<ul>\n<li>如果是以上配置就说明对了。接着我们就可以新创建数据库、新创建数据表，接着添加包含中文的数据了。</li>\n</ul>\n<h4 id=\"MySQL-8-0-中\"><a href=\"#MySQL-8-0-中\" class=\"headerlink\" title=\"MySQL 8. 0 中\"></a>MySQL 8. 0 中</h4><p>在MySQL 8.0版本之前，默认字符集为latin1，utf8字符集指向的是utf8mb3。网站开发人员在数据库设计的时候往往会将编码修改为utf8字符集。如果遗忘修改默认的编码，就会出现乱码的问题。从MySQL 8.0开始，数据库的默认编码改为<code>utf8mb4</code>，从而避免了上述的乱码问题。</p>\n<h2 id=\"5-MySQL图形化管理工具\"><a href=\"#5-MySQL图形化管理工具\" class=\"headerlink\" title=\"5. MySQL图形化管理工具\"></a>5. MySQL图形化管理工具</h2><p>MySQL图形化管理工具极大地方便了数据库的操作与管理，常用的图形化管理工具有：MySQL Workbench、phpMyAdmin、Navicat Preminum、MySQLDumper、SQLyog、dbeaver、MySQL ODBC  Connector。</p>\n<h3 id=\"工具1-MySQL-Workbench\"><a href=\"#工具1-MySQL-Workbench\" class=\"headerlink\" title=\"工具1. MySQL Workbench\"></a>工具1. MySQL Workbench</h3><p>MySQL官方提供的图形化管理工具MySQL Workbench完全支持MySQL 5.0以上的版本。MySQL Workbench分为社区版和商业版，社区版完全免费，而商业版则是按年收费。</p>\n<p>MySQL Workbench 为数据库管理员、程序开发者和系统规划师提供可视化设计、模型建立、以及数据库管理功能。它包含了用于创建复杂的数据建模ER模型，正向和逆向数据库工程，也可以用于执行通常需要花费大量时间的、难以变更和管理的文档任务。</p>\n<p>下载地址： <strong><a href=\"http://dev.mysql.com/downloads/workbench/\">http://dev.mysql.com/downloads/workbench/</a></strong> </p>\n<p>使用：</p>\n<p>首先，我们点击 Windows 左下角的“开始”按钮，如果你是 Win10 系统，可以直接看到所有程序。接着，找到“MySQL”，点开，找到“MySQL Workbench 8.0 CE”。点击打开 Workbench，如下图所示：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921150204752.png\" alt=\"image-20220921150204752\"></p>\n<p>左下角有个本地连接，点击，录入 Root 的密码，登录本地MySQL 数据库服务器，如下图所示：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921150218223.png\" alt=\"image-20220921150218223\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921150346258.png\" alt=\"image-20220921150346258\"></p>\n<p>这是一个图形化的界面，我来给你介绍下这个界面。</p>\n<ul>\n<li>上方是菜单。左上方是导航栏，这里我们可以看到 MySQL 数据库服务器里面的数据 库，包括数据表、视图、存储过程和函数；左下方是信息栏，可以显示上方选中的数据 库、数据表等对象的信息。</li>\n<li>中间上方是工作区，你可以在这里写 SQL 语句，点击上方菜单栏左边的第三个运行按 钮，就可以执行工作区的 SQL 语句了。</li>\n<li>中间下方是输出区，用来显示 SQL 语句的运行情况，包括什么时间开始运行的、运行的 内容、运行的输出，以及所花费的时长等信息。</li>\n</ul>\n<p>好了，下面我们就用 Workbench 实际创建一个数据库，并且导入一个 Excel 数据文件， 来生成一个数据表。数据表是存储数据的载体，有了数据表以后，我们就能对数据进行操作了。</p>\n<h3 id=\"工具2-Navicat\"><a href=\"#工具2-Navicat\" class=\"headerlink\" title=\"工具2. Navicat\"></a>工具2. Navicat</h3><p>Navicat MySQL是一个强大的MySQL数据库服务器管理和开发工具。它可以与任何3.21或以上版本的MySQL一起工作，支持触发器、存储过程、函数、事件、视图、管理用户等，对于新手来说易学易用。其精心设计的图形用户界面（GUI）可以让用户用一种安全简便的方式来快速方便地创建、组织、访问和共享信息。Navicat支持中文，有免费版本提供。 下载地址： <strong><a href=\"http://www.navicat.com/\">http://www.navicat.com/</a></strong> 。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921150518636.png\" alt=\"image-20220921150518636\"></p>\n<h3 id=\"工具3-SQLyog\"><a href=\"#工具3-SQLyog\" class=\"headerlink\" title=\"工具3. SQLyog\"></a>工具3. SQLyog</h3><p>SQLyog 是业界著名的 Webyog 公司出品的一款简洁高效、功能强大的图形化 MySQL 数据库管理工具。<br>这款工具是使用C++语言开发的。该工具可以方便地创建数据库、表、视图和索引等，还可以方便地进行插入、更新和删除等操作，同时可以方便地进行数据库、数据表的备份和还原。该工具不仅可以通过SQL文件进行大量文件的导入和导出，还可以导入和导出XML、HTML和CSV等多种格式的数据。</p>\n<p>下载地址： <strong><a href=\"http://www.webyog.com/\">http://www.webyog.com/</a></strong> ，读者也可以搜索中文版的下载地址。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921150605161.png\" alt=\"image-20220921150605161\"></p>\n<h3 id=\"工具-4-：dbeaver\"><a href=\"#工具-4-：dbeaver\" class=\"headerlink\" title=\"工具 4 ：dbeaver\"></a>工具 4 ：dbeaver</h3><p>DBeaver是一个通用的数据库管理工具和 SQL 客户端，支持所有流行的数据库：MySQL、PostgreSQL、SQLite、Oracle、DB2、SQL Server、 Sybase、MS Access、Teradata、 Firebird、Apache Hive、Phoenix、Presto等。DBeaver比大多数的SQL管理工具要轻量，而且支持中文界面。DBeaver社区版作为一个免费开源的产品，和其他类似的软件相比，在功能和易用性上都毫不逊色。</p>\n<p>唯一需要注意是 DBeaver 是用Java编程语言开发的，所以需要拥有 JDK（Java Development ToolKit）环境。如果电脑上没JDK，在选择安装DBeaver组件时，勾选“Include Java”即可。</p>\n<p>下载地址： <strong><a href=\"https://dbeaver.io/download/\">https://dbeaver.io/download/</a></strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921150650914.png\" alt=\"image-20220921150650914\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921150707548.png\" alt=\"image-20220921150707548\"></p>\n<h3 id=\"可能出现连接问题：\"><a href=\"#可能出现连接问题：\" class=\"headerlink\" title=\"可能出现连接问题：\"></a>可能出现连接问题：</h3><p>有些图形界面工具，特别是旧版本的图形界面工具，在连接MySQL8时出现“Authentication plugin’caching_sha2_password’ cannot be loaded”错误。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921150743771.png\" alt=\"image-20220921150743771\"></p>\n<p>出现这个原因是MySQL8之前的版本中加密规则是mysql_native_password，而在MySQL8之后，加密规则是caching_sha2_password。解决问题方法有两种，第一种是升级图形界面工具版本，第二种是把MySQL8用户登录密码加密规则还原成mysql_native_password。</p>\n<p>第二种解决方案如下，用命令行登录MySQL数据库之后，执行如下命令修改用户密码加密规则并更新用户密码，这里修改用户名为“root@localhost”的用户密码规为“mysql_native_password”，密码值为“123456”，如图所示。</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">#使用mysql数据库</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">USE</span><span style=\"color: #BABED8\"> mysql;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">#修改</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">root</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">@</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">localhost</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">用户的密码规则和密码</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">ALTER</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">USER</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">root</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">@</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">localhost</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\"> IDENTIFIED </span><span style=\"color: #F78C6C\">WITH</span><span style=\"color: #BABED8\"> mysql_native_password </span><span style=\"color: #F78C6C\">BY</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">abc123</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">#刷新权限</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">FLUSH PRIVILEGES;</span></span></code></pre></div><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921150850823.png\" alt=\"image-20220921150850823\"></p>\n<h2 id=\"6-MySQL目录结构与源码\"><a href=\"#6-MySQL目录结构与源码\" class=\"headerlink\" title=\"6. MySQL目录结构与源码\"></a>6. MySQL目录结构与源码</h2><h3 id=\"6-1-主要目录结构\"><a href=\"#6-1-主要目录结构\" class=\"headerlink\" title=\"6. 1 主要目录结构\"></a>6. 1 主要目录结构</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921150926221.png\" alt=\"image-20220921150926221\"></p>\n<h3 id=\"6-2-MySQL-源代码获取\"><a href=\"#6-2-MySQL-源代码获取\" class=\"headerlink\" title=\"6. 2 MySQL 源代码获取\"></a>6. 2 MySQL 源代码获取</h3><p>首先，你要进入 MySQL下载界面。 这里你不要选择用默认的“Microsoft Windows”，而是要通过下拉栏，找到“Source Code”，在下面的操作系统版本里面， 选择 Windows（Architecture Independent），然后点击下载。</p>\n<p>接下来，把下载下来的压缩文件解压，我们就得到了 MySQL 的源代码。</p>\n<p>MySQL 是用 C++ 开发而成的，我简单介绍一下源代码的组成。</p>\n<p>mysql-8.0.22 目录下的各个子目录，包含了 MySQL 各部分组件的源代码：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921151004024.png\" alt=\"image-20220921151004024\"></p>\n<ul>\n<li>sql 子目录是 MySQL 核心代码；</li>\n<li>libmysql 子目录是客户端程序 API；</li>\n<li>mysql-test 子目录是测试工具；</li>\n<li>mysys 子目录是操作系统相关函数和辅助函数；</li>\n</ul>\n<p>源代码可以用记事本打开查看，如果你有 C++ 的开发环境，也可以在开发环境中打开查看。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921151033988.png\" alt=\"image-20220921151033988\"></p>\n<p>如上图所示，源代码并不神秘，就是普通的 C++ 代码，跟你熟悉的一样，而且有很多注释，可以帮助你理解。阅读源代码就像在跟 MySQL 的开发人员对话一样，十分有趣。</p>\n<h2 id=\"7-常见问题的解决-课外内容\"><a href=\"#7-常见问题的解决-课外内容\" class=\"headerlink\" title=\"7. 常见问题的解决(课外内容)\"></a>7. 常见问题的解决(课外内容)</h2><h3 id=\"问题-1-：root用户密码忘记，重置的操作\"><a href=\"#问题-1-：root用户密码忘记，重置的操作\" class=\"headerlink\" title=\"问题 1 ：root用户密码忘记，重置的操作\"></a>问题 1 ：root用户密码忘记，重置的操作</h3><p>1: 通过任务管理器或者服务管理，关掉mysqld(服务进程) </p>\n<p>2: 通过命令行+特殊参数开启mysqld mysqld –defaults-file&#x3D;”D:\\ProgramFiles\\mysql\\MySQLServer5.7Data\\my.ini” –skip-grant-tables</p>\n<p>3: 此时，mysqld服务进程已经打开。并且不需要权限检查</p>\n<p>4: mysql -uroot 无密码登陆服务器。另启动一个客户端进行 </p>\n<p>5: 修改权限表 </p>\n<p>（ 1 ） use mysql; </p>\n<p>（ 2 ）update user set authentication_string&#x3D;password(‘新密码’) where user&#x3D;’root’ and Host&#x3D;’localhost’; </p>\n<p>（ 3 ）flush privileges;</p>\n<p>6: 通过任务管理器，关掉mysqld服务进程。 </p>\n<p>7: 再次通过服务管理，打开mysql服务。 </p>\n<p>8: 即可用修改后的新密码登陆。</p>\n<h3 id=\"问题-2-：mysql命令报“不是内部或外部命令”\"><a href=\"#问题-2-：mysql命令报“不是内部或外部命令”\" class=\"headerlink\" title=\"问题 2 ：mysql命令报“不是内部或外部命令”\"></a>问题 2 ：mysql命令报“不是内部或外部命令”</h3><p>如果输入mysql命令报“不是内部或外部命令”，把mysql安装目录的bin目录配置到环境变量path中。如下：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921151240089.png\" alt=\"image-20220921151240089\"></p>\n<h3 id=\"问题-3-：错误ERROR-：没有选择数据库就操作表格和数据\"><a href=\"#问题-3-：错误ERROR-：没有选择数据库就操作表格和数据\" class=\"headerlink\" title=\"问题 3 ：错误ERROR ：没有选择数据库就操作表格和数据\"></a>问题 3 ：错误ERROR ：没有选择数据库就操作表格和数据</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921151312934.png\" alt=\"image-20220921151312934\"></p>\n<h3 id=\"问题-4-：命令行客户端的字符集问题\"><a href=\"#问题-4-：命令行客户端的字符集问题\" class=\"headerlink\" title=\"问题 4 ：命令行客户端的字符集问题\"></a>问题 4 ：命令行客户端的字符集问题</h3><div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">mysql</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">INSERT INTO</span><span style=\"color: #BABED8\"> t_stu </span><span style=\"color: #F78C6C\">VALUES</span><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">,</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">张三</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">,</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">男</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">ERROR </span><span style=\"color: #F78C6C\">1366</span><span style=\"color: #BABED8\"> (HY000): Incorrect string </span><span style=\"color: #F78C6C\">value</span><span style=\"color: #BABED8\">: </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">\\xD5\\xC5\\xC8\\xFD</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">for</span><span style=\"color: #BABED8\"> column </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">sname</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">at</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">row</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span></span></code></pre></div><p>原因：服务器端认为你的客户端的字符集是utf- 8 ，而实际上你的客户端的字符集是GBK。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921151353092.png\" alt=\"image-20220921151353092\"></p>\n<p>查看所有字符集： <strong>SHOW VARIABLES LIKE ‘character_set_%’;</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921151411354.png\" alt=\"image-20220921151411354\"></p>\n<p>解决方案，设置当前连接的客户端字符集 “**SET NAMES GBK;**”</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921151441816.png\" alt=\"image-20220921151441816\"></p>\n<h3 id=\"问题-5-：修改数据库和表的字符编码\"><a href=\"#问题-5-：修改数据库和表的字符编码\" class=\"headerlink\" title=\"问题 5 ：修改数据库和表的字符编码\"></a>问题 5 ：修改数据库和表的字符编码</h3><p>修改编码：</p>\n<p>（1)先停止服务，（ 2 ）修改my.ini文件（ 3 ）重新启动服务</p>\n<p>说明：</p>\n<p>如果是在修改my.ini之前建的库和表，那么库和表的编码还是原来的Latin1，要么删了重建，要么使用alter语句修改编码。</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">mysql</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">create</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">database</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0728</span><span style=\"color: #BABED8\"> db charset Latin1;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">Query OK, </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">row</span><span style=\"color: #BABED8\"> affected (</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">00</span><span style=\"color: #BABED8\"> sec)</span></span></code></pre></div><div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">mysql</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">use</span><span style=\"color: #BABED8\"> 0728db;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">Database</span><span style=\"color: #BABED8\"> changed</span></span></code></pre></div><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921151807383.png\" alt=\"image-20220921151807383\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921151816673.png\" alt=\"image-20220921151816673\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921151825858.png\" alt=\"image-20220921151825858\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220921151834430.png\" alt=\"image-20220921151834430\"></p>\n<h1 id=\"第-03-章-基本的SELECT语句\"><a href=\"#第-03-章-基本的SELECT语句\" class=\"headerlink\" title=\"第 03 章_基本的SELECT语句\"></a>第 03 章_基本的SELECT语句</h1><h2 id=\"1-SQL概述\"><a href=\"#1-SQL概述\" class=\"headerlink\" title=\"1. SQL概述\"></a>1. SQL概述</h2><h3 id=\"1-1-SQL背景知识\"><a href=\"#1-1-SQL背景知识\" class=\"headerlink\" title=\"1. 1 SQL背景知识\"></a>1. 1 SQL背景知识</h3><ul>\n<li>1946 年，世界上第一台电脑诞生，如今，借由这台电脑发展起来的互联网已经自成江湖。在这几十年里，无数的技术、产业在这片江湖里沉浮，有的方兴未艾，有的已经几幕兴衰。但在这片浩荡的波动里，有一门技术从未消失，甚至“老当益壮”，那就是 SQL。<ul>\n<li>45 年前，也就是 1974 年，IBM 研究员发布了一篇揭开数据库技术的论文《SEQUEL：一门结构化的英语查询语言》，直到今天这门结构化的查询语言并没有太大的变化，相比于其他语言，<strong>SQL 的半衰期可以说是非常长了</strong>。</li>\n</ul>\n</li>\n<li>不论是前端工程师，还是后端算法工程师，都一定会和数据打交道，都需要了解如何又快又准确地提取自己想要的数据。更别提数据分析师了，他们的工作就是和数据打交道，整理不同的报告，以便指导业务决策。</li>\n<li>SQL（Structured Query Language，结构化查询语言）是使用关系模型的数据库应用语言，<strong>与数据直接打交道</strong>，由<strong>IBM</strong>上世纪 70 年代开发出来。后由美国国家标准局（ANSI）开始着手制定SQL标准，先后有<strong>SQL- 86 ，SQL- 89 ，SQL- 92 ，SQL- 99</strong> 等标准。<ul>\n<li>SQL 有两个重要的标准，分别是 SQL92 和 SQL99，它们分别代表了 92 年和 99 年颁布的 SQL 标准，我们今天使用的 SQL 语言依然遵循这些标准。</li>\n</ul>\n</li>\n<li>不同的数据库生产厂商都支持SQL语句，但都有特有内容。</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726104029071.png\" alt=\"image-20220726104029071\"></p>\n<h3 id=\"1-2-SQL语言排行榜\"><a href=\"#1-2-SQL语言排行榜\" class=\"headerlink\" title=\"1. 2 SQL语言排行榜\"></a>1. 2 SQL语言排行榜</h3><p>自从 SQL 加入了 TIOBE 编程语言排行榜，就一直保持在 Top 10。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726104142235.png\" alt=\"image-20220726104142235\"></p>\n<h3 id=\"1-3-SQL-分类\"><a href=\"#1-3-SQL-分类\" class=\"headerlink\" title=\"1. 3 &#x3D;&#x3D;SQL 分类&#x3D;&#x3D;\"></a>1. 3 &#x3D;&#x3D;SQL 分类&#x3D;&#x3D;</h3><p>SQL语言在功能上主要分为如下 3 大类：</p>\n<ul>\n<li><p><strong>DDL（Data Definition Languages、数据定义语言）</strong> ，这些语句定义了不同的数据库、表、视图、索引等数据库对象，还可以用来创建、删除、修改数据库和数据表的结构。</p>\n<ul>\n<li>主要的语句关键字包括&#x3D;&#x3D;CREATE&#x3D;&#x3D;、&#x3D;&#x3D;DROP&#x3D;&#x3D;、&#x3D;&#x3D;ALTER&#x3D;&#x3D;、&#x3D;&#x3D;RENAME&#x3D;&#x3D;、&#x3D;&#x3D;TRUNCATE&#x3D;&#x3D;等。</li>\n</ul>\n</li>\n<li><p><strong>DML（Data Manipulation Language、数据操作语言）</strong> ，用于添加、删除、更新和查询数据库记录，并检查数据完整性。</p>\n</li>\n<li><p>主要的语句关键字包括&#x3D;&#x3D;INSERT&#x3D;&#x3D;、&#x3D;&#x3D;DELETE&#x3D;&#x3D;、&#x3D;&#x3D;UPDATE&#x3D;&#x3D;、&#x3D;&#x3D;SELECT&#x3D;&#x3D;等。</p>\n</li>\n<li><p><strong>SELECT是SQL语言的基础，最为重要</strong>。</p>\n</li>\n<li><p><strong>DCL（Data Control Language、数据控制语言）</strong> ，用于定义数据库、表、字段、用户的访问权限和安全级别。</p>\n<ul>\n<li>主要的语句关键字包括&#x3D;&#x3D;GRANT&#x3D;&#x3D;、&#x3D;&#x3D;REVOKE&#x3D;&#x3D;、&#x3D;&#x3D;COMMIT&#x3D;&#x3D;、&#x3D;&#x3D;ROLLBACK&#x3D;&#x3D;、&#x3D;&#x3D;SAVEPOINT&#x3D;&#x3D;等。</li>\n</ul>\n</li>\n</ul>\n<p>​\t因为查询语句使用的非常的频繁，所以很多人把查询语句单拎出来一类：DQL（数据查询语言）。</p>\n<p>​\t还有单独将&#x3D;&#x3D;COMMIT&#x3D;&#x3D;、&#x3D;&#x3D;ROLLBACK&#x3D;&#x3D; 取出来称为TCL （Transaction Control Language，事务控制语言）。</p>\n<h2 id=\"2-SQL语言的规则与规范\"><a href=\"#2-SQL语言的规则与规范\" class=\"headerlink\" title=\"2. SQL语言的规则与规范\"></a>2. SQL语言的规则与规范</h2><h3 id=\"2-1-基本规则\"><a href=\"#2-1-基本规则\" class=\"headerlink\" title=\"2. 1 基本规则\"></a>2. 1 基本规则</h3><ul>\n<li><p>SQL 可以写在一行或者多行。为了提高可读性，各子句分行写，必要时使用缩进</p>\n</li>\n<li><p>每条命令以 ; 或 \\g 或 \\G 结束</p>\n</li>\n<li><p>关键字不能被缩写也不能分行</p>\n</li>\n<li><p>关于标点符号</p>\n<ul>\n<li><p>必须保证所有的()、单引号、双引号是成对结束的</p>\n</li>\n<li><p>必须使用英文状态下的半角输入方式</p>\n</li>\n<li><p>字符串型和日期时间类型的数据可以使用单引号（’ ‘）表示</p>\n</li>\n<li><p>列的别名，尽量使用双引号（” “），而且不建议省略as</p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2-2-SQL大小写规范-（建议遵守）\"><a href=\"#2-2-SQL大小写规范-（建议遵守）\" class=\"headerlink\" title=\"2. 2 SQL大小写规范 （建议遵守）\"></a>2. 2 SQL大小写规范 （建议遵守）</h3><ul>\n<li><p><strong>MySQL 在 Windows 环境下是大小写不敏感的</strong></p>\n</li>\n<li><p><strong>MySQL 在 Linux 环境下是大小写敏感的</strong></p>\n<ul>\n<li><p>数据库名、表名、表的别名、变量名是严格区分大小写的</p>\n</li>\n<li><p>关键字、函数名、列名(或字段名)、列的别名(字段的别名) 是忽略大小写的。</p>\n</li>\n</ul>\n</li>\n<li><p><strong>推荐采用统一的书写规范：</strong></p>\n<ul>\n<li><p>数据库名、表名、表别名、字段名、字段别名等都<strong>小写</strong></p>\n</li>\n<li><p>SQL 关键字、函数名、绑定变量等都<strong>大写</strong></p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2-3-注-释\"><a href=\"#2-3-注-释\" class=\"headerlink\" title=\"2. 3 注 释\"></a>2. 3 注 释</h3><p>可以使用如下格式的注释结构</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">单行注释：#注释文字(MySQL特有的方式)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">单行注释：</span><span style=\"color: #676E95; font-style: italic\">-- 注释文字(--后面必须包含一个空格。)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">多行注释：</span><span style=\"color: #676E95; font-style: italic\">/* 注释文字 */</span></span></code></pre></div><h3 id=\"2-4-命名规则（暂时了解）\"><a href=\"#2-4-命名规则（暂时了解）\" class=\"headerlink\" title=\"2. 4 命名规则（暂时了解）\"></a>2. 4 命名规则（暂时了解）</h3><ul>\n<li>数据库、表名不得超过 30 个字符，变量名限制为 29 个</li>\n<li>必须只能包含 A–Z, a–z, 0–9, _共 63 个字符</li>\n<li>数据库名、表名、字段名等对象名中间不要包含空格</li>\n<li>同一个MySQL软件中，数据库不能同名；同一个库中，表不能重名；同一个表中，字段不能重名</li>\n<li>必须保证你的字段没有和保留字、数据库系统或常用方法冲突。如果坚持使用，请在SQL语句中使用&#96;（着重号）引起来</li>\n<li>保持字段名和类型的一致性，在命名字段并为其指定数据类型的时候一定要保证一致性。假如数据类型在一个表里是整数，那在另一个表里可就别变成字符型了</li>\n</ul>\n<p>举例：</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\"> #以下两句是一样的，不区分大小写</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">show databases;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SHOW DATABASES;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\"> #创建表格</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">#create table student info(...); #表名错误，因为表名有空格</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">create table student_info(...);</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">#其中order使用``飘号，因为order和系统关键字或系统函数名等预定义标识符重名了</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">CREATE TABLE `order`(</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        id INT,</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        lname VARCHAR( 20 )</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">);</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">select id as &quot;编号&quot;, `name` as &quot;姓名&quot; from t_stu; #起别名时，as都可以省略</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">select id as 编号, `name` as 姓名 from t_stu; #如果字段别名中没有空格，那么可以省略&quot;&quot;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">select id as 编 号, `name` as 姓 名 from t_stu; #错误，如果字段别名中有空格，那么不能省略&quot;&quot;</span></span></code></pre></div><h3 id=\"2-5-数据导入指令\"><a href=\"#2-5-数据导入指令\" class=\"headerlink\" title=\"2. 5 数据导入指令\"></a>2. 5 数据导入指令</h3><p>在命令行客户端登录mysql（mysql -uroot -P3306 -p），使用source指令导入</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">mysql&gt; source d:\\mysqldb.sql</span></span></code></pre></div><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">mysql&gt; desc employees;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+----------------+-------------+------+-----+---------+-------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| Field | Type | Null | Key | Default | Extra |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+----------------+-------------+------+-----+---------+-------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| employee_id | int( 6 ) | NO | PRI | 0 | |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| first_name | varchar( 20 ) | YES | | NULL | |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| last_name | varchar( 25 ) | NO | | NULL | |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| email | varchar( 25 ) | NO | UNI | NULL | |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| phone_number | varchar( 20 ) | YES | | NULL | |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| hire_date | date | NO | | NULL | |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| job_id | varchar( 10 ) | NO | MUL | NULL | |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| salary | double( 8 , 2 ) | YES | | NULL | |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| commission_pct | double( 2 , 2 ) | YES | | NULL | |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| manager_id | int( 6 ) | YES | MUL | NULL | |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| department_id | int( 4 ) | YES | MUL | NULL | |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+----------------+-------------+------+-----+---------+-------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">11 rows in set (0.00 sec)</span></span></code></pre></div><h2 id=\"3-基本的SELECT语句\"><a href=\"#3-基本的SELECT语句\" class=\"headerlink\" title=\"3. 基本的SELECT语句\"></a>3. 基本的SELECT语句</h2><h3 id=\"3-0-SELECT…\"><a href=\"#3-0-SELECT…\" class=\"headerlink\" title=\"3. 0 SELECT…\"></a>3. 0 SELECT…</h3><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT 1 ; #没有任何子句</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT 9 /2; #没有任何子句</span></span></code></pre></div><h3 id=\"3-1-SELECT-…-FROM\"><a href=\"#3-1-SELECT-…-FROM\" class=\"headerlink\" title=\"3. 1 SELECT … FROM\"></a>3. 1 SELECT … FROM</h3><ul>\n<li>语法：</li>\n</ul>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT 标识选择哪些列</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM 标识从哪个表中选择</span></span></code></pre></div><ul>\n<li>选择全部列：</li>\n</ul>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT *</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM departments;</span></span></code></pre></div><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726110634303.png\" alt=\"image-20220726110634303\"></p>\n<ul>\n<li><p>一般情况下，除非需要使用表中所有的字段数据，最好不要使用通配符‘*’。使用通配符虽然可以节 省输入查询语句的时间，但是获取不需要的列数据通常会降低查询和所使用的应用程序的率。通配符的优势是，当不知道所需要的列的名称时，可以通过它获取它们。</p>\n</li>\n<li><p>在生产环境下，不推荐你直接使用**SELECT ***进行查询。</p>\n</li>\n<li><p>选择特定的列：</p>\n</li>\n</ul>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT department_id, location_id</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM departments;</span></span></code></pre></div><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726110651298.png\" alt=\"image-20220726110651298\"></p>\n<p>​\t\tMySQL中的SQL语句是不区分大小写的，因此SELECT和select的作用是相同的，但是，许多开发人员习惯将关键字大写、数据列和表名小写，读者也应该养成一个良好的编程习惯，这样写出来的代码更容易阅读和维护。</p>\n<h3 id=\"3-2-列的别名\"><a href=\"#3-2-列的别名\" class=\"headerlink\" title=\"3. 2 列的别名\"></a>3. 2 列的别名</h3><ul>\n<li>重命名一个列</li>\n<li>便于计算</li>\n<li>紧跟列名，也可以 <strong>在列名和别名之间加入关键字AS(alias别名)，别名使用双引号</strong> ，以便在别名中包含空格或特殊的字符并区分大小写。</li>\n<li>AS(alias) 可以省略</li>\n<li>别名用一对双引号“ ”引起来，不要使用单引号’  ‘</li>\n<li>建议别名简短，见名知意</li>\n<li>举例</li>\n</ul>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT last_name AS name, commission_pct comm</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees;</span></span></code></pre></div><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726110745497.png\" alt=\"image-20220726110745497\"></p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT last_name &quot;Name&quot;, salary* 12 &quot;Annual Salary&quot;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees;</span></span></code></pre></div><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726110806853.png\" alt=\"image-20220726110806853\"></p>\n<h3 id=\"3-3-去除重复行\"><a href=\"#3-3-去除重复行\" class=\"headerlink\" title=\"3. 3 去除重复行\"></a>3. 3 去除重复行</h3><p>默认情况下，查询会返回全部行，包括重复行。</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT department_id</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees;</span></span></code></pre></div><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726110842543.png\" alt=\"image-20220726110842543\"></p>\n<p><strong>在SELECT语句中使用关键字&#x3D;&#x3D;DISTINCT&#x3D;&#x3D;去除重复行</strong></p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT DISTINCT department_id</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees;</span></span></code></pre></div><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726110906556.png\" alt=\"image-20220726110906556\"></p>\n<p>针对于：</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT DISTINCT department_id,salary</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees;</span></span></code></pre></div><p>这里有两点需要注意：</p>\n<ul>\n<li><ol>\n<li>DISTINCT 需要放到所有列名的前面，如果写成<code>SELECT salary, DISTINCT department_id FROM employees</code>会报错。</li>\n</ol>\n</li>\n<li><ol start=\"2\">\n<li>DISTINCT 其实是对后面所有列名的组合进行去重，你能看到最后的结果是 74 条，因为这 74 个部门id不同，都有 salary 这个属性值。如果你想要看都有哪些不同的部门（department_id），只需要写<code>DISTINCT department_id</code>即可，后面不需要再加其他的列名了。</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"3-4-空值参与运算\"><a href=\"#3-4-空值参与运算\" class=\"headerlink\" title=\"3. 4 空值参与运算\"></a>3. 4 空值参与运算</h3><ul>\n<li>所有运算符或列值遇到null值，运算的结果都为null</li>\n</ul>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT employee_id,salary,commission_pct,12 * salary * ( 1 + commission_pct) &quot;annual_sal&quot;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT employee_id,salary&quot;月工资&quot;,salary*(1+IFNULL(commission_pct,0))*12 &quot;年工资&quot;,commission_pct</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees;</span></span></code></pre></div><ul>\n<li>这里你一定要注意，在 MySQL 里面， 空值不等于空字符串。<strong>一个空字符串的长度是 0 ，而一个空值的长度是空</strong>。而且，在MySQL 里面，空值是占用空间的。</li>\n</ul>\n<h3 id=\"3-5-着重号\"><a href=\"#3-5-着重号\" class=\"headerlink\" title=\"3. 5 着重号\"></a>3. 5 着重号</h3><ul>\n<li>错误的</li>\n</ul>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">mysql&gt; SELECT * FROM ORDER;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">ERROR 1064 ( 42000 ): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#39;ORDER&#39; at line 1</span></span></code></pre></div><ul>\n<li>正确的</li>\n</ul>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">mysql&gt; SELECT * FROM `ORDER`;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+----------+------------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| order_id | order_name |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+----------+------------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| 1 | shkstart |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| 2 | tomcat |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| 3 | dubbo |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+----------+------------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">3 rows in set (0.00 sec)</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">mysql&gt; SELECT * FROM `order`;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+----------+------------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| order_id | order_name |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+----------+------------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| 1 | shkstart |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| 2 | tomcat |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| 3 | dubbo |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+----------+------------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">3 rows in set (0.00 sec)</span></span></code></pre></div><ul>\n<li>结论：<br>我们需要保证表中的字段、表名等没有和保留字、数据库系统或常用方法冲突。如果真的相同，请在SQL语句中使用一对 &#96;&#96;（着重号）引起来。</li>\n</ul>\n<h3 id=\"3-6-查询常数\"><a href=\"#3-6-查询常数\" class=\"headerlink\" title=\"3. 6  查询常数\"></a>3. 6  查询常数</h3><p> SELECT 查询还可以对常数进行查询。对的，就是在 SELECT 查询结果中增加一列固定的常数列。这列的取值是我们指定的，而不是从数据表中动态取出的。</p>\n<p>你可能会问为什么我们还要对常数进行查询呢？</p>\n<p>SQL 中的 SELECT 语法的确提供了这个功能，一般来说我们只从一个表中查询数据，通常不需要增加一个固定的常数列，但如果我们想整合不同的数据源，用常数列作为这个表的标记，就需要查询常数。</p>\n<p>比如说，我们想对 employees 数据表中的员工姓名进行查询，同时增加一列字段corporation，这个字段固定值为“尚硅谷”，可以这写：</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT &#39;尚硅谷&#39; AS corporation, last_name </span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees;</span></span></code></pre></div><h2 id=\"4-显示表结构\"><a href=\"#4-显示表结构\" class=\"headerlink\" title=\"4. 显示表结构\"></a>4. 显示表结构</h2><p>使用&#x3D;&#x3D;DESCRIBE&#x3D;&#x3D; 或 &#x3D;&#x3D;DESC&#x3D;&#x3D; 命令，表示表结构。</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">DESCRIBE employees;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">或</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">DESC employees;</span></span></code></pre></div><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">mysql&gt; desc employees;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+----------------+-------------+------+-----+---------+-------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| Field | Type | Null | Key | Default | Extra |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+----------------+-------------+------+-----+---------+-------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| employee_id | int( 6 ) | NO | PRI | 0 | |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| first_name | varchar( 20 ) | YES | | NULL | |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| last_name | varchar( 25 ) | NO | | NULL | |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| email | varchar( 25 ) | NO | UNI | NULL | |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| phone_number | varchar( 20 ) | YES | | NULL | |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| hire_date | date | NO | | NULL | |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| job_id | varchar( 10 ) | NO | MUL | NULL | |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| salary | double( 8 , 2 ) | YES | | NULL | |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| commission_pct | double( 2 , 2 ) | YES | | NULL | |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| manager_id | int( 6 ) | YES | MUL | NULL | |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| department_id | int( 4 ) | YES | MUL | NULL | |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+----------------+-------------+------+-----+---------+-------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">11 rows in set (0.00 sec)</span></span></code></pre></div><p>其中，各个字段的含义分别解释如下：</p>\n<ul>\n<li>Field：表示字段名称。</li>\n<li>Type：表示字段类型，这里 barcode、goodsname 是文本型的，price 是整数类型的。</li>\n<li>Null：表示该列是否可以存储NULL值。</li>\n<li>Key：表示该列是否已编制索引。PRI表示该列是表主键的一部分；UNI表示该列是UNIQUE索引的一部分；MUL表示在列中某个给定值允许出现多次。</li>\n<li>Default：表示该列是否有默认值，如果有，那么值是多少。</li>\n<li>Extra：表示可以获取的与给定列有关的附加信息，例如AUTO_INCREMENT等。</li>\n</ul>\n<h2 id=\"5-过滤数据\"><a href=\"#5-过滤数据\" class=\"headerlink\" title=\"5. 过滤数据\"></a>5. 过滤数据</h2><ul>\n<li>背景：</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726111140295.png\" alt=\"image-20220726111140295\"></p>\n<ul>\n<li>语法：</li>\n</ul>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\"> SELECT 字段1,字段 2</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"> FROM 表名</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"> WHERE 过滤条件</span></span></code></pre></div><ul>\n<li><p>使用WHERE 子句，将不满足条件的行过滤掉</p>\n</li>\n<li><p><strong>WHERE子句紧随 FROM子句</strong></p>\n</li>\n<li><p>举例</p>\n</li>\n</ul>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT employee_id, last_name, job_id, department_id</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">WHERE department_id = 90 ;</span></span></code></pre></div><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726111231409.png\" alt=\"image-20220726111231409\"></p>\n<h1 id=\"第-04-章-运算符\"><a href=\"#第-04-章-运算符\" class=\"headerlink\" title=\"第 04 章_运算符\"></a>第 04 章_运算符</h1><h2 id=\"1-算术运算符\"><a href=\"#1-算术运算符\" class=\"headerlink\" title=\"1. 算术运算符\"></a>1. 算术运算符</h2><p>算术运算符主要用于数学运算，其可以连接运算符前后的两个数值或表达式，对数值或表达式进行加 （+）、减（-）、乘（*）、除（&#x2F;）和取模（%）运算。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726120357351.png\" alt=\"image-20220726120357351\"></p>\n<h3 id=\"1-．加法与减法运算符\"><a href=\"#1-．加法与减法运算符\" class=\"headerlink\" title=\"1 ．加法与减法运算符\"></a>1 ．加法与减法运算符</h3><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">mysql&gt; SELECT 100, 100 + 0, 100 - 0, 100 + 50, 100 + 50 -30, 100 + 35.5, 100 - 35.5</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM dual;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+-----+---------+---------+----------+--------------+------------+------------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| 100 | 100 + 0 | 100 - 0 | 100 + 50 | 100 + 50 -30 | 100 + 35.5 | 100 - 35.5 |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+-----+---------+---------+----------+--------------+------------+------------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| 100 | 100 | 100 | 150 | 120 | 135.5 | 64.5 |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+-----+---------+---------+----------+--------------+------------+------------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">1 row in set (0.00 sec)</span></span></code></pre></div><p><strong>由运算结果可以得出如下结论：</strong></p>\n<ul>\n<li>一个整数类型的值对整数进行加法和减法操作，结果还是一个整数；</li>\n<li>一个整数类型的值对浮点数进行加法和减法操作，结果是一个浮点数；</li>\n<li>加法和减法的优先级相同，进行先加后减操作与进行先减后加操作的结果是一样的；</li>\n<li>在Java中，+的左右两边如果有字符串，那么表示字符串的拼接。但是在MySQL中+只表示数值相加。如果遇到非数值类型，先尝试转成数值，如果转失败，就按 0 计算。（补充：MySQL中字符串拼接要使用字符串函数CONCAT()实现）</li>\n</ul>\n<h3 id=\"2-．乘法与除法运算符\"><a href=\"#2-．乘法与除法运算符\" class=\"headerlink\" title=\"2 ．乘法与除法运算符\"></a>2 ．乘法与除法运算符</h3><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">mysql&gt; SELECT 100, 100 * 1, 100 * 1.0, 100 / 1.0, 100 / 2,100 + 2 * 5 / 2,100 /3, 100</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">DIV 0 FROM dual;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+-----+---------+-----------+-----------+---------+-----------------+---------+-------</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">----+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| 100 | 100 * 1 | 100 * 1.0 | 100 / 1.0 | 100 / 2 | 100 + 2 * 5 / 2 | 100 /3 | 100</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">DIV 0 |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+-----+---------+-----------+-----------+---------+-----------------+---------+-------</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">----+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| 100 | 100 | 100.0 | 100.0000 | 50.0000 | 105.0000 | 33.3333 |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">NULL |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+-----+---------+-----------+-----------+---------+-----------------+---------+-------</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">----+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">1 row in set (0.00 sec)</span></span></code></pre></div><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">#计算出员工的年基本工资</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT employee_id,salary,salary * 12 annual_sal</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees;</span></span></code></pre></div><p><strong>由运算结果可以得出如下结论：</strong></p>\n<ul>\n<li>一个数乘以整数 1 和除以整数 1 后仍得原数；</li>\n<li>一个数乘以浮点数 1 和除以浮点数 1 后变成浮点数，数值与原数相等；</li>\n<li>一个数除以整数后，不管是否能除尽，结果都为一个浮点数；</li>\n<li>一个数除以另一个数，除不尽时，结果为一个浮点数，并保留到小数点后 4 位；</li>\n<li>乘法和除法的优先级相同，进行先乘后除操作与先除后乘操作，得出的结果相同。</li>\n<li>在数学运算中， 0 不能用作除数，在MySQL中，一个数除以 0 为NULL。</li>\n</ul>\n<h3 id=\"3-．求模（求余）运算符\"><a href=\"#3-．求模（求余）运算符\" class=\"headerlink\" title=\"3 ．求模（求余）运算符\"></a>3 ．求模（求余）运算符</h3><p>将t 22 表中的字段i对 3 和 5 进行求模（求余）运算。</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">mysql&gt; SELECT 12 % 3 , 12 MOD 5 FROM dual;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+--------+----------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| 12 % 3 | 12 MOD 5 |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+--------+----------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| 0 | 2 |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+--------+----------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">1 row in set (0.00 sec)</span></span></code></pre></div><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">#筛选出employee_id是偶数的员工</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT * FROM employees</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">WHERE employee_id MOD 2 = 0 ;</span></span></code></pre></div><p>可以看到， 100 对 3 求模后的结果为 3 ，对 5 求模后的结果为 0 。</p>\n<h2 id=\"2-比较运算符\"><a href=\"#2-比较运算符\" class=\"headerlink\" title=\"2. 比较运算符\"></a>2. 比较运算符</h2><p>比较运算符用来对表达式左边的操作数和右边的操作数进行比较，比较的结果为真则返回 1 ，比较的结果为假则返回 0 ，其他情况则返回NULL。</p>\n<p>比较运算符经常被用来作为SELECT查询语句的条件来使用，返回符合条件的结果记录。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726120741228.png\" alt=\"image-20220726120741228\"></p>\n<h3 id=\"1-等号运算符\"><a href=\"#1-等号运算符\" class=\"headerlink\" title=\"1 .等号运算符\"></a>1 .等号运算符</h3><ul>\n<li><p>等号运算符（&#x3D;）判断等号两边的值、字符串或表达式是否相等，如果相等则返回 1 ，不相等则返回0 。</p>\n</li>\n<li><p>在使用等号运算符时，遵循如下规则：</p>\n<ul>\n<li><p>如果等号两边的值、字符串或表达式都为字符串，则MySQL会按照字符串进行比较，其比较的是每个字符串中字符的ANSI编码是否相等。</p>\n</li>\n<li><p>如果等号两边的值都是整数，则MySQL会按照整数来比较两个值的大小。</p>\n</li>\n<li><p>如果等号两边的值<strong>一个是整数，另一个是字符串</strong>，则MySQL会<strong>将字符串转化为数字</strong>进行比较。</p>\n</li>\n<li><p>如果等号两边的值、字符串或表达式中<strong>有一个为NULL，则比较结果为NULL</strong>。</p>\n</li>\n</ul>\n</li>\n<li><p>对比：SQL中赋值符号使用 :&#x3D;</p>\n</li>\n</ul>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">mysql&gt; SELECT 1 = 1 , 1 = &#39;1&#39;, 1 = 0 , &#39;a&#39; = &#39;a&#39;, ( 5 + 3 ) = ( 2 + 6 ), &#39;&#39; = NULL , NULL =</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">NULL;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+-------+---------+-------+-----------+-------------------+-----------+-------------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| 1 = 1 | 1 = &#39;1&#39; | 1 = 0 | &#39;a&#39; = &#39;a&#39; | ( 5 + 3 ) = ( 2 + 6 ) | &#39;&#39; = NULL | NULL = NULL |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+-------+---------+-------+-----------+-------------------+-----------+-------------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| 1 | 1 | 0 | 1 | 1 |  NULL |  NULL |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+-------+---------+-------+-----------+-------------------+-----------+-------------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">1 row in set (0.00 sec)</span></span></code></pre></div><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">mysql&gt; SELECT 1 = 2 , 0 = &#39;abc&#39;, 1 = &#39;abc&#39; FROM dual;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+-------+-----------+-----------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| 1 = 2 | 0 = &#39;abc&#39; | 1 = &#39;abc&#39; |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+-------+-----------+-----------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| 0 | 1 | 0 |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+-------+-----------+-----------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">1 row in set, 2 warnings (0.00 sec)</span></span></code></pre></div><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">#查询salary=10000，注意在Java中比较是==</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT employee_id,salary FROM employees WHERE salary = 10000 ;</span></span></code></pre></div><h3 id=\"2-安全等于运算符\"><a href=\"#2-安全等于运算符\" class=\"headerlink\" title=\"2 .安全等于运算符\"></a>2 .安全等于运算符</h3><p>安全等于运算符（&lt;&#x3D;&gt;）与等于运算符（&#x3D;）的作用是相似的，唯一的区别是‘&lt;&#x3D;&gt;’可以用来对NULL进行判断。在两个操作数均为NULL时，其返回值为 1 ，而不为NULL；当一个操作数为NULL时，其返回值为 0 ，而不为NULL。</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">mysql&gt; SELECT 1 &lt;=&gt; &#39;1&#39;, 1 &lt;=&gt; 0 , &#39;a&#39; &lt;=&gt; &#39;a&#39;, ( 5 + 3 ) &lt;=&gt; ( 2 + 6 ), &#39;&#39; &lt;=&gt; NULL,NULL</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">&lt;=&gt; NULL FROM dual;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+-----------+---------+-------------+---------------------+-------------+-------------</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">--+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| 1 &lt;=&gt; &#39;1&#39; | 1 &lt;=&gt; 0 | &#39;a&#39; &lt;=&gt; &#39;a&#39; | ( 5 + 3 ) &lt;=&gt; ( 2 + 6 ) | &#39;&#39; &lt;=&gt; NULL | NULL &lt;=&gt;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">NULL |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+-----------+---------+-------------+---------------------+-------------+-------------</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">--+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| 1 | 0 | 1 | 1 | 0 |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">1 |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+-----------+---------+-------------+---------------------+-------------+-------------</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">--+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">1 row in set (0.00 sec)</span></span></code></pre></div><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">#查询commission_pct等于0.</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT employee_id,commission_pct FROM employees WHERE commission_pct = 0.40;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT employee_id,commission_pct FROM employees WHERE commission_pct &lt;=&gt; 0.40;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">#如果把0.40改成 NULL 呢？</span></span></code></pre></div><p>可以看到，使用安全等于运算符时，两边的操作数的值都为NULL时，返回的结果为 1 而不是NULL，其他返回结果与等于运算符相同。</p>\n<h3 id=\"3-不等于运算符\"><a href=\"#3-不等于运算符\" class=\"headerlink\" title=\"3 .不等于运算符\"></a>3 .不等于运算符</h3><p>不等于运算符（&lt;&gt;和!&#x3D;）用于判断两边的数字、字符串或者表达式的值是否不相等，如果不相等则返回 1 ，相等则返回 0 。不等于运算符不能判断NULL值。如果两边的值有任意一个为NULL，或两边都为NULL，则结果为NULL。 SQL语句示例如下：</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">mysql&gt; SELECT 1 &lt;&gt; 1 , 1 != 2 , &#39;a&#39; != &#39;b&#39;, ( 3 + 4 ) &lt;&gt; ( 2 + 6 ), &#39;a&#39; != NULL, NULL &lt;&gt; NULL;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+--------+--------+------------+----------------+-------------+--------------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| 1 &lt;&gt; 1 | 1 != 2 | &#39;a&#39; != &#39;b&#39; | ( 3 + 4 ) &lt;&gt; ( 2 + 6 ) | &#39;a&#39; != NULL | NULL &lt;&gt; NULL |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+--------+--------+------------+----------------+-------------+--------------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| 0 | 1 | 1 | 1 | NULL | NULL |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+--------+--------+------------+----------------+-------------+--------------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">1 row in set (0.00 sec)</span></span></code></pre></div><p><strong>此外，还有非符号类型的运算符：</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726121109956.png\" alt=\"image-20220726121109956\"></p>\n<h3 id=\"4-空运算符\"><a href=\"#4-空运算符\" class=\"headerlink\" title=\"4. 空运算符\"></a>4. 空运算符</h3><p>空运算符（IS NULL或者ISNULL）判断一个值是否为NULL，如果为NULL则返回 1 ，否则返回 0 。 SQL语句示例如下：</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">mysql&gt; SELECT NULL IS NULL, ISNULL(NULL), ISNULL(&#39;a&#39;), 1 IS NULL;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+--------------+--------------+-------------+-----------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| NULL IS NULL | ISNULL(NULL) | ISNULL(&#39;a&#39;) | 1 IS NULL |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+--------------+--------------+-------------+-----------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| 1 | 1 | 0 | 0 |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+--------------+--------------+-------------+-----------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">1 row in set (0.00 sec)</span></span></code></pre></div><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">#查询commission_pct等于NULL。比较如下的四种写法</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT employee_id,commission_pct FROM employees WHERE commission_pct IS NULL;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT employee_id,commission_pct FROM employees WHERE commission_pct &lt;=&gt; NULL;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT employee_id,commission_pct FROM employees WHERE ISNULL(commission_pct);</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT employee_id,commission_pct FROM employees WHERE commission_pct = NULL;</span></span></code></pre></div><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT last_name, manager_id</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">WHERE manager_id IS NULL;</span></span></code></pre></div><h3 id=\"5-非空运算符\"><a href=\"#5-非空运算符\" class=\"headerlink\" title=\"5. 非空运算符\"></a>5. 非空运算符</h3><p>非空运算符（IS NOT NULL）判断一个值是否不为NULL，如果不为NULL则返回 1 ，否则返 回 0 。 SQL语句示例如下：</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">mysql&gt; SELECT NULL IS NOT NULL, &#39;a&#39; IS NOT NULL, 1 IS NOT NULL;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+------------------+-----------------+---------------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| NULL IS NOT NULL | &#39;a&#39; IS NOT NULL | 1 IS NOT NULL |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+------------------+-----------------+---------------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| 0                | 1               | 1             |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+------------------+-----------------+---------------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">1 row in set (0.01 sec)</span></span></code></pre></div><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">#查询commission_pct不等于NULL</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT employee_id,commission_pct FROM employees WHERE commission_pct IS NOT NULL;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT employee_id,commission_pct FROM employees WHERE NOT commission_pct &lt;=&gt; NULL;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT employee_id,commission_pct FROM employees WHERE NOT ISNULL(commission_pct);</span></span></code></pre></div><h3 id=\"6-最小值运算符\"><a href=\"#6-最小值运算符\" class=\"headerlink\" title=\"6. 最小值运算符\"></a>6. 最小值运算符</h3><p>语法格式为：LEAST(值 1 ，值 2 ，…，值n)。其中，“值n”表示参数列表中有n个值。在有两个或多个参数的情况下，返回最小值。</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">mysql&gt; SELECT LEAST (1,0,2), LEAST(&#39;b&#39;,&#39;a&#39;,&#39;c&#39;), LEAST(1,NULL,2);</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+---------------+--------------------+-----------------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| LEAST (1,0,2) | LEAST(&#39;b&#39;,&#39;a&#39;,&#39;c&#39;) | LEAST(1,NULL,2) |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+---------------+--------------------+-----------------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| 0 | a | NULL |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+---------------+--------------------+-----------------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">1 row in set (0.00 sec)</span></span></code></pre></div><p>由结果可以看到，当参数是整数或者浮点数时，LEAST将返回其中最小的值；当参数为字符串时，返回字母表中顺序最靠前的字符；当比较值列表中有NULL时，不能判断大小，返回值为NULL。</p>\n<h3 id=\"7-最大值运算符\"><a href=\"#7-最大值运算符\" class=\"headerlink\" title=\"7. 最大值运算符\"></a>7. 最大值运算符</h3><p>语法格式为：GREATEST(值 1 ，值 2 ，…，值n)。其中，n表示参数列表中有n个值。当有两个或多个参数时，返回值为最大值。假如任意一个自变量为NULL，则GREATEST()的返回值为NULL。</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">mysql&gt; SELECT GREATEST(1,0,2), GREATEST(&#39;b&#39;,&#39;a&#39;,&#39;c&#39;), GREATEST(1,NULL,2);</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+-----------------+-----------------------+--------------------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| GREATEST(1,0,2) | GREATEST(&#39;b&#39;,&#39;a&#39;,&#39;c&#39;) | GREATEST(1,NULL,2) |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+-----------------+-----------------------+--------------------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| 2 | c | NULL |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+-----------------+-----------------------+--------------------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">1 row in set (0.00 sec)</span></span></code></pre></div><p>由结果可以看到，当参数中是整数或者浮点数时，GREATEST将返回其中最大的值；当参数为字符串时，返回字母表中顺序最靠后的字符；当比较值列表中有NULL时，不能判断大小，返回值为NULL。</p>\n<h3 id=\"8-BETWEEN-AND运算符\"><a href=\"#8-BETWEEN-AND运算符\" class=\"headerlink\" title=\"8. BETWEEN AND运算符\"></a>8. BETWEEN AND运算符</h3><p>BETWEEN运算符使用的格式通常为SELECT D FROM TABLE WHERE C BETWEEN A  AND B，此时，当C大于或等于A，并且C小于或等于B时，结果为 1 ，否则结果为 0 。</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">mysql&gt; SELECT 1 BETWEEN 0 AND 1, 10 BETWEEN 11 AND 12, &#39;b&#39; BETWEEN &#39;a&#39; AND &#39;c&#39;;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+-------------------+----------------------+-------------------------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| 1 BETWEEN 0 AND 1 | 10 BETWEEN 11 AND 12 | &#39;b&#39; BETWEEN &#39;a&#39; AND &#39;c&#39; |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+-------------------+----------------------+-------------------------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| 1 | 0 | 1 |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+-------------------+----------------------+-------------------------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">1 row in set (0.00 sec)</span></span></code></pre></div><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT last_name, salary</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">WHERE salary BETWEEN 2500 AND 3500;</span></span></code></pre></div><h3 id=\"9-IN运算符\"><a href=\"#9-IN运算符\" class=\"headerlink\" title=\"9. IN运算符\"></a>9. IN运算符</h3><p>IN运算符用于判断给定的值是否是IN列表中的一个值，如果是则返回 1 ，否则返回 0 。如果给定的值为NULL，或者IN列表中存在NULL，则结果为NULL。</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">mysql&gt; SELECT &#39;a&#39; IN (&#39;a&#39;,&#39;b&#39;,&#39;c&#39;), 1 IN (2,3), NULL IN (&#39;a&#39;,&#39;b&#39;), &#39;a&#39; IN (&#39;a&#39;, NULL);</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+----------------------+------------+-------------------+--------------------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| &#39;a&#39; IN (&#39;a&#39;,&#39;b&#39;,&#39;c&#39;) | 1 IN (2,3) | NULL IN (&#39;a&#39;,&#39;b&#39;) | &#39;a&#39; IN (&#39;a&#39;, NULL) |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+----------------------+------------+-------------------+--------------------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| 1 | 0 | NULL | 1 |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+----------------------+------------+-------------------+--------------------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">1 row in set (0.00 sec)</span></span></code></pre></div><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT employee_id, last_name, salary, manager_id</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">WHERE manager_id IN (100, 101, 201);</span></span></code></pre></div><h3 id=\"10-NOT-IN运算符\"><a href=\"#10-NOT-IN运算符\" class=\"headerlink\" title=\"10. NOT IN运算符\"></a>10. NOT IN运算符</h3><p>NOT IN运算符用于判断给定的值是否不是IN列表中的一个值，如果不是IN列表中的一 个值，则返回 1 ，否则返回 0 。</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">mysql&gt; SELECT &#39;a&#39; NOT IN (&#39;a&#39;,&#39;b&#39;,&#39;c&#39;), 1 NOT IN (2,3);</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+--------------------------+----------------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| &#39;a&#39; NOT IN (&#39;a&#39;,&#39;b&#39;,&#39;c&#39;) | 1 NOT IN (2,3) |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+--------------------------+----------------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| 0 | 1 |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+--------------------------+----------------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">1 row in set (0.00 sec)</span></span></code></pre></div><h3 id=\"11-LIKE运算符\"><a href=\"#11-LIKE运算符\" class=\"headerlink\" title=\"11. LIKE运算符\"></a>11. LIKE运算符</h3><p>LIKE运算符主要用来匹配字符串，通常用于模糊匹配，如果满足条件则返回 1 ，否则返回 0 。如果给定的值或者匹配条件为NULL，则返回结果为NULL。</p>\n<p> &#x3D;&#x3D;LIKE运算符通常使用如下通配符&#x3D;&#x3D;：</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\"> “%”：匹配 0 个或多个字符。</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"> “_”：只能匹配一个字符。</span></span></code></pre></div><p> SQL语句示例如下：</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">mysql&gt; SELECT NULL LIKE &#39;abc&#39;, &#39;abc&#39; LIKE NULL;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+-----------------+-----------------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| NULL LIKE &#39;abc&#39; | &#39;abc&#39; LIKE NULL |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+-----------------+-----------------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| NULL | NULL |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+-----------------+-----------------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">1 row in set (0.00 sec)</span></span></code></pre></div><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT first_name</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">WHERE first_name LIKE &#39;S%&#39;;</span></span></code></pre></div><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT last_name</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">WHERE last_name LIKE &#39;_o%&#39;;</span></span></code></pre></div><h4 id=\"ESCAPE\"><a href=\"#ESCAPE\" class=\"headerlink\" title=\"ESCAPE\"></a>ESCAPE</h4><ul>\n<li>回避特殊符号的： <strong>使用转义符</strong> 。例如：将[%]转为[$%]、[]转为[$]，然后再加上[ESCAPE‘$’]即可。</li>\n</ul>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT job_id</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM jobs</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">WHERE job_id LIKE ‘IT\\_%‘;</span></span></code></pre></div><ul>\n<li>如果&#x3D;&#x3D;使用\\表示转义&#x3D;&#x3D;，要省略ESCAPE。如果不是\\，则要加上ESCAPE。</li>\n</ul>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT job_id</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM jobs</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">WHERE job_id LIKE ‘IT$_%‘ escape ‘$‘;</span></span></code></pre></div><h3 id=\"12-REGEXP运算符\"><a href=\"#12-REGEXP运算符\" class=\"headerlink\" title=\"12. REGEXP运算符\"></a>12. REGEXP运算符</h3><p>REGEXP运算符用来匹配字符串，语法格式为：&#x3D;&#x3D;expr REGEXP 匹配条件&#x3D;&#x3D;。如果expr满足匹配条件，返回1 ；如果不满足，则返回 0 。若expr或匹配条件任意一个为NULL，则结果为NULL。</p>\n<p><strong>REGEXP运算符在进行匹配时，常用的有下面几种通配符：</strong></p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">（1）‘^’匹配以该字符后面的字符开头的字符串。</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">（2）‘$’匹配以该字符前面的字符结尾的字符串。</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">（3）‘.’匹配任何一个单字符。</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">（4）“[...]”匹配在方括号内的任何字符。例如，“[abc]”匹配“a”或“b”或“c”。为了命名字符的范围，使用一个‘-’。“[a-z]”匹配任何字母，而“[0-9]”匹配任何数字。</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">（5）‘*’匹配零个或多个在它前面的字符。例如，“x*”匹配任何数量的‘x’字符，“[0-9]*”匹配任何数量的数字，而“*”匹配任何数量的任何字符。</span></span></code></pre></div><p> SQL语句示例如下：</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">mysql&gt; SELECT &#39;shkstart&#39; REGEXP &#39;^s&#39;, &#39;shkstart&#39; REGEXP &#39;t$&#39;, &#39;shkstart&#39; REGEXP &#39;hk&#39;;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+------------------------+------------------------+-------------------------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| &#39;shkstart&#39; REGEXP &#39;^s&#39; | &#39;shkstart&#39; REGEXP &#39;t$&#39; | &#39;shkstart&#39; REGEXP &#39;hk&#39; |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+------------------------+------------------------+-------------------------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| 1 | 1 | 1 |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+------------------------+------------------------+-------------------------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">1 row in set (0.01 sec)</span></span></code></pre></div><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">mysql&gt; SELECT &#39;atguigu&#39; REGEXP &#39;gu.gu&#39;, &#39;atguigu&#39; REGEXP &#39;[ab]&#39;;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+--------------------------+-------------------------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| &#39;atguigu&#39; REGEXP &#39;gu.gu&#39; | &#39;atguigu&#39; REGEXP &#39;[ab]&#39; |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+--------------------------+-------------------------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| 1 | 1 |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+--------------------------+-------------------------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">1 row in set (0.00 sec)</span></span></code></pre></div><h2 id=\"3-逻辑运算符\"><a href=\"#3-逻辑运算符\" class=\"headerlink\" title=\"3. 逻辑运算符\"></a>3. 逻辑运算符</h2><p>逻辑运算符主要用来判断表达式的真假，在MySQL中，逻辑运算符的返回结果为 1 、 0 或者NULL。</p>\n<p>MySQL中支持 4 种逻辑运算符如下：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726122020196.png\" alt=\"image-20220726122020196\"></p>\n<h3 id=\"1-．逻辑非运算符\"><a href=\"#1-．逻辑非运算符\" class=\"headerlink\" title=\"1 ．逻辑非运算符\"></a>1 ．逻辑非运算符</h3><p>逻辑非（NOT或!）运算符表示当给定的值为 0 时返回 1 ；当给定的值为非 0 值时返回 0 ；当给定的值为NULL时，返回NULL。</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">mysql&gt; SELECT NOT 1, NOT 0, NOT(1+1), NOT !1, NOT NULL;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+-------+-------+----------+--------+----------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| NOT 1 | NOT 0 | NOT(1+1) | NOT !1 | NOT NULL |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+-------+-------+----------+--------+----------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| 0 | 1 | 0 | 1 | NULL |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+-------+-------+----------+--------+----------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">1 row in set, 1 warning (0.00 sec)</span></span></code></pre></div><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT last_name, job_id</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">WHERE job_id NOT IN (&#39;IT_PROG&#39;, &#39;ST_CLERK&#39;, &#39;SA_REP&#39;);</span></span></code></pre></div><h3 id=\"2-．逻辑与运算符\"><a href=\"#2-．逻辑与运算符\" class=\"headerlink\" title=\"2 ．逻辑与运算符\"></a>2 ．逻辑与运算符</h3><p>逻辑与（AND或&amp;&amp;）运算符是当给定的所有值均为非 0 值，并且都不为NULL时，返回1 ；当给定的一个值或者多个值为 0 时则返回 0 ；否则返回NULL。</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">mysql&gt; SELECT 1 AND -1, 0 AND 1, 0 AND NULL, 1 AND NULL;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+----------+---------+------------+------------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| 1 AND -1 | 0 AND 1 | 0 AND NULL | 1 AND NULL |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+----------+---------+------------+------------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| 1 | 0 | 0 | NULL |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+----------+---------+------------+------------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">1 row in set (0.00 sec)</span></span></code></pre></div><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT employee_id, last_name, job_id, salary</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">WHERE salary &gt;=10000 AND job_id LIKE &#39;%MAN%&#39;;</span></span></code></pre></div><h3 id=\"3-．逻辑或运算符\"><a href=\"#3-．逻辑或运算符\" class=\"headerlink\" title=\"3 ．逻辑或运算符\"></a>3 ．逻辑或运算符</h3><p>逻辑或（OR或||）运算符是当给定的值都不为NULL，并且任何一个值为非 0 值时，则返回 1 ，否则返回 0 ；当一个值为NULL，并且另一个值为非 0 值时，返回 1 ，否则返回NULL；当两个值都为 NULL时，返回NULL。</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">mysql&gt; SELECT 1 OR -1, 1 OR 0, 1 OR NULL, 0 || NULL, NULL || NULL;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+---------+--------+-----------+-----------+--------------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| 1 OR -1 | 1 OR 0 | 1 OR NULL | 0 || NULL | NULL || NULL |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+---------+--------+-----------+-----------+--------------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| 1 | 1 | 1 | NULL | NULL |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+---------+--------+-----------+-----------+--------------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">1 row in set, 2 warnings (0.00 sec)</span></span></code></pre></div><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">#查询基本薪资不在9000-12000之间的员工编号和基本薪资</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT employee_id,salary FROM employees</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">WHERE NOT (salary &gt;= 9000 AND salary &lt;= 12000);</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT employee_id,salary FROM employees</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">WHERE salary &lt;9000 OR salary &gt; 12000;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT employee_id,salary FROM employees</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">WHERE salary NOT BETWEEN 9000 AND 12000;</span></span></code></pre></div><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT employee_id, last_name, job_id, salary</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">WHERE salary &gt;= 10000</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">OR job_id LIKE &#39;%MAN%&#39;;</span></span></code></pre></div><ul>\n<li>注意：<br>  OR可以和AND一起使用，但是在使用时要注意两者的优先级，由于<strong>AND的优先级高于OR</strong>，因此先对AND两边的操作数进行操作，再与OR中的操作数结合。</li>\n</ul>\n<h3 id=\"4-．逻辑异或运算符\"><a href=\"#4-．逻辑异或运算符\" class=\"headerlink\" title=\"4 ．逻辑异或运算符\"></a>4 ．逻辑异或运算符</h3><p>逻辑异或（XOR）运算符是当给定的值中任意一个值为NULL时，则返回NULL；如果两个非NULL的值都是 0 或者都不等于 0 时，则返回 0 ；如果一个值为 0 ，另一个值不为 0 时，则返回 1 。</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">mysql&gt; SELECT 1 XOR -1, 1 XOR 0, 0 XOR 0, 1 XOR NULL, 1 XOR 1 XOR 1, 0 XOR 0 XOR 0;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+----------+---------+---------+------------+---------------+---------------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| 1 XOR -1 | 1 XOR 0 | 0 XOR 0 | 1 XOR NULL | 1 XOR 1 XOR 1 | 0 XOR 0 XOR 0 |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+----------+---------+---------+------------+---------------+---------------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| 0 | 1 | 0 | NULL | 1 | 0 |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+----------+---------+---------+------------+---------------+---------------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">1 row in set (0.00 sec)</span></span></code></pre></div><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">select last_name,department_id,salary</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">from employees</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">where department_id in (10,20) XOR salary &gt; 8000;</span></span></code></pre></div><h2 id=\"4-位运算符\"><a href=\"#4-位运算符\" class=\"headerlink\" title=\"4. 位运算符\"></a>4. 位运算符</h2><p>位运算符是在二进制数上进行计算的运算符。位运算符会先将操作数变成二进制数，然后进行位运算， 最后将计算结果从二进制变回十进制数。</p>\n<p>MySQL支持的位运算符如下：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726122404302.png\" alt=\"image-20220726122404302\"></p>\n<h3 id=\"1-按位与运算符\"><a href=\"#1-按位与运算符\" class=\"headerlink\" title=\"1 .按位与运算符\"></a>1 .按位与运算符</h3><p>按位与（&amp;）运算符将给定值对应的二进制数逐位进行逻辑与运算。当给定值对应的二进制位的数值都为 1 时，则该位返回 1 ，否则返回 0 。</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">mysql&gt; SELECT 1 &amp; 10, 20 &amp; 30;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+--------+---------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| 1 &amp; 10 | 20 &amp; 30 |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+--------+---------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| 0 | 20 |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+--------+---------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">1 row in set (0.00 sec)</span></span></code></pre></div><p>1 的二进制数为 0001 ， 10 的二进制数为 1010 ，所以 1 &amp; 10 的结果为 0000 ，对应的十进制数为 0 。 20 的二进制数为 10100 ， 30 的二进制数为 11110 ，所以 20 &amp; 30 的结果为 10100 ，对应的十进制数为 20 。</p>\n<h3 id=\"2-按位或运算符\"><a href=\"#2-按位或运算符\" class=\"headerlink\" title=\"2. 按位或运算符\"></a>2. 按位或运算符</h3><p>按位或（|）运算符将给定的值对应的二进制数逐位进行逻辑或运算。当给定值对应的二进制位的数值有一个或两个为 1 时，则该位返回 1 ，否则返回 0 。</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">mysql&gt; SELECT 1 | 10, 20 | 30;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+--------+---------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| 1 | 10 | 20 | 30 |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+--------+---------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| 11 | 30 |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+--------+---------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">1 row in set (0.00 sec)</span></span></code></pre></div><p>1 的二进制数为 0001 ， 10 的二进制数为 1010 ，所以 1 | 10 的结果为 1011 ，对应的十进制数为 11 。 20 的二进制数为 10100 ， 30 的二进制数为 11110 ，所以 20 | 30 的结果为 11110 ，对应的十进制数为 30 。</p>\n<h3 id=\"3-按位异或运算符\"><a href=\"#3-按位异或运算符\" class=\"headerlink\" title=\"3. 按位异或运算符\"></a>3. 按位异或运算符</h3><p>按位异或（^）运算符将给定的值对应的二进制数逐位进行逻辑异或运算。当给定值对应的二进制位的数值不同时，则该位返回 1 ，否则返回 0 。</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">mysql&gt; SELECT 1 ^ 10, 20 ^ 30;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+--------+---------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| 1 ^ 10 | 20 ^ 30 |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+--------+---------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| 11 | 10 |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+--------+---------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">1 row in set (0.00 sec)</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span></code></pre></div><p>1 的二进制数为 0001 ， 10 的二进制数为 1010 ，所以 1 ^ 10 的结果为 1011 ，对应的十进制数为 11 。 20 的二进制数为 10100 ， 30 的二进制数为 11110 ，所以 20 ^ 30 的结果为 01010 ，对应的十进制数为 10 。</p>\n<p>再举例：</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">mysql&gt; SELECT 12 &amp; 5, 12 | 5,12 ^ 5 FROM DUAL;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+--------+--------+--------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| 12 &amp; 5 | 12 | 5 | 12 ^ 5 |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+--------+--------+--------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| 4 | 13 | 9 |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+--------+--------+--------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">1 row in set (0.00 sec)</span></span></code></pre></div><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726122550485.png\" alt=\"image-20220726122550485\"></p>\n<h3 id=\"4-按位取反运算符\"><a href=\"#4-按位取反运算符\" class=\"headerlink\" title=\"4. 按位取反运算符\"></a>4. 按位取反运算符</h3><p>按位取反（~）运算符将给定的值的二进制数逐位进行取反操作，即将 1 变为 0 ，将 0 变为 1 。</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">mysql&gt; SELECT 10 &amp; ~1;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+---------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| 10 &amp; ~1 |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+---------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| 10 |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+---------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">1 row in set (0.00 sec)</span></span></code></pre></div><p>由于按位取反（~）运算符的优先级高于按位与（&amp;）运算符的优先级，所以 10 &amp; ~ 1 ，首先，对数字 1 进行按位取反操作，结果除了最低位为 0 ，其他位都为 1 ，然后与 10 进行按位与操作，结果为 10 。</p>\n<h3 id=\"5-按位右移运算符\"><a href=\"#5-按位右移运算符\" class=\"headerlink\" title=\"5. 按位右移运算符\"></a>5. 按位右移运算符</h3><p>按位右移（&gt;&gt;）运算符将给定的值的二进制数的所有位右移指定的位数。右移指定的位数后，右边低位的数值被移出并丢弃，左边高位空出的位置用 0 补齐。</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">mysql&gt; SELECT 1 &gt;&gt; 2, 4 &gt;&gt; 2;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+--------+--------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| 1 &gt;&gt; 2 | 4 &gt;&gt; 2 |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+--------+--------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| 0 | 1 |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+--------+--------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">1 row in set (0.00 sec)</span></span></code></pre></div><p>1 的二进制数为 0000 0001 ，右移 2 位为 0000 0000 ，对应的十进制数为 0 。 4 的二进制数为 0000 0100 ，右移 2位为 0000 0001 ，对应的十进制数为 1 。</p>\n<h3 id=\"6-按位左移运算符\"><a href=\"#6-按位左移运算符\" class=\"headerlink\" title=\"6. 按位左移运算符\"></a>6. 按位左移运算符</h3><p>按位左移（&lt;&lt;）运算符将给定的值的二进制数的所有位左移指定的位数。左移指定的位数后，左边高位的数值被移出并丢弃，右边低位空出的位置用 0 补齐。</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">mysql&gt; SELECT 1 &lt;&lt; 2, 4 &lt;&lt; 2;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+--------+--------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| 1 &lt;&lt; 2 | 4 &lt;&lt; 2 |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+--------+--------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| 4 | 16 |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+--------+--------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">1 row in set (0.00 sec)</span></span></code></pre></div><p>1 的二进制数为 0000 0001 ，左移两位为 0000 0100 ，对应的十进制数为 4 。 4 的二进制数为 0000 0100 ，左移两位为 0001 0000 ，对应的十进制数为 16 。</p>\n<h2 id=\"5-运算符的优先级\"><a href=\"#5-运算符的优先级\" class=\"headerlink\" title=\"5. 运算符的优先级\"></a>5. 运算符的优先级</h2><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726122732248.png\" alt=\"image-20220726122732248\"></p>\n<p>数字编号越大，优先级越高，优先级高的运算符先进行计算。可以看到，赋值运算符的优先级最低，使用“()”括起来的表达式的优先级最高。</p>\n<h2 id=\"拓展：使用正则表达式查询\"><a href=\"#拓展：使用正则表达式查询\" class=\"headerlink\" title=\"拓展：使用正则表达式查询\"></a>拓展：使用正则表达式查询</h2><p>​\t正则表达式通常被用来检索或替换那些符合某个模式的文本内容，根据指定的匹配模式匹配文本中符合 要求的特殊字符串。例如，从一个文本文件中提取电话号码，查找一篇文章中重复的单词或者替换用户输入的某些敏感词语等，这些地方都可以使用正则表达式。正则表达式强大而且灵活，可以应用于非常 复杂的查询。</p>\n<p>​\tMySQL中<strong>使用REGEXP关键字</strong>指定正则表达式的字符匹配模式。下表列出了REGEXP操作符中常用字符匹配列表。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726122806299.png\" alt=\"image-20220726122806299\"></p>\n<ul>\n<li><ol>\n<li><strong>查询以特定字符或字符串开头的记录</strong> 字符‘^’匹配以特定字符或者字符串开头的文本。<br>在fruits表中，查询f_name字段以字母‘b’开头的记录，SQL语句如下：</li>\n</ol>\n</li>\n</ul>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">mysql&gt; SELECT * FROM fruits WHERE f_name REGEXP &#39;^b&#39;;</span></span></code></pre></div><ul>\n<li><ol start=\"2\">\n<li><strong>查询以特定字符或字符串结尾的记录</strong> 字符‘$’匹配以特定字符或者字符串结尾的文本。<br>在fruits表中，查询f_name字段以字母‘y’结尾的记录，SQL语句如下：</li>\n</ol>\n</li>\n</ul>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">mysql&gt; SELECT * FROM fruits WHERE f_name REGEXP &#39;y$&#39;;</span></span></code></pre></div><ul>\n<li><ol start=\"3\">\n<li><strong>用符号”.”来替代字符串中的任意一个字符</strong> 字符‘.’匹配任意一个字符。 在fruits表中，查询f_name字段值包含字母‘a’与‘g’且两个字母之间只有一个字母的记录，SQL语句如下：</li>\n</ol>\n</li>\n</ul>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">mysql&gt; SELECT * FROM fruits WHERE f_name REGEXP &#39;a.g&#39;;</span></span></code></pre></div><ul>\n<li><ol start=\"4\">\n<li><strong>使用”” 和 “+”来匹配多个字符</strong> 星号‘’匹配前面的字符任意多次，包括 0 次。加号‘+’匹配前面的字符至少一次。<br> 在fruits表中，查询f_name字段值以字母‘b’开头且‘b’后面出现字母‘a’的记录，SQL语句如下：</li>\n</ol>\n</li>\n</ul>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">mysql&gt; SELECT * FROM fruits WHERE f_name REGEXP &#39;^ba*&#39;;</span></span></code></pre></div><p>在fruits表中，查询f_name字段值以字母‘b’开头且‘b’后面出现字母‘a’至少一次的记录，SQL语句如下：</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">mysql&gt; SELECT * FROM fruits WHERE f_name REGEXP &#39;^ba+&#39;;</span></span></code></pre></div><ul>\n<li><ol start=\"5\">\n<li><strong>匹配指定字符串</strong> 正则表达式可以匹配指定字符串，只要这个字符串在查询文本中即可，如要匹配多个字符串，多个字符串之间使用分隔符‘|’隔开。<br> 在fruits表中，查询f_name字段值包含字符串“on”的记录，SQL语句如下：</li>\n</ol>\n</li>\n</ul>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">mysql&gt; SELECT * FROM fruits WHERE f_name REGEXP &#39;on&#39;;</span></span></code></pre></div><p>在fruits表中，查询f_name字段值包含字符串“on”或者“ap”的记录，SQL语句如下：</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">mysql&gt; SELECT * FROM fruits WHERE f_name REGEXP &#39;on|ap&#39;;</span></span></code></pre></div><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">     之前介绍过，LIKE运算符也可以匹配指定的字符串，但与REGEXP不同，LIKE匹配的字符串如果在文本中间出现，则找不到它，相应的行也不会返回。REGEXP在文本内进行匹配，如果被匹配的字符串在文本中出现，REGEXP将会找到它，相应的行也会被返回。对比结果如下所示。</span></span></code></pre></div><p>在fruits表中，使用LIKE运算符查询f_name字段值为“on”的记录，SQL语句如下：</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">mysql&gt; SELECT * FROM fruits WHERE f_name like &#39;on&#39;;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">Empty set(0.00 sec)</span></span></code></pre></div><ul>\n<li><ol start=\"6\">\n<li><strong>匹配指定字符中的任意一个</strong> 方括号“[]”指定一个字符集合，只匹配其中任何一个字符，即为所查找的文本。<br> 在fruits表中，查找f_name字段中包含字母‘o’或者‘t’的记录，SQL语句如下：</li>\n</ol>\n</li>\n</ul>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">mysql&gt; SELECT * FROM fruits WHERE f_name REGEXP &#39;[ot]&#39;;</span></span></code></pre></div><p> 在fruits表中，查询s_id字段中包含 4 、 5 或者 6 的记录，SQL语句如下：</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">mysql&gt; SELECT * FROM fruits WHERE s_id REGEXP &#39;[456]&#39;;</span></span></code></pre></div><ul>\n<li><ol start=\"7\">\n<li><strong>匹配指定字符以外的字符</strong> “ [ ^ 字符集合  ] ”匹配不在指定集合中的任何字符。<br>在fruits表中，查询f_id字段中包含字母a<del>e和数字1</del>2以外字符的记录，SQL语句如下：</li>\n</ol>\n</li>\n</ul>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">mysql&gt; SELECT * FROM fruits WHERE f_id REGEXP &#39;[^a-e1-2]&#39;;</span></span></code></pre></div><ul>\n<li><ol start=\"8\">\n<li><strong>使用{n,}或者{n,m}来指定字符串连续出现的次数</strong> “字符串{n,}”表示至少匹配n次前面的字符；“字符串{n,m}”表示匹配前面的字符串不少于n次，不多于m次。例如，a{2,}表示字母a连续出现至少 2 次，也可以大于 2 次；a{2,4}表示字母a连续出现最少 2 次，最多不能超过 4 次。</li>\n</ol>\n</li>\n</ul>\n<p>在fruits表中，查询f_name字段值出现字母‘x’至少 2 次的记录，SQL语句如下：</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">mysql&gt; SELECT * FROM fruits WHERE f_name REGEXP &#39;x&#123;2,&#125;&#39;;</span></span></code></pre></div><p>在fruits表中，查询f_name字段值出现字符串“ba”最少 1 次、最多 3 次的记录，SQL语句如下：</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">mysql&gt; SELECT * FROM fruits WHERE f_name REGEXP &#39;ba&#123;1,3&#125;&#39;;</span></span></code></pre></div><h1 id=\"第-05-章-排序与分页\"><a href=\"#第-05-章-排序与分页\" class=\"headerlink\" title=\"第 05 章_排序与分页\"></a>第 05 章_排序与分页</h1><h2 id=\"1-排序数据\"><a href=\"#1-排序数据\" class=\"headerlink\" title=\"1. 排序数据\"></a>1. 排序数据</h2><h3 id=\"1-1-排序规则\"><a href=\"#1-1-排序规则\" class=\"headerlink\" title=\"1. 1 排序规则\"></a>1. 1 排序规则</h3><ul>\n<li><p>使用 ORDER BY 子句排序</p>\n<ul>\n<li><strong>ASC（ascend）: 升序</strong></li>\n<li><strong>DESC（descend）:降序</strong></li>\n</ul>\n</li>\n<li><p><strong>ORDER BY 子句在SELECT语句的结尾</strong>。</p>\n</li>\n</ul>\n<h3 id=\"1-2-单列排序\"><a href=\"#1-2-单列排序\" class=\"headerlink\" title=\"1. 2 单列排序\"></a>1. 2 单列排序</h3><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT last_name, job_id, department_id, hire_date</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">ORDER BY hire_date ;</span></span></code></pre></div><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726131617963.png\" alt=\"image-20220726131617963\"></p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT last_name, job_id, department_id, hire_date</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">ORDER BY hire_date DESC ;</span></span></code></pre></div><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726131630907.png\" alt=\"image-20220726131630907\"></p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT employee_id, last_name, salary* 12 annsal</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">ORDER BY annsal;</span></span></code></pre></div><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726131643892.png\" alt=\"image-20220726131643892\"></p>\n<h3 id=\"1-3-多列排序\"><a href=\"#1-3-多列排序\" class=\"headerlink\" title=\"1. 3 多列排序\"></a>1. 3 多列排序</h3><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT last_name, department_id, salary</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">ORDER BY department_id, salary DESC;</span></span></code></pre></div><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726131743604.png\" alt=\"image-20220726131743604\"></p>\n<ul>\n<li><p>可以使用不在SELECT列表中的列排序。</p>\n</li>\n<li><p>在对多列进行排序的时候，首先排序的第一列必须有相同的列值，才会对第二列进行排序。如果第一列数据中所有值都是唯一的，将不再对第二列进行排序。</p>\n</li>\n</ul>\n<h2 id=\"2-分页\"><a href=\"#2-分页\" class=\"headerlink\" title=\"2. 分页\"></a>2. 分页</h2><h3 id=\"2-1-背景\"><a href=\"#2-1-背景\" class=\"headerlink\" title=\"2. 1 背景\"></a>2. 1 背景</h3><p>背景 1 ：查询返回的记录太多了，查看起来很不方便，怎么样能够实现分页查询呢？</p>\n<p>背景 2 ：表里有 4 条数据，我们只想要显示第 2 、 3 条数据怎么办呢？</p>\n<h3 id=\"2-2-实现规则\"><a href=\"#2-2-实现规则\" class=\"headerlink\" title=\"2. 2 实现规则\"></a>2. 2 实现规则</h3><ul>\n<li><p>分页原理</p>\n<p>所谓分页显示，就是将数据库中的结果集，一段一段显示出来需要的条件。</p>\n</li>\n<li><p><strong>MySQL中使用 LIMIT 实现分页</strong></p>\n</li>\n<li><p>格式：</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">LIMIT [位置偏移量], 行数</span></span></code></pre></div></li>\n<li><p>第一个“位置偏移量”参数指示MySQL从哪一行开始显示，是一个可选参数，如果不指定“位置偏移量”，将会从表中的第一条记录开始（第一条记录的位置偏移量是 0 ，第二条记录的位置偏移量是1 ，以此类推）；第二个参数“行数”指示返回的记录条数。</p>\n</li>\n<li><p>举例</p>\n</li>\n</ul>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">--前10条记录：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT * FROM 表名 LIMIT 0,10;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">或者</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT * FROM 表名 LIMIT 10;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">--第11至20条记录：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT * FROM 表名 LIMIT 10,10;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">--第21至30条记录：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT * FROM 表名 LIMIT 20,10;</span></span></code></pre></div><p>MySQL 8.0中可以使用“LIMIT 3 OFFSET 4”，意思是获取从第 5 条记录开始后面的 3 条记录，和“LIMIT4,3;”返回的结果相同。</p>\n<ul>\n<li>&#x3D;&#x3D;分页显式公式 ：<strong>（当前页数- 1 ）*每页条数，每页条数</strong>&#x3D;&#x3D;</li>\n</ul>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT * FROM table</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">LIMIT(PageNo - 1)*PageSize,PageSize;</span></span></code></pre></div><ul>\n<li><p>注意：<strong>LIMIT 子句必须放在整个SELECT语句的最后！</strong></p>\n</li>\n<li><p>使用 LIMIT 的好处</p>\n</li>\n</ul>\n<p>约束返回结果的数量可以<strong>减少数据表的网络传输量</strong>，也可以<strong>提升查询效率</strong>。</p>\n<p>如果我们知道返回结果只有1 条，就可以使用<strong>LIMIT 1</strong>，告诉 SELECT 语句只需要返回一条记录即可。这样的好处就是 SELECT 不需要扫描完整的表，只需要检索到一条符合条件的记录即可返回。</p>\n<h3 id=\"2-3-拓展\"><a href=\"#2-3-拓展\" class=\"headerlink\" title=\"2. 3 拓展\"></a>2. 3 拓展</h3><p>在不同的 DBMS 中使用的关键字可能不同。在 MySQL、PostgreSQL、MariaDB 和 SQLite 中使用 LIMIT 关键字，而且需要放到 SELECT 语句的最后面。</p>\n<ul>\n<li>如果是 SQL Server 和 Access，需要使用&#x3D;&#x3D;TOP&#x3D;&#x3D;关键字，比如：</li>\n</ul>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT TOP 5 name, hp_max FROM heros ORDER BY hp_max DESC</span></span></code></pre></div><ul>\n<li>如果是 DB2，使用&#x3D;&#x3D;FETCH FIRST 5 ROWS ONLY&#x3D;&#x3D;这样的关键字：</li>\n</ul>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT name, hp_max FROM heros ORDER BY hp_max DESC FETCH FIRST 5 ROWS ONLY</span></span></code></pre></div><ul>\n<li>如果是 Oracle，你需要基于 &#x3D;&#x3D;ROWNUM&#x3D;&#x3D; 来统计行数：</li>\n</ul>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT rownum,last_name,salary FROM employees WHERE rownum &lt; 5 ORDER BY salary DESC;</span></span></code></pre></div><p>需要说明的是，这条语句是先取出来前 5 条数据行，然后再按照 hp_max 从高到低的顺序进行排序。但这样产生的结果和上述方法的并不一样。我会在后面讲到子查询，你可以使用</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT rownum, last_name,salary</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM (</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT last_name,salary</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">ORDER BY salary DESC)</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">WHERE rownum &lt; 10;</span></span></code></pre></div><p>得到与上述方法一致的结果。</p>\n<hr>\n<h1 id=\"第-06-章-多表查询\"><a href=\"#第-06-章-多表查询\" class=\"headerlink\" title=\"第 06 章_多表查询\"></a>第 06 章_多表查询</h1><ul>\n<li><p>多表查询，也称为关联查询，指两个或更多个表一起完成查询操作。</p>\n</li>\n<li><p>前提条件：这些一起查询的表之间是有关系的（一对一、一对多），它们之间一定是有关联字段，这个关联字段可能建立了外键，也可能没有建立外键。比如：员工表和部门表，这两个表依靠“部门编号”进行关联。</p>\n</li>\n</ul>\n<h2 id=\"1-一个案例引发的多表连接\"><a href=\"#1-一个案例引发的多表连接\" class=\"headerlink\" title=\"1. 一个案例引发的多表连接\"></a>1. 一个案例引发的多表连接</h2><h3 id=\"1-1-案例说明\"><a href=\"#1-1-案例说明\" class=\"headerlink\" title=\"1. 1 案例说明\"></a>1. 1 案例说明</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726132803968.png\" alt=\"image-20220726132803968\"></p>\n<p>从多个表中获取数据：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726132821399.png\" alt=\"image-20220726132821399\"></p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">#案例：查询员工的姓名及其部门名称</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT last_name, department_name</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees, departments;</span></span></code></pre></div><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220924152005976.png\" alt=\"image-20220924152005976\"></p>\n<p>查询结果：</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">+-----------+----------------------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| last_name | department_name |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+-----------+----------------------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| King | Administration |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| King | Marketing |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| King | Purchasing |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| King | Human Resources |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| King | Shipping |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| King | IT |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| King | Public Relations |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| King | Sales |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| King | Executive |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| King | Finance |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| King | Accounting |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| King | Treasury |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">...</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| Gietz | IT Support |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| Gietz | NOC |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| Gietz | IT Helpdesk |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| Gietz | Government Sales |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| Gietz | Retail Sales |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| Gietz | Recruiting |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">| Gietz | Payroll |</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">+-----------+----------------------+</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">2889 rows in set (0.01 sec)</span></span></code></pre></div><p>分析错误情况：</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT COUNT(employee_id) FROM employees;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">#输出107行</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT COUNT(department_id)FROM departments;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">#输出27行</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT 107*27 FROM dual;</span></span></code></pre></div><p>我们把上述多表查询中出现的问题称为：<strong>笛卡尔积的错误</strong>。</p>\n<h3 id=\"1-2-笛卡尔积（或交叉连接）的理解\"><a href=\"#1-2-笛卡尔积（或交叉连接）的理解\" class=\"headerlink\" title=\"1. 2 笛卡尔积（或交叉连接）的理解\"></a>1. 2 笛卡尔积（或交叉连接）的理解</h3><p>笛卡尔乘积是一个数学运算。假设我有两个集合 X 和 Y，那么 X 和 Y 的笛卡尔积就是 X 和 Y 的所有可能组合，也就是第一个对象来自于 X，第二个对象来自于 Y 的所有可能。组合的个数即为两个集合中元素个数的乘积数。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726133219961.png\" alt=\"image-20220726133219961\"></p>\n<p>SQL 92 中，笛卡尔积也称为<strong>交叉连接</strong>，英文是 <strong>CROSS JOIN</strong>。在 SQL 99 中也是使用 CROSS JOIN表示交叉连接。它的作用就是可以把任意表进行连接，即使这两张表不相关。在MySQL中如下情况会出现笛卡尔积：</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">#查询员工姓名和所在部门名称</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT last_name,department_name FROM employees,departments;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT last_name,department_name FROM employees CROSS JOIN departments;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT last_name,department_name FROM employees INNER JOIN departments;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT last_name,department_name FROM employees JOIN departments;</span></span></code></pre></div><h3 id=\"1-3-案例分析与问题解决\"><a href=\"#1-3-案例分析与问题解决\" class=\"headerlink\" title=\"1.3 案例分析与问题解决\"></a>1.3 案例分析与问题解决</h3><ul>\n<li><p><strong>笛卡尔积的错误会在下面条件下产生</strong> ：</p>\n<ul>\n<li>省略多个表的连接条件（或关联条件）</li>\n<li>连接条件（或关联条件）无效</li>\n<li>所有表中的所有行互相连接</li>\n</ul>\n</li>\n<li><p>为了避免笛卡尔积， 可以 <strong>在 WHERE 加入有效的连接条件</strong>。</p>\n</li>\n<li><p>如果有n个表实现多表查询，则需要至少n-1个连接条件</p>\n</li>\n<li><p>加入连接条件后，查询语法：</p>\n</li>\n</ul>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT table1.column, table2.column</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM table1, table2</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">WHERE table1.column1 = table2.column2; #连接条件</span></span></code></pre></div><ul>\n<li><p><strong>在 WHERE子句中写入连接条件</strong>。</p>\n</li>\n<li><p>正确写法：</p>\n</li>\n</ul>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">#案例：查询员工的姓名及其部门名称</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT last_name, department_name</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees, departments</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">WHERE employees.department_id = departments.department_id;</span></span></code></pre></div><ul>\n<li><strong>在表中有相同列时，在列名之前加上表名前缀。</strong></li>\n</ul>\n<h2 id=\"2-多表查询分类讲解\"><a href=\"#2-多表查询分类讲解\" class=\"headerlink\" title=\"2. 多表查询分类讲解\"></a>2. 多表查询分类讲解</h2><h4 id=\"分类-1-：等值连接-vs-非等值连接\"><a href=\"#分类-1-：等值连接-vs-非等值连接\" class=\"headerlink\" title=\"分类 1 ：等值连接 vs 非等值连接\"></a><strong>分类 1 ：等值连接 vs 非等值连接</strong></h4><h5 id=\"等值连接\"><a href=\"#等值连接\" class=\"headerlink\" title=\"等值连接\"></a>等值连接</h5><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726133651676.png\" alt=\"image-20220726133651676\"></p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT employees.employee_id, employees.last_name,</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">employees.department_id,departments.department_id,departments.location_id</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees, departments</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">WHERE employees.department_id = departments.department_id;</span></span></code></pre></div><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726133709091.png\" alt=\"image-20220726133709091\"></p>\n<p><strong>拓展 1 ：多个连接条件与 AND 操作符</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726133810504.png\" alt=\"image-20220726133810504\"></p>\n<p><strong>拓展 2 ：区分重复的列名</strong></p>\n<ul>\n<li><p><strong>多个表中有相同列时，必须在列名之前加上表名前缀</strong>。</p>\n</li>\n<li><p>在不同表中具有相同列名的列可以用<strong>表名</strong>加以区分。</p>\n</li>\n</ul>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT employees.last_name, departments.department_name,employees.department_id</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees, departments</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">WHERE employees.department_id = departments.department_id;</span></span></code></pre></div><p><strong>拓展 3 ：表的别名</strong></p>\n<ul>\n<li><p>使用别名可以简化查询。</p>\n</li>\n<li><p>列名前使用表名前缀可以提高查询效率。</p>\n</li>\n</ul>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT e.employee_id, e.last_name, e.department_id,</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">d.department_id, d.location_id</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees e , departments d</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">WHERE e.department_id = d.department_id;</span></span></code></pre></div><ul>\n<li>需要注意的是，如果我们使用了表的别名，在查询字段中、过滤条件中就只能使用别名进行代替，不能使用原有的表名，否则就会报错。</li>\n</ul>\n<p><strong>阿里开发规范：</strong></p>\n<ul>\n<li><p>【强制】对于数据库中表记录的查询和变更，只要涉及多个表，都需要在列名前加表的别名（或表名）进行限定。</p>\n</li>\n<li><p>说明：对多表进行查询记录、更新记录、删除记录时，如果对操作列没有限定表的别名（或表名），并且操作列在多个表中存在时，就会抛异常。</p>\n</li>\n<li><p>正例：select t1.name from table_first as t1 , table_second as t2 where t1.id&#x3D;t2.id;</p>\n</li>\n<li><p>反例：在某业务中，由于多表关联查询语句没有加表的别名（或表名）的限制，正常运行两年后，最近在 某个表中增加一个同名字段，在预发布环境做数据库变更后，线上查询语句出现出1052 异常：Column ‘name’ in field list is ambiguous。</p>\n</li>\n</ul>\n<p><strong>拓展 4 ：连接多个表</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726134214604.png\" alt=\"image-20220726134214604\"></p>\n<ul>\n<li><strong>总结：连接 n个表,至少需要n- 1 个连接条件</strong>。 比如，连接三个表，至少需要两个连接条件。</li>\n</ul>\n<p>练习：查询出公司员工的 last_name,department_name, city</p>\n<h5 id=\"非等值连接\"><a href=\"#非等值连接\" class=\"headerlink\" title=\"非等值连接\"></a>非等值连接</h5><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726134320051.png\" alt=\"image-20220726134320051\"></p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT e.last_name, e.salary, j.grade_level</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees e, job_grades j</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">WHERE e.salary BETWEEN j.lowest_sal AND j.highest_sal;</span></span></code></pre></div><h4 id=\"分类-2-：自连接-vs-非自连接\"><a href=\"#分类-2-：自连接-vs-非自连接\" class=\"headerlink\" title=\"分类 2 ：自连接 vs 非自连接\"></a><strong>分类 2 ：自连接 vs 非自连接</strong></h4><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726134625423.png\" alt=\"image-20220726134625423\"></p>\n<ul>\n<li>当table1和table2本质上是同一张表，只是用取别名的方式虚拟成两张表以代表不同的意义。然后两个表再进行内连接，外连接等查询。</li>\n</ul>\n<p>题目：查询employees表，返回“Xxx works for Xxx”</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT CONCAT(worker.last_name ,&#39; works for &#39;, manager.last_name)</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees worker, employees manager</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">WHERE worker.manager_id = manager.employee_id ;</span></span></code></pre></div><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726134644592.png\" alt=\"image-20220726134644592\"></p>\n<p>练习：查询出last_name为 ‘Chen’ 的员工的 manager 的信息。</p>\n<h4 id=\"分类-3-：内连接-vs-外连接\"><a href=\"#分类-3-：内连接-vs-外连接\" class=\"headerlink\" title=\"分类 3 ：内连接 vs 外连接\"></a><strong>分类 3 ：内连接 vs 外连接</strong></h4><p>除了查询满足条件的记录以外，外连接还可以查询某一方不满足条件的记录。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726134745709.png\" alt=\"image-20220726134745709\"></p>\n<ul>\n<li><p>内连接: 合并具有同一列的两个以上的表的行, <strong>结果集中不包含一个表与另一个表不匹配的行</strong></p>\n</li>\n<li><p>外连接: 两个表在连接过程中除了返回满足连接条件的行以外 <strong>还返回左（或右）表中不满足条件的行 ，这种连接称为左（或右） 外连接</strong> 。没有匹配的行时, 结果表中相应的列为空(NULL)。</p>\n</li>\n<li><p>如果是左外连接，则连接条件中左边的表也称为&#x3D;&#x3D;主表&#x3D;&#x3D;，右边的表称为&#x3D;&#x3D;从表&#x3D;&#x3D;。</p>\n</li>\n<li><p>如果是右外连接，则连接条件中右边的表也称为&#x3D;&#x3D;主表&#x3D;&#x3D;，左边的表称为&#x3D;&#x3D;从表&#x3D;&#x3D;。</p>\n</li>\n</ul>\n<h5 id=\"SQL-92-：使用-创建连接\"><a href=\"#SQL-92-：使用-创建连接\" class=\"headerlink\" title=\"SQL 92 ：使用(+)创建连接\"></a>SQL 92 ：使用(+)创建连接</h5><ul>\n<li><p>在 SQL92 中采用（+）代表从表所在的位置。即左或右外连接中，(+) 表示哪个是从表。</p>\n</li>\n<li><p>Oracle 对 SQL92 支持较好，而 MySQL 则不支持 SQL92 的外连接。</p>\n</li>\n</ul>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">#左外连接</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT last_name,department_name</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees ,departments</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">WHERE employees.department_id = departments.department_id(+);</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">#右外连接</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT last_name,department_name</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees ,departments</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">WHERE employees.department_id(+) = departments.department_id;</span></span></code></pre></div><ul>\n<li>而且在 SQL92 中，只有左外连接和右外连接，没有满（或全）外连接。</li>\n</ul>\n<h2 id=\"3-SQL-99-语法实现多表查询\"><a href=\"#3-SQL-99-语法实现多表查询\" class=\"headerlink\" title=\"3. SQL 99 语法实现多表查询\"></a>3. SQL 99 语法实现多表查询</h2><h3 id=\"3-1-基本语法\"><a href=\"#3-1-基本语法\" class=\"headerlink\" title=\"3. 1 基本语法\"></a>3. 1 基本语法</h3><ul>\n<li>使用JOIN…ON子句创建连接的语法结构：</li>\n</ul>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT table1.column, table2.column,table3.column</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM table1</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">JOIN table2 ON table1 和 table2 的连接条件</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">JOIN table3 ON table2 和 table3 的连接条件</span></span></code></pre></div><ul>\n<li>它的嵌套逻辑类似我们使用的 FOR 循环：</li>\n</ul>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">for t1 in table1:</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">for t2 in table2:</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">if condition1:</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">for t3 in table3:</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">if condition2:</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">output t1 + t2 + t3</span></span></code></pre></div><p>SQL 99 采用的这种嵌套结构非常清爽、层次性更强、可读性更强，即使再多的表进行连接也都清晰可见。如果你采用 SQL 92 ，可读性就会大打折扣。</p>\n<ul>\n<li>语法说明：<ul>\n<li><strong>可以使用 ON 子句指定额外的连接条件</strong> 。</li>\n<li>这个连接条件是与其它条件分开的。</li>\n<li><strong>ON 子句使语句具有更高的易读性</strong> 。</li>\n<li>关键字 JOIN、INNER JOIN、CROSS JOIN 的含义是一样的，都表示内连接</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"3-2-内连接-INNER-JOIN-的实现\"><a href=\"#3-2-内连接-INNER-JOIN-的实现\" class=\"headerlink\" title=\"3. 2 内连接(INNER JOIN)的实现\"></a>3. 2 内连接(INNER JOIN)的实现</h3><ul>\n<li>语法：</li>\n</ul>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT 字段列表</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM A表 INNER JOIN B表</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">ON 关联条件</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">WHERE 等其他子句;</span></span></code></pre></div><p>题目 1 ：</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT e.employee_id, e.last_name, e.department_id,d.department_id, d.location_id</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees e JOIN departments d</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">ON (e.department_id = d.department_id);</span></span></code></pre></div><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726135351096.png\" alt=\"image-20220726135351096\"></p>\n<p>题目 2 ：</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT employee_id, city, department_name</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees e</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">JOIN departments d</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">ON d.department_id = e.department_id</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">JOIN locations l</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">ON d.location_id = l.location_id;</span></span></code></pre></div><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726135425041.png\" alt=\"image-20220726135425041\"></p>\n<h3 id=\"3-3-外连接-OUTER-JOIN-的实现\"><a href=\"#3-3-外连接-OUTER-JOIN-的实现\" class=\"headerlink\" title=\"3. 3 外连接(OUTER JOIN)的实现\"></a>3. 3 外连接(OUTER JOIN)的实现</h3><h4 id=\"3-3-1-左外连接-LEFT-OUTER-JOIN\"><a href=\"#3-3-1-左外连接-LEFT-OUTER-JOIN\" class=\"headerlink\" title=\"3. 3. 1 左外连接(LEFT OUTER JOIN)\"></a>3. 3. 1 左外连接(LEFT OUTER JOIN)</h4><ul>\n<li>语法：</li>\n</ul>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">#实现查询结果是A</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT 字段列表</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM A表 LEFT JOIN B表</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">ON 关联条件</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">WHERE 等其他子句;</span></span></code></pre></div><ul>\n<li>举例：</li>\n</ul>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT e.last_name, e.department_id, d.department_name</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees e</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">LEFT OUTER JOIN departments d</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">ON (e.department_id = d.department_id) ;</span></span></code></pre></div><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726135708121.png\" alt=\"image-20220726135708121\"></p>\n<h4 id=\"3-3-2-右外连接-RIGHT-OUTER-JOIN\"><a href=\"#3-3-2-右外连接-RIGHT-OUTER-JOIN\" class=\"headerlink\" title=\"3. 3. 2 右外连接(RIGHT OUTER JOIN)\"></a>3. 3. 2 右外连接(RIGHT OUTER JOIN)</h4><ul>\n<li>语法：</li>\n</ul>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">#实现查询结果是B</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT 字段列表</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM A表 RIGHT JOIN B表</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">ON 关联条件</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">WHERE 等其他子句;</span></span></code></pre></div><ul>\n<li>举例：</li>\n</ul>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT e.last_name, e.department_id, d.department_name</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees e</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">RIGHT OUTER JOIN departments d</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">ON (e.department_id = d.department_id) ;</span></span></code></pre></div><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726135730366.png\" alt=\"image-20220726135730366\"></p>\n<ul>\n<li>需要注意的是，LEFT JOIN 和 RIGHT JOIN 只存在于 SQL 99 及以后的标准中，在 SQL 92 中不存在，只能用 (+) 表示。</li>\n</ul>\n<h4 id=\"3-3-3-满外连接-FULL-OUTER-JOIN\"><a href=\"#3-3-3-满外连接-FULL-OUTER-JOIN\" class=\"headerlink\" title=\"3. 3. 3 满外连接(FULL OUTER JOIN)\"></a>3. 3. 3 满外连接(FULL OUTER JOIN)</h4><ul>\n<li><p>满外连接的结果 &#x3D; 左右表匹配的数据 + 左表没有匹配到的数据 + 右表没有匹配到的数据。</p>\n</li>\n<li><p>SQL 99 是支持满外连接的。使用FULL JOIN 或 FULL OUTER JOIN来实现。</p>\n</li>\n<li><p>需要注意的是，MySQL不支持FULL JOIN，但是可以用 LEFT JOIN UNION RIGHT JOIN代替。</p>\n</li>\n</ul>\n<h2 id=\"4-UNION的使用\"><a href=\"#4-UNION的使用\" class=\"headerlink\" title=\"4. UNION的使用\"></a>4. UNION的使用</h2><p><strong>合并查询结果</strong> 利用UNION关键字，可以给出多条SELECT语句，并将它们的结果组合成单个结果集。合并时，两个表对应的列数和数据类型必须相同，并且相互对应。各个SELECT语句之间使用UNION或UNIONALL关键字分隔。</p>\n<p>语法格式：</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT column,... FROM table1</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">UNION [ALL]</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT column,... FROM table2</span></span></code></pre></div><h5 id=\"UNION操作符\"><a href=\"#UNION操作符\" class=\"headerlink\" title=\"UNION操作符\"></a>UNION操作符</h5><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726140051634.png\" alt=\"image-20220726140051634\"></p>\n<p><strong>UNION 操作符返回两个查询的结果集的并集，去除重复记录。</strong></p>\n<h5 id=\"UNION-ALL操作符\"><a href=\"#UNION-ALL操作符\" class=\"headerlink\" title=\"UNION ALL操作符\"></a>UNION ALL操作符</h5><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726140145630.png\" alt=\"image-20220726140145630\"></p>\n<p><strong>UNION ALL操作符返回两个查询的结果集的并集。对于两个结果集的重复部分，不去重。</strong></p>\n<ul>\n<li><p>注意：执行UNION ALL语句时所需要的资源比UNION语句少。如果明确知道合并数据后的结果数据不存在重复数据，或者不需要去除重复的数据，则尽量使用UNION ALL语句，以提高数据查询的效率。</p>\n</li>\n<li><p>举例：查询部门编号&gt; 90 或邮箱包含a的员工信息</p>\n</li>\n</ul>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">#方式1</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT * FROM employees WHERE email LIKE &#39;%a%&#39; OR department_id&gt;90;</span></span></code></pre></div><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">#方式2</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT * FROM employees WHERE email LIKE &#39;%a%&#39;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">UNION</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT * FROM employees WHERE department_id&gt;90;</span></span></code></pre></div><ul>\n<li>举例：查询中国用户中男性的信息以及美国用户中年男性的用户信息</li>\n</ul>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT id,cname FROM t_chinamale WHERE csex=&#39;男&#39;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">UNION ALL</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT id,tname FROM t_usmale WHERE tGender=&#39;male&#39;;</span></span></code></pre></div><h2 id=\"5-7-种SQL-JOINS的实现\"><a href=\"#5-7-种SQL-JOINS的实现\" class=\"headerlink\" title=\"5. &#x3D;&#x3D;7 种SQL JOINS的实现&#x3D;&#x3D;\"></a>5. &#x3D;&#x3D;7 种SQL JOINS的实现&#x3D;&#x3D;</h2><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726141859178.png\" alt=\"image-20220726141859178\"></p>\n<h3 id=\"5-1-代码实现\"><a href=\"#5-1-代码实现\" class=\"headerlink\" title=\"5. 1 代码实现\"></a>5. 1 代码实现</h3><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">#中图：内连接 A∩B</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT employee_id,last_name,department_name</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees e JOIN departments d</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">ON e.`department_id` = d.`department_id`;</span></span></code></pre></div><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">#左上图：左外连接</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT employee_id,last_name,department_name</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees e LEFT JOIN departments d</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">ON e.`department_id` = d.`department_id`;</span></span></code></pre></div><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">#右上图：右外连接</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT employee_id,last_name,department_name</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees e RIGHT JOIN departments d</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">ON e.`department_id` = d.`department_id`;</span></span></code></pre></div><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">#左中图：A - A∩B</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT employee_id,last_name,department_name</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees e LEFT JOIN departments d</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">ON e.`department_id` = d.`department_id`</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">WHERE d.`department_id` IS NULL</span></span></code></pre></div><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">#右中图：B-A∩B</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT employee_id,last_name,department_name</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees e RIGHT JOIN departments d</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">ON e.`department_id` = d.`department_id`</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">WHERE e.`department_id` IS NULL</span></span></code></pre></div><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">#左下图：满外连接</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"># 左中图 + 右上图 A∪B</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT employee_id,last_name,department_name</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees e LEFT JOIN departments d</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">ON e.`department_id` = d.`department_id`</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">WHERE d.`department_id` IS NULL</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">UNION ALL #没有去重操作，效率高</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT employee_id,last_name,department_name</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees e RIGHT JOIN departments d</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">ON e.`department_id` = d.`department_id`;</span></span></code></pre></div><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">#右下图</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">#左中图 + 右中图 A ∪B- A∩B 或者 (A - A∩B) ∪ （B - A∩B）</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT employee_id,last_name,department_name</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees e LEFT JOIN departments d</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">ON e.`department_id` = d.`department_id`</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">WHERE d.`department_id` IS NULL</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">UNION ALL</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT employee_id,last_name,department_name</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees e RIGHT JOIN departments d</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">ON e.`department_id` = d.`department_id`</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">WHERE e.`department_id` IS NULL</span></span></code></pre></div><h3 id=\"5-2-语法格式小结\"><a href=\"#5-2-语法格式小结\" class=\"headerlink\" title=\"5. 2 语法格式小结\"></a>5. 2 语法格式小结</h3><ul>\n<li>左中图</li>\n</ul>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">#实现A - A∩B</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">select 字段列表</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">from A表 left join B表</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">on 关联条件</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">where 从表关联字段 is null and 等其他子句;</span></span></code></pre></div><ul>\n<li>右中图</li>\n</ul>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">#实现B - A∩B</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">select 字段列表</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">from A表 right join B表</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">on 关联条件</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">where 从表关联字段 is null and 等其他子句;</span></span></code></pre></div><ul>\n<li>左下图</li>\n</ul>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">#实现查询结果是A∪B</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">#用左外的A，union 右外的B</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">select 字段列表</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">from A表 left join B表</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">on 关联条件</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">where 等其他子句</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">union</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">select 字段列表</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">from A表 right join B表</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">on 关联条件</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">where 等其他子句;</span></span></code></pre></div><ul>\n<li>右下图</li>\n</ul>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">#实现A∪B - A∩B 或 (A - A∩B) ∪ （B - A∩B）</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">#使用左外的 (A - A∩B) union 右外的（B - A∩B）</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">select 字段列表</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">from A表 left join B表</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">on 关联条件</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">where 从表关联字段 is null and 等其他子句</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">union</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">select 字段列表</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">from A表 right join B表</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">on 关联条件</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">where 从表关联字段 is null and 等其他子句</span></span></code></pre></div><h2 id=\"6-SQL-99-语法新特性\"><a href=\"#6-SQL-99-语法新特性\" class=\"headerlink\" title=\"6. SQL 99 语法新特性\"></a>6. SQL 99 语法新特性</h2><h3 id=\"6-1-自然连接\"><a href=\"#6-1-自然连接\" class=\"headerlink\" title=\"6. 1 自然连接\"></a>6. 1 自然连接</h3><p>SQL 99 在 SQL 92 的基础上提供了一些特殊语法，比如 <strong>NATURAL JOIN</strong> 用来表示自然连接。我们可以把自然连接理解为 SQL 92 中的等值连接。它会帮你自动查询两张连接表中<strong>所有相同的字段</strong>，然后进行<strong>等值连接</strong>。</p>\n<p>在SQL 92 标准中：</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT employee_id,last_name,department_name</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees e JOIN departments d</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">ON e.`department_id` = d.`department_id`</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">AND e.`manager_id` = d.`manager_id`;</span></span></code></pre></div><p>在 SQL 99 中你可以写成：</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT employee_id,last_name,department_name</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees e NATURAL JOIN departments d;</span></span></code></pre></div><h3 id=\"6-2-USING连接\"><a href=\"#6-2-USING连接\" class=\"headerlink\" title=\"6. 2 USING连接\"></a>6. 2 USING连接</h3><p>当我们进行连接的时候，SQL 99 还支持使用 USING 指定数据表里的<strong>同名字段</strong>进行等值连接。但是只能配合JOIN一起使用。比如：</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT employee_id,last_name,department_name</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees e JOIN departments d</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">USING (department_id);</span></span></code></pre></div><p>你能看出与自然连接 NATURAL JOIN 不同的是，USING 指定了具体的相同的字段名称，你需要在 USING的括号 () 中填入要指定的同名字段。同时使用 <strong>JOIN…USING</strong> 可以简化 JOIN ON 的等值连接。它与下面的 SQL 查询结果是相同的：</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT employee_id,last_name,department_name</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees e ,departments d</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">WHERE e.department_id = d.department_id;</span></span></code></pre></div><h2 id=\"7-章节小结\"><a href=\"#7-章节小结\" class=\"headerlink\" title=\"7. 章节小结\"></a>7. 章节小结</h2><p>表连接的约束条件可以有三种方式：WHERE, ON, USING</p>\n<ul>\n<li><p>WHERE：适用于所有关联查询</p>\n</li>\n<li><p><strong>ON</strong>：只能和JOIN一起使用，只能写关联条件。虽然关联条件可以并到WHERE中和其他条件一起写，但分开写可读性更好。</p>\n</li>\n<li><p>USING：只能和JOIN一起使用，而且要求 <strong>两个</strong> 关联字段在关联表中名称一致，而且只能表示关联字段值相等</p>\n</li>\n</ul>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">#关联条件</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">#把关联条件写在where后面</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT last_name,department_name</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees,departments</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">WHERE employees.department_id = departments.department_id;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">#把关联条件写在on后面，只能和JOIN一起使用</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT last_name,department_name</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees INNER JOIN departments</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">ON employees.department_id = departments.department_id;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT last_name,department_name</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees CROSS JOIN departments</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">ON employees.department_id = departments.department_id;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT last_name,department_name</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees JOIN departments</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">ON employees.department_id = departments.department_id;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">#把关联字段写在using()中，只能和JOIN一起使用</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">#而且两个表中的关联字段必须名称相同，而且只能表示=</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">#查询员工姓名与基本工资</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT last_name,job_title</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees INNER JOIN jobs USING(job_id);</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">#n张表关联，需要n-1个关联条件</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">#查询员工姓名，基本工资，部门名称</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT last_name,job_title,department_name FROM employees,departments,jobs</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">WHERE employees.department_id = departments.department_id</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">AND employees.job_id = jobs.job_id;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT last_name,job_title,department_name</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees INNER JOIN departments INNER JOIN jobs</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">ON employees.department_id = departments.department_id</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">AND employees.job_id = jobs.job_id;</span></span></code></pre></div><ul>\n<li>注意：</li>\n</ul>\n<p>​\t我们要<strong>控制连接表的数量</strong>。多表连接就相当于嵌套 for 循环一样，非常消耗资源，会让 SQL 查询性能下降得很严重，因此不要连接不必要的表。在许多 DBMS 中，也都会有最大连接表的限制。</p>\n<ul>\n<li><p>【强制】超过三个表禁止 join。需要 join 的字段，数据类型保持绝对一致；多表关联查询时， 保证被关联的字段需要有索引。</p>\n</li>\n<li><p>说明：即使双表 join 也要注意表索引、SQL 性能。</p>\n</li>\n<li><p>来源：阿里巴巴《Java开发手册》</p>\n</li>\n</ul>\n<h2 id=\"附录：常用的-SQL-标准有哪些\"><a href=\"#附录：常用的-SQL-标准有哪些\" class=\"headerlink\" title=\"附录：常用的 SQL 标准有哪些\"></a>附录：常用的 SQL 标准有哪些</h2><p>在正式开始讲连接表的种类时，我们首先需要知道 SQL 存在不同版本的标准规范，因为不同规范下的表连接操作是有区别的。</p>\n<p>SQL 有两个主要的标准，分别是 <strong>SQL92</strong> 和 <strong>SQL99</strong>。 92 和 99 代表了标准提出的时间，SQL92 就是 92 年提出的标准规范。当然除了 SQL92 和 SQL99 以外，还存在 SQL-86、SQL-89、SQL:2003、SQL:2008、SQL:2011 和 SQL:2016 等其他的标准。</p>\n<p>这么多标准，到底该学习哪个呢？ <strong>实际上最重要的 SQL 标准就是 SQL 92 和 SQL 99</strong> 。一般来说 SQL92 的形式更简单，但是写的 SQL 语句会比较长，可读性较差。而 SQL99 相比于 SQL92 来说，语法更加复杂，但可读性更强。我们从这两个标准发布的页数也能看出，SQL92 的标准有 500 页，而 SQL99 标准超过了1000 页。实际上从 SQL99 之后，很少有人能掌握所有内容，因为确实太多了。就好比我们使用Windows、Linux 和 Office 的时候，很少有人能掌握全部内容一样。我们只需要掌握一些核心的功能，满足日常工作的需求即可。</p>\n<p><strong>SQL 92 和 SQL 99 是经典的 SQL 标准，也分别叫做 SQL- 2 和 SQL- 3 标准</strong>。 也正是在这两个标准发布之后，SQL 影响力越来越大，甚至超越了数据库领域。现如今 SQL 已经不仅仅是数据库领域的主流语言，还是信息领域中信息处理的主流语言。在图形检索、图像检索以及语音检索中都能看到 SQL 语言的使用。</p>\n<hr>\n<h1 id=\"第-07-章-单行函数\"><a href=\"#第-07-章-单行函数\" class=\"headerlink\" title=\"第 07 章_单行函数\"></a>第 07 章_单行函数</h1><h2 id=\"1-函数的理解\"><a href=\"#1-函数的理解\" class=\"headerlink\" title=\"1. 函数的理解\"></a>1. 函数的理解</h2><h3 id=\"1-1-什么是函数\"><a href=\"#1-1-什么是函数\" class=\"headerlink\" title=\"1. 1 什么是函数\"></a>1. 1 什么是函数</h3><p>函数在计算机语言的使用中贯穿始终，函数的作用是什么呢？它可以把我们经常使用的代码封装起来， 需要的时候直接调用即可。这样既 <strong>提高了代码效率</strong> ，又 <strong>提高了可维护性</strong> 。在 SQL 中我们也可以使用函数 对检索出来的数据进行函数操作。使用这些函数，可以极大地 <strong>提高用户对数据库的管理效率</strong> 。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726144417314.png\" alt=\"image-20220726144417314\"></p>\n<p>从函数定义的角度出发，我们可以将函数分成 <strong>内置函数</strong> 和 <strong>自定义函数</strong> 。在 SQL 语言中，同样也包括了 内置函数和自定义函数。内置函数是系统内置的通用函数，而自定义函数是我们根据自己的需要编写 的，本章及下一章讲解的是 SQL 的内置函数。</p>\n<h3 id=\"1-2-不同DBMS函数的差异\"><a href=\"#1-2-不同DBMS函数的差异\" class=\"headerlink\" title=\"1. 2 不同DBMS函数的差异\"></a>1. 2 不同DBMS函数的差异</h3><p>我们在使用 SQL 语言的时候，不是直接和这门语言打交道，而是通过它使用不同的数据库软件，即DBMS。<strong>DBMS 之间的差异性很大，远大于同一个语言不同版本之间的差异</strong>。实际上，只有很少的函数是被 DBMS 同时支持的。比如，大多数 DBMS 使用（||）或者（+）来做拼接符，而在 MySQL 中的字符串拼接函数concat()。大部分 DBMS 会有自己特定的函数，这就意味着<strong>采用 SQL 函数的代码可移植性是很差的</strong>，因此在使用函数的时候需要特别注意。</p>\n<h3 id=\"1-3-MySQL的内置函数及分类\"><a href=\"#1-3-MySQL的内置函数及分类\" class=\"headerlink\" title=\"1. 3 MySQL的内置函数及分类\"></a>1. 3 MySQL的内置函数及分类</h3><p>MySQL提供了丰富的内置函数，这些函数使得数据的维护与管理更加方便，能够更好地提供数据的分析与统计功能，在一定程度上提高了开发人员进行数据分析与统计的效率。</p>\n<p>MySQL提供的内置函数从 <strong>实现的功能角度</strong> 可以分为数值函数、字符串函数、日期和时间函数、流程控制函数、加密与解密函数、获取MySQL信息函数、聚合函数等。这里，我将这些丰富的内置函数再分为两类： <strong>单行函数 、 聚合函数（或分组函数）</strong> 。</p>\n<p><strong>两种SQL函数</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726144749320.png\" alt=\"image-20220726144749320\"></p>\n<p><strong>单行函数</strong></p>\n<ul>\n<li>操作数据对象 </li>\n<li>接受参数返回一个结果 </li>\n<li><strong>只对一行进行变换</strong> </li>\n<li><strong>每行返回一个结果</strong> </li>\n<li>可以嵌套 </li>\n<li>参数可以是一列或一个值</li>\n</ul>\n<h2 id=\"2-数值函数\"><a href=\"#2-数值函数\" class=\"headerlink\" title=\"2. &#x3D;&#x3D;数值函数&#x3D;&#x3D;\"></a>2. &#x3D;&#x3D;数值函数&#x3D;&#x3D;</h2><h3 id=\"2-1-基本函数\"><a href=\"#2-1-基本函数\" class=\"headerlink\" title=\"2. 1 基本函数\"></a>2. 1 基本函数</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726145001208.png\" alt=\"image-20220726145001208\"></p>\n<p>举例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726145106189.png\" alt=\"image-20220726145106189\"></p>\n<h3 id=\"2-2-角度与弧度互换函数\"><a href=\"#2-2-角度与弧度互换函数\" class=\"headerlink\" title=\"2. 2 角度与弧度互换函数\"></a>2. 2 角度与弧度互换函数</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726145139428.png\" alt=\"image-20220726145139428\"></p>\n<h3 id=\"2-3-三角函数\"><a href=\"#2-3-三角函数\" class=\"headerlink\" title=\"2. 3 三角函数\"></a>2. 3 三角函数</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726145154463.png\" alt=\"image-20220726145154463\"></p>\n<p>举例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726145259977.png\" alt=\"image-20220726145259977\"></p>\n<h3 id=\"2-4-指数与对数\"><a href=\"#2-4-指数与对数\" class=\"headerlink\" title=\"2. 4 指数与对数\"></a>2. 4 指数与对数</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726145320958.png\" alt=\"image-20220726145320958\"></p>\n<h3 id=\"2-5-进制间的转换\"><a href=\"#2-5-进制间的转换\" class=\"headerlink\" title=\"2. 5 进制间的转换\"></a>2. 5 进制间的转换</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726145337423.png\" alt=\"image-20220726145337423\"></p>\n<h2 id=\"3-字符串函数\"><a href=\"#3-字符串函数\" class=\"headerlink\" title=\"3. &#x3D;&#x3D;字符串函数&#x3D;&#x3D;\"></a>3. &#x3D;&#x3D;字符串函数&#x3D;&#x3D;</h2><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726145536426.png\" alt=\"image-20220726145536426\" style=\"zoom:120%;\" />\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726145553599.png\" alt=\"image-20220726145553599\"></p>\n<ul>\n<li>注意：MySQL中，字符串的位置是从 1 开始的。</li>\n</ul>\n<p>举例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726145642184.png\" alt=\"image-20220726145642184\"></p>\n<h2 id=\"4-日期和时间函数\"><a href=\"#4-日期和时间函数\" class=\"headerlink\" title=\"4. &#x3D;&#x3D;日期和时间函数&#x3D;&#x3D;\"></a>4. &#x3D;&#x3D;日期和时间函数&#x3D;&#x3D;</h2><h3 id=\"4-1-获取日期、时间\"><a href=\"#4-1-获取日期、时间\" class=\"headerlink\" title=\"4. 1 &#x3D;&#x3D;获取日期、时间&#x3D;&#x3D;\"></a>4. 1 &#x3D;&#x3D;获取日期、时间&#x3D;&#x3D;</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726145709323.png\" alt=\"image-20220726145709323\"></p>\n<p>举例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726145725254.png\" alt=\"image-20220726145725254\"></p>\n<h3 id=\"4-2-日期与-时间戳-的转换\"><a href=\"#4-2-日期与-时间戳-的转换\" class=\"headerlink\" title=\"4. 2 日期与&#x3D;&#x3D;时间戳&#x3D;&#x3D;的转换\"></a>4. 2 日期与&#x3D;&#x3D;时间戳&#x3D;&#x3D;的转换</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726145836635.png\" alt=\"image-20220726145836635\"></p>\n<p>举例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726145857493.png\" alt=\"image-20220726145857493\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726145949258.png\" alt=\"image-20220726145949258\"></p>\n<h3 id=\"4-3-获取月份、星期、星期数、天数等函数\"><a href=\"#4-3-获取月份、星期、星期数、天数等函数\" class=\"headerlink\" title=\"4. 3 获取月份、星期、星期数、天数等函数\"></a>4. 3 获取月份、星期、星期数、天数等函数</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726150006951.png\" alt=\"image-20220726150006951\"></p>\n<p>举例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726150054558.png\" alt=\"image-20220726150054558\"></p>\n<h3 id=\"4-4-日期的操作函数\"><a href=\"#4-4-日期的操作函数\" class=\"headerlink\" title=\"4. 4 日期的操作函数\"></a>4. 4 日期的操作函数</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726150137896.png\" alt=\"image-20220726150137896\"></p>\n<h3 id=\"4-5-时间-和秒钟转换的函数\"><a href=\"#4-5-时间-和秒钟转换的函数\" class=\"headerlink\" title=\"4. 5 &#x3D;&#x3D;时间&#x3D;&#x3D;和秒钟转换的函数\"></a>4. 5 &#x3D;&#x3D;时间&#x3D;&#x3D;和秒钟转换的函数</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726150224834.png\" alt=\"image-20220726150224834\"></p>\n<p>举例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726150235748.png\" alt=\"image-20220726150235748\"></p>\n<h3 id=\"4-6-计算日期和时间的函数\"><a href=\"#4-6-计算日期和时间的函数\" class=\"headerlink\" title=\"4. 6 &#x3D;&#x3D;计算日期和时间的函数&#x3D;&#x3D;\"></a>4. 6 &#x3D;&#x3D;计算日期和时间的函数&#x3D;&#x3D;</h3><p><strong>第 1 组：</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726150305428.png\" alt=\"image-20220726150305428\"></p>\n<p>上述函数中type的取值：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726150319490.png\" alt=\"image-20220726150319490\"></p>\n<p>举例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726150422503.png\" alt=\"image-20220726150422503\"></p>\n<p><strong>第 2 组：</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726150438397.png\" alt=\"image-20220726150438397\"></p>\n<p>举例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726150523646.png\" alt=\"image-20220726150523646\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726150549109.png\" alt=\"image-20220726150549109\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726150658219.png\" alt=\"image-20220726150658219\"></p>\n<p>举例：查询 7 天内的新增用户数有多少？</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT COUNT(*) as num FROM new_user </span></span>\n<span class=\"line\"><span style=\"color: #babed8\">WHERE TO_DAYS(NOW())-TO_DAYS(regist_time)&lt;=7</span></span></code></pre></div><h3 id=\"4-7-日期的格式化与解析\"><a href=\"#4-7-日期的格式化与解析\" class=\"headerlink\" title=\"4. 7 &#x3D;&#x3D;日期的格式化与解析&#x3D;&#x3D;\"></a>4. 7 &#x3D;&#x3D;日期的格式化与解析&#x3D;&#x3D;</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726150811539.png\" alt=\"image-20220726150811539\"></p>\n<p>上述<strong>非GET_FORMAT</strong>函数中fmt参数常用的格式符：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726150942799.png\" alt=\"image-20220726150942799\"></p>\n<p>GET_FORMAT函数中date_type和format_type参数取值如下：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726151100435.png\" alt=\"image-20220726151100435\"></p>\n<p>举例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726151131427.png\" alt=\"image-20220726151131427\"></p>\n<h2 id=\"5-流程控制函数\"><a href=\"#5-流程控制函数\" class=\"headerlink\" title=\"5. &#x3D;&#x3D;流程控制函数&#x3D;&#x3D;\"></a>5. &#x3D;&#x3D;流程控制函数&#x3D;&#x3D;</h2><p>流程处理函数可以根据不同的条件，执行不同的处理流程，可以在SQL语句中实现不同的条件选择。</p>\n<p>MySQL中的流程处理函数主要包括<strong>IF()、IFNULL()和CASE()函数</strong>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726151216815.png\" alt=\"image-20220726151216815\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726151345769.png\" alt=\"image-20220726151345769\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726151410968.png\" alt=\"image-20220726151410968\"></p>\n<p>练习：查询部门号为 10 , 20 , 30 的员工信息, 若部门号为 10 , 则打印其工资的 1. 1 倍, 20 号部门, 则打印其工资的 1. 2 倍, 30 号部门打印其工资的 1. 3 倍,其他部门，则打印其工资的1.4倍。</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> employee_id,last_name,department_id,salary,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">       </span><span style=\"color: #F78C6C\">CASE</span><span style=\"color: #BABED8\"> department_id</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #F78C6C\">WHEN</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">10</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">THEN</span><span style=\"color: #BABED8\"> salary </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">1</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #F78C6C\">WHEN</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">20</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">THEN</span><span style=\"color: #BABED8\"> salary</span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">2</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #F78C6C\">WHEN</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">30</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">THEN</span><span style=\"color: #BABED8\"> salary</span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">3</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #F78C6C\">END</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">details</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> employees</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">WHERE</span><span style=\"color: #BABED8\"> department_id </span><span style=\"color: #F78C6C\">IN</span><span style=\"color: #BABED8\"> (</span><span style=\"color: #F78C6C\">10</span><span style=\"color: #BABED8\">,</span><span style=\"color: #F78C6C\">20</span><span style=\"color: #BABED8\">,</span><span style=\"color: #F78C6C\">30</span><span style=\"color: #BABED8\">);</span></span></code></pre></div><h2 id=\"6-加密与解密函数\"><a href=\"#6-加密与解密函数\" class=\"headerlink\" title=\"6. 加密与解密函数\"></a>6. 加密与解密函数</h2><p>加密与解密函数主要用于对数据库中的数据进行加密和解密处理，以防止数据被他人窃取。这些函数在保证数据库安全时非常有用。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726151524317.png\" alt=\"image-20220726151524317\"></p>\n<p>可以看到，ENCODE(value,password_seed)函数与DECODE(value,password_seed)函数互为反函数。</p>\n<p>举例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726151610579.png\" alt=\"image-20220726151610579\"></p>\n<h2 id=\"7-MySQL信息函数\"><a href=\"#7-MySQL信息函数\" class=\"headerlink\" title=\"7. MySQL信息函数\"></a>7. MySQL信息函数</h2><p>MySQL中内置了一些可以查询MySQL信息的函数，这些函数主要用于帮助数据库开发或运维人员更好地对数据库进行维护工作。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726151651920.png\" alt=\"image-20220726151651920\"></p>\n<p>举例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726151807098.png\" alt=\"image-20220726151807098\"></p>\n<h2 id=\"8-其他函数\"><a href=\"#8-其他函数\" class=\"headerlink\" title=\"8. 其他函数\"></a>8. 其他函数</h2><p>MySQL中有些函数无法对其进行具体的分类，但是这些函数在MySQL的开发和运维过程中也是不容忽视的。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726151837846.png\" alt=\"image-20220726151837846\"></p>\n<p>举例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726151930924.png\" alt=\"image-20220726151930924\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726151943295.png\" alt=\"image-20220726151943295\"></p>\n<hr>\n<h1 id=\"第-08-章-聚合函数\"><a href=\"#第-08-章-聚合函数\" class=\"headerlink\" title=\"第 08 章_聚合函数\"></a>第 08 章_聚合函数</h1><p>我们上一章讲到了 SQL 单行函数。实际上 SQL 函数还有一类，叫做聚合（或聚集、分组）函数，它是对一组数据进行汇总的函数，输入的是一组数据的集合，输出的是单个值。</p>\n<h2 id=\"1-聚合函数介绍\"><a href=\"#1-聚合函数介绍\" class=\"headerlink\" title=\"1. 聚合函数介绍\"></a>1. 聚合函数介绍</h2><ul>\n<li>什么是聚合函数</li>\n</ul>\n<p>聚合函数作用于一组数据，并对一组数据返回一个值。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726152240692.png\" alt=\"image-20220726152240692\"></p>\n<ul>\n<li><p><strong>聚合函数类型</strong></p>\n<ul>\n<li><strong>AVG()</strong> </li>\n<li><strong>SUM()</strong> </li>\n<li><strong>MAX()</strong> </li>\n<li><strong>MIN()</strong> </li>\n<li><strong>COUNT()</strong></li>\n</ul>\n</li>\n<li><p>聚合函数语法</p>\n</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726152439259.png\" alt=\"image-20220726152439259\"></p>\n<ul>\n<li>聚合函数不能嵌套调用。比如不能出现类似“AVG(SUM(字段名称))”形式的调用。</li>\n</ul>\n<h3 id=\"1-1-AVG和SUM函数\"><a href=\"#1-1-AVG和SUM函数\" class=\"headerlink\" title=\"1. 1 AVG和SUM函数\"></a>1. 1 AVG和SUM函数</h3><p>可以对 <strong>数值型数据</strong> 使用AVG 和 SUM 函数。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726152930902.png\" alt=\"image-20220726152930902\"></p>\n<h3 id=\"1-2-MIN和MAX函数\"><a href=\"#1-2-MIN和MAX函数\" class=\"headerlink\" title=\"1. 2 MIN和MAX函数\"></a>1. 2 MIN和MAX函数</h3><p>可以对 <strong>任意数据类型</strong> 的数据使用 MIN 和 MAX 函数。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726152950864.png\" alt=\"image-20220726152950864\"></p>\n<h3 id=\"1-3-COUNT函数\"><a href=\"#1-3-COUNT函数\" class=\"headerlink\" title=\"1. 3 COUNT函数\"></a>1. 3 COUNT函数</h3><ul>\n<li>*<em>COUNT(</em>)**返回表中记录总数，适用于 <strong>任意数据类型</strong> 。</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726153020048.png\" alt=\"image-20220726153020048\"></p>\n<ul>\n<li>COUNT(expr) 返回expr不为空的记录总数。</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726153043306.png\" alt=\"image-20220726153043306\"></p>\n<ul>\n<li><strong>问题：用count(*)，count(1)，count(列名)谁好呢?</strong></li>\n</ul>\n<p>​\t其实，对于MyISAM引擎的表是没有区别的。这种引擎内部有一计数器在维护着行数。 Innodb引擎的表用count(*),count(1)直接读行数，复杂度是O(n)，因为innodb真的要去数一遍。但好 于具体的count(列名)。</p>\n<ul>\n<li><strong>问题：能不能使用count(列名)替换count(*)?</strong></li>\n</ul>\n<p>​\t不要使用 count(列名)来替代 <strong>count(  *  ) ， count(  *  )</strong> 是 SQL92 定义的标准统计行数的语法，跟数据库无关，跟 NULL 和非 NULL 无关。</p>\n<p>​\t 说明：<strong>count(*)会统计值为 NULL 的行，而 count(列名)不会统计此列为 NULL 值的行</strong>。</p>\n<h2 id=\"2-GROUP-BY\"><a href=\"#2-GROUP-BY\" class=\"headerlink\" title=\"2. GROUP BY\"></a>2. GROUP BY</h2><h3 id=\"2-1-基本使用\"><a href=\"#2-1-基本使用\" class=\"headerlink\" title=\"2. 1 基本使用\"></a>2. 1 基本使用</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726153213055.png\" alt=\"image-20220726153213055\"></p>\n<ul>\n<li><strong>可以使用GROUP BY子句将表中的数据分成若干组</strong></li>\n</ul>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT column, group_function(column)</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM table</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">[WHERE condition]</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">[GROUP BY group_by_expression]</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">[ORDER BY column];</span></span></code></pre></div><p><strong>明确：WHERE一定放在FROM后面</strong></p>\n<ul>\n<li><strong>在SELECT列表中所有未包含在组函数中的列都应该包含在 GROUP BY子句中</strong></li>\n<li>SELECT中出现的非组函数的字段必须声明在GROUP BY中,GROUP BY中声明的字段可以不出现在SELECT 中</li>\n<li>GROUP BY声明在FROM后面、WHERE后面，ORDER BY前面、LIMIT前面</li>\n</ul>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT department_id, AVG(salary)</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">GROUP BY department_id ;</span></span></code></pre></div><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726153418234.png\" alt=\"image-20220726153418234\"></p>\n<p>包含在 GROUP BY 子句中的列不必包含在SELECT 列表中</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT AVG(salary)</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">GROUP BY department_id ;</span></span></code></pre></div><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726153454793.png\" alt=\"image-20220726153454793\"></p>\n<h3 id=\"2-2-使用多个列分组\"><a href=\"#2-2-使用多个列分组\" class=\"headerlink\" title=\"2. 2 使用多个列分组\"></a>2. 2 使用多个列分组</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726153511516.png\" alt=\"image-20220726153511516\"></p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT department_id dept_id, job_id, SUM(salary)</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">GROUP BY department_id, job_id ;</span></span></code></pre></div><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726153540105.png\" alt=\"image-20220726153540105\"></p>\n<h3 id=\"2-3-GROUP-BY中使用WITH-ROLLUP\"><a href=\"#2-3-GROUP-BY中使用WITH-ROLLUP\" class=\"headerlink\" title=\"2. 3 GROUP BY中使用WITH ROLLUP\"></a>2. 3 GROUP BY中使用WITH ROLLUP</h3><p>使用<strong>WITH ROLLUP</strong>关键字之后，在所有查询出的分组记录之后增加一条记录，该记录计算查询出的<strong>所有记录的总和</strong>，即统计记录数量。</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT department_id,AVG(salary)</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">WHERE department_id &gt; 80</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">GROUP BY department_id WITH ROLLUP;</span></span></code></pre></div><ul>\n<li>注意：当使用ROLLUP时，不能同时使用ORDER BY子句进行结果排序，即ROLLUP和ORDER BY是互相排斥的。</li>\n</ul>\n<h2 id=\"3-HAVING\"><a href=\"#3-HAVING\" class=\"headerlink\" title=\"3. HAVING\"></a>3. HAVING</h2><h3 id=\"3-1-基本使用\"><a href=\"#3-1-基本使用\" class=\"headerlink\" title=\"3. 1 基本使用\"></a>3. 1 基本使用</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726153651019.png\" alt=\"image-20220726153651019\"></p>\n<p><strong>过滤分组：HAVING子句</strong></p>\n<ol>\n<li><p>行已经被分组。</p>\n</li>\n<li><p>使用了聚合函数。</p>\n</li>\n<li><p>满足HAVING 子句中条件的分组将被显示。</p>\n</li>\n<li><p>HAVING 不能单独使用，必须要跟 GROUP BY 一起使用。</p>\n</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726153953173.png\" alt=\"image-20220726153953173\"></p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT department_id, MAX(salary)</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">GROUP BY department_id</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">HAVING MAX(salary)&gt;10000 ;</span></span></code></pre></div><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726154002125.png\" alt=\"image-20220726154002125\"></p>\n<ul>\n<li><strong>非法使用聚合函数 ： 不能在 WHERE 子句中使用聚合函数</strong>。 如下：</li>\n</ul>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT department_id, AVG(salary)</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM employees</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">WHERE AVG(salary) &gt; 8000</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">GROUP BY department_id;</span></span></code></pre></div><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726154047319.png\" alt=\"image-20220726154047319\"></p>\n<h3 id=\"3-2-WHERE和HAVING的对比\"><a href=\"#3-2-WHERE和HAVING的对比\" class=\"headerlink\" title=\"3. 2 WHERE和HAVING的对比\"></a>3. 2 WHERE和HAVING的对比</h3><p><strong>区别 1 ：WHERE 可以直接使用表中的字段作为筛选条件，但不能使用分组中的计算函数作为筛选条件；HAVING 必须要与 GROUP BY 配合使用，可以把分组计算的函数和分组字段作为筛选条件。</strong></p>\n<p>这决定了，在需要对数据进行分组统计的时候，HAVING 可以完成 WHERE 不能完成的任务。这是因为，在查询语法结构中，WHERE 在 GROUP BY 之前，所以无法对分组结果进行筛选。HAVING 在 GROUP BY 之后，可以使用分组字段和分组中的计算函数，对分组的结果集进行筛选，这个功能是 WHERE 无法完成的。另外，WHERE排除的记录不再包括在分组中。</p>\n<p><strong>区别 2 ：如果需要通过连接从关联表中获取需要的数据，WHERE 是先筛选后连接，而 HAVING 是先连接后筛选。</strong></p>\n<p> 这一点，就决定了在关联查询中，<strong>WHERE 比 HAVING 更高效</strong>。因为 WHERE 可以先筛选，用一个筛选后的较小数据集和关联表进行连接，这样占用的资源比较少，执行效率也比较高。HAVING 则需要先把结果集准备好，也就是用未被筛选的数据集进行关联，然后对这个大的数据集进行筛选，这样占用的资源就比较多，执行效率也较低。</p>\n<p><strong>小结如下：</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726154307539.png\" alt=\"image-20220726154307539\"></p>\n<p><strong>开发中的选择：</strong></p>\n<p>WHERE 和 HAVING 也不是互相排斥的，我们可以在一个查询里面同时使用 WHERE 和 HAVING。包含分组 统计函数的条件用 HAVING，普通条件用 WHERE。这样，我们就既利用了 WHERE 条件的高效快速，又发 挥了 HAVING 可以使用包含分组统计函数的查询条件的优点。当数据量特别大的时候，运行效率会有很 大的差别。</p>\n<h2 id=\"4-SELECT的执行过程\"><a href=\"#4-SELECT的执行过程\" class=\"headerlink\" title=\"4. SELECT的执行过程\"></a>4. SELECT的执行过程</h2><h3 id=\"4-1-查询的结构\"><a href=\"#4-1-查询的结构\" class=\"headerlink\" title=\"4. 1 查询的结构\"></a>4. 1 查询的结构</h3><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">#方式 1 ：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT ...,....,...</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM ...,...,....</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">WHERE 多表的连接条件</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">AND 不包含组函数的过滤条件</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">GROUP BY ...,...</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">HAVING 包含组函数的过滤条件</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">ORDER BY ... ASC/DESC</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">LIMIT ...,...</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">#方式 2 ：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">SELECT ...,....,...</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM ... JOIN ...</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">ON 多表的连接条件</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">JOIN ...</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">ON ...</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">WHERE 不包含组函数的过滤条件</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">AND/OR 不包含组函数的过滤条件</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">GROUP BY ...,...</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">HAVING 包含组函数的过滤条件</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">ORDER BY ... ASC/DESC</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">LIMIT ...,...</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">#其中：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">#（ 1 ）from：从哪些表中筛选</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">#（ 2 ）on：关联多表查询时，去除笛卡尔积</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">#（ 3 ）where：从表中筛选的条件</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">#（ 4 ）group by：分组依据</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">#（ 5 ）having：在统计结果中再次筛选</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">#（ 6 ）order by：排序</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">#（ 7 ）limit：分页</span></span></code></pre></div><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220928205423761.png\" alt=\"image-20220928205423761\"></p>\n<h3 id=\"4-2-SELECT执行顺序\"><a href=\"#4-2-SELECT执行顺序\" class=\"headerlink\" title=\"4. 2 SELECT执行顺序\"></a>4. 2 SELECT执行顺序</h3><p>你需要记住 SELECT 查询时的两个顺序：</p>\n<p><strong>1. 关键字的顺序是不能颠倒的：</strong></p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT ... FROM ... WHERE ... GROUP BY ... HAVING ... ORDER BY ... LIMIT...</span></span></code></pre></div><p><strong>2 .SELECT 语句的执行顺序</strong> （在 MySQL 和 Oracle 中，SELECT 执行顺序基本相同）：</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">FROM -&gt; WHERE -&gt; GROUP BY -&gt; HAVING -&gt; SELECT 的字段 -&gt; DISTINCT -&gt; ORDER BY -&gt; LIMIT</span></span></code></pre></div><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20220726154643799.png\" alt=\"image-20220726154643799\"></p>\n<p>比如你写了一个 SQL 语句，那么它的关键字顺序和执行顺序是下面这样的：</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">SELECT DISTINCT player_id, player_name, count(*) as num # 顺序 5</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">FROM player JOIN team ON player.team_id = team.team_id # 顺序 1</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">WHERE height &gt; 1.80 # 顺序 2</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">GROUP BY player.team_id # 顺序 3</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">HAVING num &gt; 2 # 顺序 4</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">ORDER BY num DESC # 顺序 6</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">LIMIT 2 # 顺序 7</span></span></code></pre></div><p>在 SELECT 语句执行这些步骤的时候，每个步骤都会产生一个<strong>虚拟表</strong>，然后将这个虚拟表传入下一个步骤中作为输入。需要注意的是，这些步骤隐含在 SQL 的执行过程中，对于我们来说是不可见的。</p>\n<h3 id=\"4-3-SQL-的执行原理\"><a href=\"#4-3-SQL-的执行原理\" class=\"headerlink\" title=\"4. 3 SQL 的执行原理\"></a>4. 3 SQL 的执行原理</h3><p>SELECT 是先执行 FROM 这一步的。在这个阶段，如果是多张表联查，还会经历下面的几个步骤：</p>\n<ol>\n<li>首先先通过 CROSS JOIN 求笛卡尔积，相当于得到虚拟表 vt（virtual table）1-1；</li>\n<li>通过 ON 进行筛选，在虚拟表 vt1-1 的基础上进行筛选，得到虚拟表 vt1-2；</li>\n<li>添加外部行。如果我们使用的是左连接、右链接或者全连接，就会涉及到外部行，也就是在虚拟<br>表 vt1-2 的基础上增加外部行，得到虚拟表 vt1-3。</li>\n</ol>\n<p>当然如果我们操作的是两张以上的表，还会重复上面的步骤，直到所有表都被处理完为止。这个过程得到是我们的原始数据。</p>\n<p>当我们拿到了查询数据表的原始数据，也就是最终的虚拟表 <strong>vt1</strong>，就可以在此基础上再进行 <strong>WHERE 阶段</strong>。在这个阶段中，会根据 vt1 表的结果进行筛选过滤，得到虚拟表 <strong>vt2</strong>。</p>\n<p>然后进入第三步和第四步，也就是 <strong>GROUP 和 HAVING 阶段</strong>。在这个阶段中，实际上是在虚拟表 vt2 的基础上进行分组和分组过滤，得到中间的虚拟表 <strong>vt3</strong> 和 <strong>vt4</strong>。</p>\n<p>当我们完成了条件筛选部分之后，就可以筛选表中提取的字段，也就是进入到 <strong>SELECT</strong> 和 <strong>DISTINCT</strong>阶段。</p>\n<p>首先在 SELECT 阶段会提取想要的字段，然后在 DISTINCT 阶段过滤掉重复的行，分别得到中间的虚拟表<strong>vt5- 1</strong> 和 <strong>vt5- 2</strong> 。</p>\n<p>当我们提取了想要的字段数据之后，就可以按照指定的字段进行排序，也就是 <strong>ORDER BY 阶段</strong>，得到虚拟表 <strong>vt6</strong>。</p>\n<p>最后在 vt6 的基础上，取出指定行的记录，也就是 <strong>LIMIT 阶段</strong>，得到最终的结果，对应的是虚拟表<strong>vt7</strong>。</p>\n<p>当然我们在写 SELECT 语句的时候，不一定存在所有的关键字，相应的阶段就会省略。</p>\n<p>同时因为 SQL 是一门类似英语的结构化查询语言，所以我们在写 SELECT 语句的时候，还要注意相应的关键字顺序， <strong>所谓底层运行的原理，就是我们刚才讲到的执行顺序。</strong></p>\n<hr>\n<h1 id=\"第-09-章-子查询\"><a href=\"#第-09-章-子查询\" class=\"headerlink\" title=\"第 09 章_子查询\"></a>第 09 章_子查询</h1><p>子查询指一个查询语句嵌套在另一个查询语句内部的查询，这个特性从MySQL 4. 1 开始引入。</p>\n<p>SQL 中子查询的使用大大增强了 SELECT 查询的能力，因为很多时候查询需要从结果集中获取数据，或者需要从同一个表中先计算得出一个数据结果，然后与这个数据结果（可能是某个标量，也可能是某个集合）进行比较。</p>\n<h2 id=\"1-需求分析与问题解决\"><a href=\"#1-需求分析与问题解决\" class=\"headerlink\" title=\"1. 需求分析与问题解决\"></a>1. 需求分析与问题解决</h2><h3 id=\"1-1实际问题\"><a href=\"#1-1实际问题\" class=\"headerlink\" title=\"1.1实际问题\"></a>1.1实际问题</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221001171359572.png\" alt=\"image-20221001171359572\"></p>\n<p>现有解决方式：</p>\n<p>方式一：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> salary</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> employees</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">WHERE</span><span style=\"color: #BABED8\"> last_name </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">Abel</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> last_name,salary</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> employees</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">WHERE</span><span style=\"color: #BABED8\"> salary </span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">11000</span><span style=\"color: #BABED8\"> ;</span></span></code></pre></div><p>方式二：自连接</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> e2.last_name,e2.salary</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> employees e1,employees e</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">WHERE</span><span style=\"color: #BABED8\"> e1.last_name </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">Abel</span><span style=\"color: #89DDFF\">&#39;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">AND</span><span style=\"color: #BABED8\"> e1.</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">salary</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> e2.</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">salary</span><span style=\"color: #89DDFF\">`</span></span></code></pre></div><p>方式三：子查询</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> last_name,salary</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> employees</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">WHERE</span><span style=\"color: #BABED8\"> salary </span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> (</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> salary</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> employees</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F78C6C\">WHERE</span><span style=\"color: #BABED8\"> last_name </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">Abel</span><span style=\"color: #89DDFF\">&#39;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    );</span></span></code></pre></div><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221001171519669.png\" alt=\"image-20221001171519669\"></p>\n<h3 id=\"1-2-子查询的基本使用\"><a href=\"#1-2-子查询的基本使用\" class=\"headerlink\" title=\"1. 2 子查询的基本使用\"></a>1. 2 子查询的基本使用</h3><p>子查询的基本语法结构：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221001171536033.png\" alt=\"image-20221001171536033\"></p>\n<ul>\n<li><p>子查询（内查询）在主查询之前一次执行完成。</p>\n</li>\n<li><p>子查询的结果被主查询（外查询）使用 。</p>\n</li>\n<li><p><strong>注意事项</strong></p>\n<ul>\n<li>子查询要包含在括号内</li>\n<li>将子查询放在比较条件的右侧</li>\n<li>单行操作符对应单行子查询，多行操作符对应多行子查询</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"1-3-子查询的分类\"><a href=\"#1-3-子查询的分类\" class=\"headerlink\" title=\"1. 3 子查询的分类\"></a>1. 3 子查询的分类</h3><p><strong>分类方式 1 ：</strong></p>\n<p>我们按内查询的结果返回一条还是多条记录，将子查询分为<strong>单行子查询</strong>、<strong>多行子查询</strong>。</p>\n<ul>\n<li>单行子查询</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221001171708854.png\" alt=\"image-20221001171708854\"></p>\n<ul>\n<li>多行子查询</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221001171725848.png\" alt=\"image-20221001171725848\"></p>\n<p><strong>分类方式 2 ：</strong></p>\n<p>我们按内查询是否被执行多次，将子查询划分为<strong>相关(或关联)子查询</strong>和<strong>不相关(或非关联)子查询</strong>。</p>\n<p>子查询从数据表中查询了数据结果，如果这个数据结果只执行一次，然后这个数据结果作为主查询的条件进行执行，那么这样的子查询叫做不相关子查询。</p>\n<p>同样，如果子查询需要执行多次，即采用循环的方式，先从外部查询开始，每次都传入子查询进行查询，然后再将结果反馈给外部，这种嵌套的执行方式就称为相关子查询。</p>\n<h2 id=\"2-单行子查询\"><a href=\"#2-单行子查询\" class=\"headerlink\" title=\"2. 单行子查询\"></a>2. 单行子查询</h2><h3 id=\"2-1-单行比较操作符\"><a href=\"#2-1-单行比较操作符\" class=\"headerlink\" title=\"2. 1 单行比较操作符\"></a>2. 1 单行比较操作符</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221001171951141.png\" alt=\"image-20221001171951141\"></p>\n<h3 id=\"2-2-代码示例\"><a href=\"#2-2-代码示例\" class=\"headerlink\" title=\"2. 2 代码示例\"></a>2. 2 代码示例</h3><p>题目：查询工资大于 149 号员工工资的员工的信息</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221001172041763.png\" alt=\"image-20221001172041763\"></p>\n<p>题目：返回job_id与 141 号员工相同，salary比 143 号员工多的员工姓名，job_id和工资</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221001172102795.png\" alt=\"image-20221001172102795\"></p>\n<p>题目：返回公司工资最少的员工的last_name,job_id和salary</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221001172121254.png\" alt=\"image-20221001172121254\"></p>\n<p>题目：查询与 141 号或 174 号员工的manager_id和department_id相同的其他员工的employee_id，manager_id，department_id</p>\n<p>实现方式 1 ：不成对比较</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221001172210873.png\" alt=\"image-20221001172210873\"></p>\n<p>实现方式 2 ：成对比较</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221001172221900.png\" alt=\"image-20221001172221900\"></p>\n<h3 id=\"2-3-HAVING-中的子查询\"><a href=\"#2-3-HAVING-中的子查询\" class=\"headerlink\" title=\"2. 3 HAVING 中的子查询\"></a>2. 3 HAVING 中的子查询</h3><ul>\n<li><p>首先执行子查询。</p>\n</li>\n<li><p>向主查询中的HAVING 子句返回结果。</p>\n</li>\n</ul>\n<p>题目：查询最低工资大于 50 号部门最低工资的部门id和其最低工资</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221001172306852.png\" alt=\"image-20221001172306852\"></p>\n<h3 id=\"2-4-CASE中的子查询\"><a href=\"#2-4-CASE中的子查询\" class=\"headerlink\" title=\"2. 4 CASE中的子查询\"></a>2. 4 CASE中的子查询</h3><p>在CASE表达式中使用单列子查询：</p>\n<p>题目：显式员工的employee_id,last_name和location。其中，若员工department_id与location_id为 1800的department_id相同，则location为’Canada’，其余则为’USA’。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221001172331356.png\" alt=\"image-20221001172331356\"></p>\n<h3 id=\"2-5-子查询中的空值问题\"><a href=\"#2-5-子查询中的空值问题\" class=\"headerlink\" title=\"2. 5 子查询中的空值问题\"></a>2. 5 子查询中的空值问题</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221001172348734.png\" alt=\"image-20221001172348734\"></p>\n<ul>\n<li>子查询不返回任何行</li>\n</ul>\n<h3 id=\"2-5-非法使用子查询\"><a href=\"#2-5-非法使用子查询\" class=\"headerlink\" title=\"2. 5 非法使用子查询\"></a>2. 5 非法使用子查询</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221001172428198.png\" alt=\"image-20221001172428198\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221001172438007.png\" alt=\"image-20221001172438007\"></p>\n<ul>\n<li>多行子查询使用单行比较符</li>\n</ul>\n<h2 id=\"3-多行子查询\"><a href=\"#3-多行子查询\" class=\"headerlink\" title=\"3. 多行子查询\"></a>3. 多行子查询</h2><ul>\n<li><p>也称为集合比较子查询</p>\n</li>\n<li><p>内查询返回多行</p>\n</li>\n<li><p>使用多行比较操作符</p>\n</li>\n</ul>\n<h3 id=\"3-1-多行比较操作符\"><a href=\"#3-1-多行比较操作符\" class=\"headerlink\" title=\"3. 1 多行比较操作符\"></a>3. 1 多行比较操作符</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221001172630568.png\" alt=\"image-20221001172630568\"></p>\n<ul>\n<li>体会 ANY 和 ALL 的区别</li>\n</ul>\n<h3 id=\"3-2-代码示例\"><a href=\"#3-2-代码示例\" class=\"headerlink\" title=\"3. 2 代码示例\"></a>3. 2 代码示例</h3><p>题目：返回其它job_id中比job_id为‘IT_PROG’部门任一工资低的员工的员工号、姓名、job_id 以及salary</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221001172655517.png\" alt=\"image-20221001172655517\"></p>\n<p>题目：返回其它job_id中比job_id为‘IT_PROG’部门所有工资都低的员工的员工号、姓名、job_id以及salary</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221001172710097.png\" alt=\"image-20221001172710097\"></p>\n<p>题目：查询平均工资最低的部门id</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221001172736740.png\" alt=\"image-20221001172736740\"></p>\n<h3 id=\"3-3-空值问题\"><a href=\"#3-3-空值问题\" class=\"headerlink\" title=\"3. 3 空值问题\"></a>3. 3 空值问题</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221001172752073.png\" alt=\"image-20221001172752073\"></p>\n<h2 id=\"4-相关子查询\"><a href=\"#4-相关子查询\" class=\"headerlink\" title=\"4. 相关子查询\"></a>4. 相关子查询</h2><h3 id=\"4-1-相关子查询执行流程\"><a href=\"#4-1-相关子查询执行流程\" class=\"headerlink\" title=\"4. 1 相关子查询执行流程\"></a>4. 1 相关子查询执行流程</h3><p>如果子查询的执行依赖于外部查询，通常情况下都是因为子查询中的表用到了外部的表，并进行了条件关联，因此每执行一次外部查询，子查询都要重新计算一次，这样的子查询就称之为<strong>关联子查询</strong>。</p>\n<p>相关子查询按照一行接一行的顺序执行，主查询的每一行都执行一次子查询。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221001172902406.png\" alt=\"image-20221001172902406\"></p>\n<p>说明： <strong>子查询中使用主查询中的列</strong></p>\n<h3 id=\"4-2-代码示例\"><a href=\"#4-2-代码示例\" class=\"headerlink\" title=\"4. 2 代码示例\"></a>4. 2 代码示例</h3><p>题目：查询员工中工资大于本部门平均工资的员工的last_name,salary和其department_id</p>\n<p>方式一：相关子查询</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221001172926490.png\" alt=\"image-20221001172926490\"></p>\n<p>方式二：在 FROM 中使用子查询</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221001173012412.png\" alt=\"image-20221001173012412\"></p>\n<ul>\n<li>from型的子查询：子查询是作为from的一部分，子查询要用()引起来，并且要给这个子查询取别名， 把它当成一张“临时的虚拟的表”来使用。</li>\n</ul>\n<p>在ORDER BY 中使用子查询：</p>\n<p>题目：查询员工的id,salary,按照department_name 排序</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221001173044740.png\" alt=\"image-20221001173044740\"></p>\n<p>题目：若employees表中employee_id与job_history表中employee_id相同的数目不小于 2 ，输出这些相同id的员工employee_id,last_name和其job_id</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221001173051862.png\" alt=\"image-20221001173051862\"></p>\n<h3 id=\"4-3-EXISTS-与-NOT-EXISTS关键字\"><a href=\"#4-3-EXISTS-与-NOT-EXISTS关键字\" class=\"headerlink\" title=\"4. 3 EXISTS 与 NOT EXISTS关键字\"></a>4. 3 EXISTS 与 NOT EXISTS关键字</h3><ul>\n<li><p>关联子查询通常也会和 EXISTS操作符一起来使用，用来检查在子查询中是否存在满足条件的行。</p>\n</li>\n<li><p><strong>如果在子查询中不存在满足条件的行</strong>：</p>\n<ul>\n<li>条件返回 FALSE</li>\n<li>继续在子查询中查找</li>\n</ul>\n</li>\n<li><p><strong>如果在子查询中存在满足条件的行</strong>：</p>\n<ul>\n<li>不在子查询中继续查找</li>\n<li>条件返回 TRUE</li>\n</ul>\n</li>\n<li><p>NOT EXISTS关键字表示如果不存在某种条件，则返回TRUE，否则返回FALSE。</p>\n</li>\n</ul>\n<p>题目：查询公司管理者的employee_id，last_name，job_id，department_id信息</p>\n<p>方式一：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221001173152870.png\" alt=\"image-20221001173152870\"></p>\n<p>方式二：自连接</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221001173202976.png\" alt=\"image-20221001173202976\"></p>\n<p>方式三：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221001173217785.png\" alt=\"image-20221001173217785\"></p>\n<p>题目：查询departments表中，不存在于employees表中的部门的department_id和department_name</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221001173233610.png\" alt=\"image-20221001173233610\"></p>\n<h3 id=\"4-4-相关更新\"><a href=\"#4-4-相关更新\" class=\"headerlink\" title=\"4. 4 相关更新\"></a>4. 4 相关更新</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221001173257503.png\" alt=\"image-20221001173257503\"></p>\n<p>使用相关子查询依据一个表中的数据更新另一个表的数据。</p>\n<p>题目：在employees中增加一个department_name字段，数据为员工对应的部门名称</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221001173310030.png\" alt=\"image-20221001173310030\"></p>\n<h3 id=\"4-4-相关删除\"><a href=\"#4-4-相关删除\" class=\"headerlink\" title=\"4. 4 相关删除\"></a>4. 4 相关删除</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221001173320164.png\" alt=\"image-20221001173320164\"></p>\n<p>使用相关子查询依据一个表中的数据删除另一个表的数据。</p>\n<p>题目：删除表employees中，其与emp_history表皆有的数据</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221001173357224.png\" alt=\"image-20221001173357224\"></p>\n<h2 id=\"5-抛一个思考题\"><a href=\"#5-抛一个思考题\" class=\"headerlink\" title=\"5. 抛一个思考题\"></a>5. 抛一个思考题</h2><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221007182551325.png\" alt=\"image-20221007182551325\"></p>\n<p>问题： 谁的工资比Abel的高？</p>\n<p>解答：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221001173501299.png\" alt=\"image-20221001173501299\"></p>\n<p>问题： 以上两种方式有好坏之分吗？</p>\n<p>解答： 自连接方式好！</p>\n<p>题目中可以使用子查询，也可以使用自连接。一般情况建议你使用自连接，因为在许多 DBMS 的处理过程中，对于自连接的处理速度要比子查询快得多。</p>\n<p>可以这样理解：子查询实际上是通过未知表进行查询后的条件判断，而自连接是通过已知的自身数据表进行条件判断，因此在大部分 DBMS 中都对自连接处理进行了优化。</p>\n<hr>\n<h1 id=\"第-10-章-创建和管理表\"><a href=\"#第-10-章-创建和管理表\" class=\"headerlink\" title=\"第 10 章_创建和管理表\"></a>第 10 章_创建和管理表</h1><h2 id=\"1-基础知识\"><a href=\"#1-基础知识\" class=\"headerlink\" title=\"1. 基础知识\"></a>1. 基础知识</h2><h3 id=\"1-1-一条数据存储的过程\"><a href=\"#1-1-一条数据存储的过程\" class=\"headerlink\" title=\"1. 1 一条数据存储的过程\"></a>1. 1 一条数据存储的过程</h3><p><strong>存储数据是处理数据的第一步</strong>。只有正确地把数据存储起来，我们才能进行有效的处理和分析。否则，只能是一团乱麻，无从下手。</p>\n<p>那么，怎样才能把用户各种经营相关的、纷繁复杂的数据，有序、高效地存储起来呢？ 在 MySQL 中，一个完整的数据存储过程总共有 4 步，分别是创建数据库、确认字段、创建数据表、插入数据。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221001173721648.png\" alt=\"image-20221001173721648\"></p>\n<p>我们要先创建一个数据库，而不是直接创建数据表呢？</p>\n<p>因为从系统架构的层次上看，MySQL 数据库系统从大到小依次是<strong>数据库服务器</strong>、<strong>数据库</strong>、<strong>数据表</strong>、数据表的<strong>行与列</strong>。</p>\n<p>MySQL 数据库服务器之前已经安装。所以，我们就从创建数据库开始。</p>\n<h3 id=\"1-2-标识符命名规则\"><a href=\"#1-2-标识符命名规则\" class=\"headerlink\" title=\"1. 2 标识符命名规则\"></a>1. 2 标识符命名规则</h3><ul>\n<li>数据库名、表名不得超过 30 个字符，变量名限制为 29 个</li>\n<li>必须只能包含 A–Z, a–z, 0 – 9 , _共 63 个字符</li>\n<li>数据库名、表名、字段名等对象名中间不要包含空格</li>\n<li>同一个MySQL软件中，数据库不能同名；同一个库中，表不能重名；同一个表中，字段不能重名</li>\n<li>必须保证你的字段没有和保留字、数据库系统或常用方法冲突。如果坚持使用，请在SQL语句中使用&#96;（着重号）引起来</li>\n<li>保持字段名和类型的一致性：在命名字段并为其指定数据类型的时候一定要保证一致性，假如数据类型在一个表里是整数，那在另一个表里可就别变成字符型了</li>\n</ul>\n<h3 id=\"1-3-MySQL中的数据类型\"><a href=\"#1-3-MySQL中的数据类型\" class=\"headerlink\" title=\"1. 3 MySQL中的数据类型\"></a>1. 3 MySQL中的数据类型</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221001173852011.png\" alt=\"image-20221001173852011\"></p>\n<p>其中，常用的几类类型介绍如下：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221001173930434.png\" alt=\"image-20221001173930434\"></p>\n<h2 id=\"2-创建和管理数据库\"><a href=\"#2-创建和管理数据库\" class=\"headerlink\" title=\"2. 创建和管理数据库\"></a>2. 创建和管理数据库</h2><h3 id=\"2-1-创建数据库\"><a href=\"#2-1-创建数据库\" class=\"headerlink\" title=\"2. 1 创建数据库\"></a>2. 1 创建数据库</h3><ul>\n<li>方式 1 ：创建数据库</li>\n</ul>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">CREATE DATABASE 数据库名;</span></span></code></pre></div><ul>\n<li>方式 2 ：创建数据库并指定字符集</li>\n</ul>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">CREATE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">DATABASE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">数据库名</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">CHARACTER</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> 字符集;</span></span></code></pre></div><ul>\n<li>方式 3 ：判断数据库是否已经存在，不存在则创建数据库（推荐）</li>\n</ul>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">CREATE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">DATABASE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">IF</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">NOT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">EXISTS</span><span style=\"color: #BABED8\"> 数据库名;</span></span></code></pre></div><p>如果MySQL中已经存在相关的数据库，则忽略创建语句，不再创建数据库。</p>\n<p>注意：DATABASE 不能改名。一些可视化工具可以改名，它是建新库，把所有表复制到新库，再删旧库完成的。</p>\n<h3 id=\"2-2-使用数据库\"><a href=\"#2-2-使用数据库\" class=\"headerlink\" title=\"2. 2 使用数据库\"></a>2. 2 使用数据库</h3><ul>\n<li>查看当前所有的数据库</li>\n</ul>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">SHOW DATABASES; #有一个S，代表多个数据库</span></span></code></pre></div><ul>\n<li>查看当前正在使用的数据库</li>\n</ul>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">DATABASE</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\">; #使用的一个 mysql 中的全局函数</span></span></code></pre></div><ul>\n<li>查看指定库下所有的表</li>\n</ul>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">SHOW TABLES </span><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> 数据库名;</span></span></code></pre></div><ul>\n<li>查看数据库的创建信息</li>\n</ul>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">SHOW </span><span style=\"color: #F78C6C\">CREATE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">DATABASE</span><span style=\"color: #BABED8\"> 数据库名;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">或者：</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">SHOW </span><span style=\"color: #F78C6C\">CREATE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">DATABASE</span><span style=\"color: #BABED8\"> 数据库名\\G</span></span></code></pre></div><ul>\n<li>使用&#x2F;切换数据库</li>\n</ul>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">USE</span><span style=\"color: #BABED8\"> 数据库名;</span></span></code></pre></div><p>注意：要操作表格和数据之前必须先说明是对哪个数据库进行操作，否则就要对所有对象加上“数据库名.”。</p>\n<h3 id=\"2-3-修改数据库\"><a href=\"#2-3-修改数据库\" class=\"headerlink\" title=\"2. 3 修改数据库\"></a>2. 3 修改数据库</h3><ul>\n<li>更改数据库字符集</li>\n</ul>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">ALTER</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">DATABASE</span><span style=\"color: #BABED8\"> 数据库名 </span><span style=\"color: #F78C6C\">CHARACTER</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> 字符集;  #比如：gbk、utf8等</span></span></code></pre></div><h3 id=\"2-4-删除数据库\"><a href=\"#2-4-删除数据库\" class=\"headerlink\" title=\"2. 4 删除数据库\"></a>2. 4 删除数据库</h3><ul>\n<li>方式 1 ：删除指定的数据库</li>\n</ul>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">DROP</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">DATABASE</span><span style=\"color: #BABED8\"> 数据库名;</span></span></code></pre></div><ul>\n<li>方式 2 ：删除指定的数据库（<strong>推荐</strong>）</li>\n</ul>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">DROP</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">DATABASE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">IF</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">EXISTS</span><span style=\"color: #BABED8\"> 数据库名;</span></span></code></pre></div><h2 id=\"3-创建表\"><a href=\"#3-创建表\" class=\"headerlink\" title=\"3. 创建表\"></a>3. 创建表</h2><h3 id=\"3-1-创建方式-1\"><a href=\"#3-1-创建方式-1\" class=\"headerlink\" title=\"3. 1 创建方式 1\"></a>3. 1 创建方式 1</h3><ul>\n<li><p><strong>必须具备</strong>：</p>\n<ul>\n<li>CREATE TABLE权限</li>\n<li>存储空间</li>\n</ul>\n</li>\n<li><p><strong>语法格式</strong>：</p>\n</li>\n</ul>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">CREATE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">TABLE</span><span style=\"color: #BABED8\"> [IF NOT EXISTS] 表名(</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        字段1, 数据类型 [约束条件] [默认值],</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        字段2, 数据类型 [约束条件] [默认值],</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        字段3, 数据类型 [约束条件] [默认值],</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        ……</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        [表约束条件]</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">);</span></span></code></pre></div><p>加上了IF NOT EXISTS关键字，则表示：如果当前数据库中不存在要创建的数据表，则创建数据表；如果当前数据库中已经存在要创建的数据表，则忽略建表语句，不再创建数据表。</p>\n<ul>\n<li><p><strong>必须指定</strong>：</p>\n<ul>\n<li>表名</li>\n<li>列名(或字段名)，数据类型， <strong>长度</strong></li>\n</ul>\n</li>\n<li><p><strong>可选指定</strong>：</p>\n<ul>\n<li>约束条件</li>\n<li>默认值</li>\n</ul>\n</li>\n<li><p>创建表举例 1 ：</p>\n</li>\n</ul>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">-- 创建表</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">CREATE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">TABLE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">emp</span><span style=\"color: #BABED8\"> (</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">-- int类型</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    emp_id </span><span style=\"color: #C792EA\">INT</span><span style=\"color: #BABED8\">,</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">-- 最多保存 20 个中英文字符</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    emp_name </span><span style=\"color: #C792EA\">VARCHAR</span><span style=\"color: #BABED8\">( </span><span style=\"color: #F78C6C\">20</span><span style=\"color: #BABED8\"> ),</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">-- 总位数不超过 15 位</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    salary DOUBLE,</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">-- 日期类型</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    birthday </span><span style=\"color: #C792EA\">DATE</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">);</span></span></code></pre></div><div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">DESC</span><span style=\"color: #BABED8\"> emp;</span></span></code></pre></div><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221001174750924.png\" alt=\"image-20221001174750924\"></p>\n<p>MySQL在执行建表语句时，将id字段的类型设置为int(11)，这里的 11 实际上是int类型指定的显示宽度，默认的显示宽度为 11 。也可以在创建数据表的时候指定数据的显示宽度。</p>\n<ul>\n<li>创建表举例 2 ：</li>\n</ul>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">CREATE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">TABLE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">dept</span><span style=\"color: #BABED8\">(</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">-- int类型，自增</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    deptno </span><span style=\"color: #C792EA\">INT</span><span style=\"color: #BABED8\">( </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\"> ) AUTO_INCREMENT,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    dname </span><span style=\"color: #C792EA\">VARCHAR</span><span style=\"color: #BABED8\">( </span><span style=\"color: #F78C6C\">14</span><span style=\"color: #BABED8\"> ),</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    loc </span><span style=\"color: #C792EA\">VARCHAR</span><span style=\"color: #BABED8\">( </span><span style=\"color: #F78C6C\">13</span><span style=\"color: #BABED8\"> ),</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">-- 主键</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">PRIMARY KEY</span><span style=\"color: #BABED8\"> (deptno)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">);</span></span></code></pre></div><div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">DESCRIBE dept;</span></span></code></pre></div><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221001174908270.png\" alt=\"image-20221001174908270\"></p>\n<p>在MySQL 8.x版本中，不再推荐为INT类型指定显示长度，并在未来的版本中可能去掉这样的语法。</p>\n<h3 id=\"3-2-创建方式-2\"><a href=\"#3-2-创建方式-2\" class=\"headerlink\" title=\"3. 2 创建方式 2\"></a>3. 2 创建方式 2</h3><ul>\n<li>使用 AS subquery 选项， <strong>将创建表和插入数据结合起来</strong></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221001174952935.png\" alt=\"image-20221001174952935\"></p>\n<ul>\n<li><p>指定的列和子查询中的列要一一对应</p>\n</li>\n<li><p>通过列名和默认值定义列</p>\n</li>\n</ul>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">CREATE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">TABLE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">emp1</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">AS</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> employees;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">CREATE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">TABLE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">emp2</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">AS</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> employees </span><span style=\"color: #F78C6C\">WHERE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\"> ; </span><span style=\"color: #676E95; font-style: italic\">-- 创建的emp2是空表</span></span></code></pre></div><div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">CREATE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">TABLE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">dept</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">AS</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> employee_id, last_name, salary</span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">12</span><span style=\"color: #BABED8\"> ANNSAL, hire_date</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> employees</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">WHERE</span><span style=\"color: #BABED8\"> department_id </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">80</span><span style=\"color: #BABED8\"> ;</span></span></code></pre></div><div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">DESCRIBE dept80;</span></span></code></pre></div><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221001175059977.png\" alt=\"image-20221001175059977\"></p>\n<h3 id=\"3-3-查看数据表结构\"><a href=\"#3-3-查看数据表结构\" class=\"headerlink\" title=\"3. 3 查看数据表结构\"></a>3. 3 查看数据表结构</h3><p>在MySQL中创建好数据表之后，可以查看数据表的结构。MySQL支持使用<strong>DESCRIBE&#x2F;DESC</strong>语句查看数据表结构，也支持使用<strong>SHOW CREATE TABLE</strong>语句查看数据表结构。</p>\n<p>语法格式如下：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">SHOW </span><span style=\"color: #F78C6C\">CREATE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">TABLE</span><span style=\"color: #BABED8\"> 表名\\G</span></span></code></pre></div><p>使用SHOW CREATE TABLE语句不仅可以查看表创建时的详细语句，还可以查看存储引擎和字符编码。</p>\n<h2 id=\"4-修改表\"><a href=\"#4-修改表\" class=\"headerlink\" title=\"4. 修改表\"></a>4. 修改表</h2><p>修改表指的是修改数据库中已经存在的数据表的结构。</p>\n<p><strong>使用 ALTER TABLE 语句可以实现</strong>：</p>\n<ul>\n<li><p>向已有的表中添加列</p>\n</li>\n<li><p>修改现有表中的列</p>\n</li>\n<li><p>删除现有表中的列</p>\n</li>\n<li><p>重命名现有表中的列</p>\n</li>\n</ul>\n<h3 id=\"4-1-追加一个列\"><a href=\"#4-1-追加一个列\" class=\"headerlink\" title=\"4. 1 追加一个列\"></a>4. 1 追加一个列</h3><p>语法格式如下：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">ALTER</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">TABLE</span><span style=\"color: #BABED8\"> 表名 </span><span style=\"color: #F78C6C\">ADD</span><span style=\"color: #BABED8\"> 【COLUMN】 字段名 字段类型 【</span><span style=\"color: #F78C6C\">FIRST</span><span style=\"color: #BABED8\">|</span><span style=\"color: #F78C6C\">AFTER</span><span style=\"color: #BABED8\"> 字段名】;</span></span></code></pre></div><p>举例：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">ALTER</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">TABLE</span><span style=\"color: #BABED8\"> dept80</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">ADD</span><span style=\"color: #BABED8\"> job_id </span><span style=\"color: #C792EA\">varchar</span><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">15</span><span style=\"color: #BABED8\">);</span></span></code></pre></div><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221001175324085.png\" alt=\"image-20221001175324085\"></p>\n<h3 id=\"4-2-修改一个列\"><a href=\"#4-2-修改一个列\" class=\"headerlink\" title=\"4. 2 修改一个列\"></a>4. 2 修改一个列</h3><ul>\n<li><p>可以修改列的数据类型，长度、默认值和位置</p>\n</li>\n<li><p>修改字段数据类型、长度、默认值、位置的语法格式如下：</p>\n</li>\n</ul>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">ALTER</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">TABLE</span><span style=\"color: #BABED8\"> 表名 </span><span style=\"color: #F78C6C\">MODIFY</span><span style=\"color: #BABED8\"> 【COLUMN】 字段名1 字段类型 【</span><span style=\"color: #C792EA\">DEFAULT</span><span style=\"color: #BABED8\"> 默认值】【</span><span style=\"color: #F78C6C\">FIRST</span><span style=\"color: #BABED8\">|</span><span style=\"color: #F78C6C\">AFTER</span><span style=\"color: #BABED8\"> 字段名 </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\">】;</span></span></code></pre></div><ul>\n<li>举例：</li>\n</ul>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">ALTER</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">TABLE</span><span style=\"color: #BABED8\"> dept80</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">MODIFY</span><span style=\"color: #BABED8\"> last_name </span><span style=\"color: #C792EA\">VARCHAR</span><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">30</span><span style=\"color: #BABED8\">);</span></span></code></pre></div><div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">ALTER</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">TABLE</span><span style=\"color: #BABED8\"> dept80</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">MODIFY</span><span style=\"color: #BABED8\"> salary double(</span><span style=\"color: #F78C6C\">9</span><span style=\"color: #BABED8\">,</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\">) </span><span style=\"color: #C792EA\">default</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1000</span><span style=\"color: #BABED8\">;</span></span></code></pre></div><ul>\n<li><p>对默认值的修改只影响今后对表的修改</p>\n</li>\n<li><p>此外，还可以通过此种方式修改列的约束。这里暂先不讲。</p>\n</li>\n</ul>\n<h3 id=\"4-3-重命名一个列\"><a href=\"#4-3-重命名一个列\" class=\"headerlink\" title=\"4. 3 重命名一个列\"></a>4. 3 重命名一个列</h3><p>使用 CHANGE old_column new_column dataType子句重命名列。语法格式如下：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">ALTER</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">TABLE</span><span style=\"color: #BABED8\"> 表名 CHANGE 【column】 列名 新列名 新数据类型;</span></span></code></pre></div><p>举例：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">ALTER</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">TABLE</span><span style=\"color: #BABED8\"> dept80</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">CHANGE department_name dept_name </span><span style=\"color: #C792EA\">varchar</span><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">15</span><span style=\"color: #BABED8\">);</span></span></code></pre></div><h3 id=\"4-4-删除一个列\"><a href=\"#4-4-删除一个列\" class=\"headerlink\" title=\"4. 4 删除一个列\"></a>4. 4 删除一个列</h3><p>删除表中某个字段的语法格式如下：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">ALTER</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">TABLE</span><span style=\"color: #BABED8\"> 表名 </span><span style=\"color: #F78C6C\">DROP</span><span style=\"color: #BABED8\"> 【COLUMN】字段名</span></span></code></pre></div><p>举例：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">ALTER</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">TABLE</span><span style=\"color: #BABED8\"> dept80</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">DROP</span><span style=\"color: #BABED8\"> COLUMN job_id;</span></span></code></pre></div><h2 id=\"5-重命名表\"><a href=\"#5-重命名表\" class=\"headerlink\" title=\"5. 重命名表\"></a>5. 重命名表</h2><ul>\n<li>方式一：使用RENAME</li>\n</ul>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">RENAME </span><span style=\"color: #F78C6C\">TABLE</span><span style=\"color: #BABED8\"> emp</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">TO</span><span style=\"color: #BABED8\"> myemp;</span></span></code></pre></div><ul>\n<li>方式二：</li>\n</ul>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">ALTER</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">table</span><span style=\"color: #BABED8\"> dept</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">RENAME [TO] detail_dept; </span><span style=\"color: #676E95; font-style: italic\">-- [TO]可以省略</span></span></code></pre></div><ul>\n<li>必须是对象的拥有者</li>\n</ul>\n<h2 id=\"6-删除表\"><a href=\"#6-删除表\" class=\"headerlink\" title=\"6. 删除表\"></a>6. 删除表</h2><ul>\n<li>在MySQL中，当一张数据表<strong>没有与其他任何数据表形成关联关系</strong>时，可以将当前数据表直接删除。</li>\n<li>数据和结构都被删除</li>\n<li>所有正在运行的相关事务被提交</li>\n<li>所有相关索引被删除</li>\n<li>语法格式：</li>\n</ul>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">DROP</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">TABLE</span><span style=\"color: #BABED8\"> [IF EXISTS] 数据表1 [, 数据表2, …, 数据表n];</span></span></code></pre></div><p><strong>IF EXISTS</strong>的含义为：如果当前数据库中存在相应的数据表，则删除数据表；如果当前数据库中不存在相应的数据表，则忽略删除语句，不再执行删除数据表的操作。</p>\n<ul>\n<li>举例：</li>\n</ul>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">DROP</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">TABLE</span><span style=\"color: #BABED8\"> dept80;</span></span></code></pre></div><ul>\n<li>DROP TABLE 语句不能回滚</li>\n</ul>\n<h2 id=\"7-清空表\"><a href=\"#7-清空表\" class=\"headerlink\" title=\"7. 清空表\"></a>7. 清空表</h2><ul>\n<li><p>TRUNCATE TABLE语句：</p>\n<ul>\n<li>删除表中所有的数据</li>\n<li>释放表的存储空间</li>\n</ul>\n</li>\n<li><p>举例：</p>\n</li>\n</ul>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">TRUNCATE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">TABLE</span><span style=\"color: #BABED8\"> detail_dept;</span></span></code></pre></div><ul>\n<li><p>TRUNCATE语句 <strong>不能回滚</strong> ，而使用 DELETE 语句删除数据，可以回滚</p>\n</li>\n<li><p>对比：</p>\n</li>\n</ul>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> autocommit </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> FALSE;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">DELETE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> emp2;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">#</span><span style=\"color: #F78C6C\">TRUNCATE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">TABLE</span><span style=\"color: #BABED8\"> emp2;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> emp2;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">ROLLBACK</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> emp2;</span></span></code></pre></div><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221008171800036.png\" alt=\"image-20221008171800036\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221008172645715.png\" alt=\"image-20221008172645715\"></p>\n<p><strong>阿里开发规范：</strong></p>\n<p>【参考】TRUNCATE TABLE 比 DELETE 速度快，且使用的系统和事务日志资源少，但 TRUNCATE 无事务且不触发 TRIGGER，有可能造成事故，故不建议在开发代码中使用此语句。</p>\n<p>说明：TRUNCATE TABLE 在功能上与不带 WHERE 子句的 DELETE 语句相同。</p>\n<h2 id=\"8-内容拓展\"><a href=\"#8-内容拓展\" class=\"headerlink\" title=\"8. 内容拓展\"></a>8. 内容拓展</h2><h3 id=\"拓展-1-：阿里巴巴《Java开发手册》之MySQL字段命名\"><a href=\"#拓展-1-：阿里巴巴《Java开发手册》之MySQL字段命名\" class=\"headerlink\" title=\"拓展 1 ：阿里巴巴《Java开发手册》之MySQL字段命名\"></a>拓展 1 ：阿里巴巴《Java开发手册》之MySQL字段命名</h3><ul>\n<li><p>【强制】表名、字段名必须使用小写字母或数字，禁止出现数字开头，禁止两个下划线中间只出现数字。数据库字段名的修改代价很大，因为无法进行预发布，所以字段名称需要慎重考虑。</p>\n<ul>\n<li>正例：aliyun_admin，rdc_config，level3_name</li>\n<li>反例：AliyunAdmin，rdcConfig，level_3_name</li>\n</ul>\n</li>\n<li><p>【强制】禁用保留字，如 desc、range、match、delayed 等，请参考 MySQL 官方保留字。</p>\n</li>\n<li><p>【强制】表必备三字段：id, gmt_create, gmt_modified。</p>\n<ul>\n<li>说明：其中 id 必为主键，类型为BIGINT UNSIGNED、单表时自增、步长为 1 。gmt_create,gmt_modified 的类型均为DATETIME 类型，前者现在时表示主动式创建，后者过去分词表示被动式更新</li>\n</ul>\n</li>\n<li><p>【推荐】表的命名最好是遵循 “业务名称_表的作用”。</p>\n<ul>\n<li>正例：alipay_task 、 force_project、 trade_config</li>\n</ul>\n</li>\n<li><p>【推荐】库名与应用名称尽量一致。</p>\n</li>\n<li><p>【参考】合适的字符存储长度，不但节约数据库表空间、节约索引存储，更重要的是提升检索速度。</p>\n<ul>\n<li>正例：无符号值可以避免误存负数，且扩大了表示范围。</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221001181500187.png\" alt=\"image-20221001181500187\"></p>\n<h3 id=\"拓展-2-：如何理解清空表、删除表等操作需谨慎？！\"><a href=\"#拓展-2-：如何理解清空表、删除表等操作需谨慎？！\" class=\"headerlink\" title=\"拓展 2 ：如何理解清空表、删除表等操作需谨慎？！\"></a>拓展 2 ：如何理解清空表、删除表等操作需谨慎？！</h3><p><strong>表删除</strong>操作将把表的定义和表中的数据一起删除，并且MySQL在执行删除操作时，不会有任何的确认信息提示，因此执行删除操时应当慎重。在删除表前，最好对表中的数据进行<strong>备份</strong>，这样当操作失误时可以对数据进行恢复，以免造成无法挽回的后果。</p>\n<p>同样的，在使用 <strong>ALTER TABLE</strong> 进行表的基本修改操作时，在执行操作过程之前，也应该确保对数据进行完整的<strong>备份</strong>，因为数据库的改变是<strong>无法撤销</strong>的，如果添加了一个不需要的字段，可以将其删除；相同的，如果删除了一个需要的列，该列下面的所有数据都将会丢失。</p>\n<h3 id=\"拓展-3-：MySQL-8-新特性—DDL的原子化\"><a href=\"#拓展-3-：MySQL-8-新特性—DDL的原子化\" class=\"headerlink\" title=\"拓展 3 ：MySQL 8 新特性—DDL的原子化\"></a>拓展 3 ：MySQL 8 新特性—DDL的原子化</h3><p>在MySQL 8.0版本中，InnoDB表的DDL支持事务完整性，即<strong>DDL操作要么成功要么回滚</strong>。DDL操作回滚日志写入到data dictionary数据字典表mysql.innodb_ddl_log（该表是隐藏的表，通过show tables无法看到）<br>中，用于回滚操作。通过设置参数，可将DDL操作日志打印输出到MySQL错误日志中。</p>\n<p>分别在MySQL 5.7版本和MySQL 8.0版本中创建数据库和数据表，结果如下：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221001181713806.png\" alt=\"image-20221001181713806\"></p>\n<p>（ 1 ）在MySQL 5.7版本中，测试步骤如下： 删除数据表book1和数据表book2，结果如下：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221001181724501.png\" alt=\"image-20221001181724501\"></p>\n<p>再次查询数据库中的数据表名称，结果如下：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221001181736791.png\" alt=\"image-20221001181736791\"></p>\n<p>从结果可以看出，虽然删除操作时报错了，但是仍然删除了数据表book1。</p>\n<p>（ 2 ）在MySQL 8.0版本中，测试步骤如下： 删除数据表book1和数据表book2，结果如下：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221001181755553.png\" alt=\"image-20221001181755553\"></p>\n<p>再次查询数据库中的数据表名称，结果如下：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221001181805497.png\" alt=\"image-20221001181805497\"></p>\n<p>从结果可以看出，数据表book1并没有被删除。</p>\n<hr>\n<h1 id=\"第-11-章-数据处理之增删改\"><a href=\"#第-11-章-数据处理之增删改\" class=\"headerlink\" title=\"第 11 章_数据处理之增删改\"></a>第 11 章_数据处理之增删改</h1><h2 id=\"1-插入数据\"><a href=\"#1-插入数据\" class=\"headerlink\" title=\"1. 插入数据\"></a>1. 插入数据</h2><h3 id=\"1-1-实际问题\"><a href=\"#1-1-实际问题\" class=\"headerlink\" title=\"1. 1 实际问题\"></a>1. 1 实际问题</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221001182406081.png\" alt=\"image-20221001182406081\"></p>\n<p>解决方式：使用 INSERT 语句向表中插入数据。</p>\n<h3 id=\"1-2-方式-1-：VALUES的方式添加\"><a href=\"#1-2-方式-1-：VALUES的方式添加\" class=\"headerlink\" title=\"1. 2 方式 1 ：VALUES的方式添加\"></a>1. 2 方式 1 ：VALUES的方式添加</h3><p>使用这种语法一次只能向表中插入 <strong>一条</strong> 数据。</p>\n<p><strong>情况 1 ：为表的所有字段按默认顺序插入数据</strong></p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">INSERT INTO</span><span style=\"color: #BABED8\"> 表名</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">VALUES</span><span style=\"color: #BABED8\"> (value1,value2,....);</span></span></code></pre></div><p>值列表中需要为表的每一个字段指定值，并且值的顺序必须和数据表中字段定义时的顺序相同。</p>\n<p>举例：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">INSERT INTO</span><span style=\"color: #BABED8\"> departments</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">VALUES</span><span style=\"color: #BABED8\"> ( </span><span style=\"color: #F78C6C\">70</span><span style=\"color: #BABED8\"> , </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">Pub</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">, </span><span style=\"color: #F78C6C\">100</span><span style=\"color: #BABED8\"> , </span><span style=\"color: #F78C6C\">1700</span><span style=\"color: #BABED8\"> );</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">INSERT INTO</span><span style=\"color: #BABED8\"> departments</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">VALUES</span><span style=\"color: #BABED8\"> ( </span><span style=\"color: #F78C6C\">100</span><span style=\"color: #BABED8\"> , </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">Finance</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">, </span><span style=\"color: #F78C6C\">NULL</span><span style=\"color: #BABED8\">, </span><span style=\"color: #F78C6C\">NULL</span><span style=\"color: #BABED8\">);</span></span></code></pre></div><p><strong>情况 2 ：为表的指定字段插入数据</strong></p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">INSERT INTO</span><span style=\"color: #BABED8\"> 表名(column1 [, column2, …, columnn])</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">VALUES</span><span style=\"color: #BABED8\"> (value1 [,value2, …, valuen]);</span></span></code></pre></div><p>为表的指定字段插入数据，就是在INSERT语句中只向部分字段中插入值，而其他字段的值为表定义时的默认值。</p>\n<p>在 INSERT 子句中随意列出列名，但是一旦列出，VALUES中要插入的value1,….valuen需要与column1,…columnn列一一对应。如果类型不同，将无法插入，并且MySQL会产生错误。</p>\n<p>举例：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">INSERT INTO</span><span style=\"color: #BABED8\"> departments(department_id, department_name)</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">VALUES</span><span style=\"color: #BABED8\"> (</span><span style=\"color: #F78C6C\">80</span><span style=\"color: #BABED8\">, </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">IT</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">);</span></span></code></pre></div><p><strong>情况 3 ：同时插入多条记录</strong></p>\n<p>INSERT语句可以同时向数据表中插入多条记录，插入时指定多个值列表，每个值列表之间用逗号分隔开，基本语法格式如下：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">INSERT INTO</span><span style=\"color: #BABED8\"> table_name</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">VALUES</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">(value1 [,value2, …, valuen]),</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">(value1 [,value2, …, valuen]),</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">……</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">(value1 [,value2, …, valuen]);</span></span></code></pre></div><p>或者</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">INSERT INTO</span><span style=\"color: #BABED8\"> table_name(column1 [, column2, …, columnn])</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">VALUES</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">(value1 [,value2, …, valuen]),</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">(value1 [,value2, …, valuen]),</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">……</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">(value1 [,value2, …, valuen]);</span></span></code></pre></div><p>举例：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">mysql</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">INSERT INTO</span><span style=\"color: #BABED8\"> emp(emp_id,emp_name)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">VALUES</span><span style=\"color: #BABED8\"> (</span><span style=\"color: #F78C6C\">1001</span><span style=\"color: #BABED8\">,</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">shkstart</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">),</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\"> (</span><span style=\"color: #F78C6C\">1002</span><span style=\"color: #BABED8\">,</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">atguigu</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">),</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\"> (</span><span style=\"color: #F78C6C\">1003</span><span style=\"color: #BABED8\">,</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">Tom</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">Query OK, </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">rows</span><span style=\"color: #BABED8\"> affected (</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">00</span><span style=\"color: #BABED8\"> sec)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">Records: </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #BABED8\"> Duplicates: </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\"> Warnings: </span><span style=\"color: #F78C6C\">0</span></span></code></pre></div><p>使用INSERT同时插入多条记录时，MySQL会返回一些在执行单行插入时没有的额外信息，这些信息的含义如下： </p>\n<p>●　Records：表明插入的记录条数。</p>\n<p> ●　Duplicates：表明插入时被忽略的记录，原因可能是这些记录包含了重复的主键值。 </p>\n<p>●　Warnings：表明有问题的数据值，例如发生数据类型转换。</p>\n<p>​\t一个同时插入多行记录的INSERT语句等同于多个单行插入的INSERT语句，但是多行的INSERT语句在处理过程中<strong>效率更高</strong>。因为MySQL执行单条INSERT语句插入多行数据比使用多条INSERT语句快，所以在插入多条记录时最好选择使用单条INSERT语句的方式插入。</p>\n<p><strong>小结</strong>：</p>\n<ul>\n<li><p><strong>VALUES</strong>也可以写成<strong>VALUE</strong>，但是VALUES是标准写法。</p>\n</li>\n<li><p>字符和日期型数据应包含在单引号中。</p>\n</li>\n</ul>\n<h3 id=\"1-3-方式-2-：将查询结果插入到表中\"><a href=\"#1-3-方式-2-：将查询结果插入到表中\" class=\"headerlink\" title=\"1. 3 方式 2 ：将查询结果插入到表中\"></a>1. 3 方式 2 ：将查询结果插入到表中</h3><p>INSERT还可以将SELECT语句查询的结果插入到表中，此时不需要把每一条记录的值一个一个输入，只需要使用一条INSERT语句和一条SELECT语句组成的组合语句即可快速地从一个或多个表中向一个表中插入多行。</p>\n<p>基本语法格式如下：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">INSERT INTO</span><span style=\"color: #BABED8\"> 目标表名</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">(tar_column1 [, tar_column2, …, tar_columnn])</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">(src_column1 [, src_column2, …, src_columnn])</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> 源表名</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">[WHERE condition]</span></span></code></pre></div><ul>\n<li>在 INSERT 语句中加入子查询。</li>\n<li><strong>不必书写 VALUES 子句</strong>。</li>\n<li>子查询中的值列表应与 INSERT 子句中的列名对应。</li>\n</ul>\n<p>举例：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">INSERT INTO</span><span style=\"color: #BABED8\"> emp2</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">*</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> employees</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">WHERE</span><span style=\"color: #BABED8\"> department_id </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">INSERT INTO</span><span style=\"color: #BABED8\"> sales_reps(id, </span><span style=\"color: #F78C6C\">name</span><span style=\"color: #BABED8\">, salary, commission_pct)</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> employee_id, last_name, salary, commission_pct</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> employees</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">WHERE</span><span style=\"color: #BABED8\"> job_id </span><span style=\"color: #F78C6C\">LIKE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">%REP%</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">;</span></span></code></pre></div><h2 id=\"2-更新数据\"><a href=\"#2-更新数据\" class=\"headerlink\" title=\"2. 更新数据\"></a>2. 更新数据</h2><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221001183106852.png\" alt=\"image-20221001183106852\"></p>\n<ul>\n<li>使用 UPDATE 语句更新数据。语法如下：</li>\n</ul>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">UPDATE</span><span style=\"color: #BABED8\"> table_name</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> column1</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">value1, column2</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">value2, … , column</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">valuen</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">[WHERE condition]</span></span></code></pre></div><ul>\n<li><p>可以一次更新 <strong>多条</strong> 数据。</p>\n</li>\n<li><p>如果需要回滚数据，需要保证在DML前，进行设置： <strong>SET  AUTOCOMMIT &#x3D; FALSE</strong>;</p>\n</li>\n<li><p>使用 <strong>WHERE</strong> 子句指定需要更新的数据。</p>\n</li>\n</ul>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">UPDATE</span><span style=\"color: #BABED8\"> employees</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> department_id </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">70</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">WHERE</span><span style=\"color: #BABED8\"> employee_id </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">113</span><span style=\"color: #BABED8\">;</span></span></code></pre></div><ul>\n<li>如果省略 WHERE 子句，则表中的所有数据都将被更新。</li>\n</ul>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">UPDATE</span><span style=\"color: #BABED8\"> copy_emp</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> department_id </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">110</span><span style=\"color: #BABED8\">;</span></span></code></pre></div><ul>\n<li><strong>更新中的数据完整性错误</strong></li>\n</ul>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">UPDATE</span><span style=\"color: #BABED8\"> employees</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> department_id </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">55</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">WHERE</span><span style=\"color: #BABED8\"> department_id </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">110</span><span style=\"color: #BABED8\">;</span></span></code></pre></div><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221009164135863.png\" alt=\"image-20221009164135863\"></p>\n<p>说明：不存在 55 号部门</p>\n<h2 id=\"3-删除数据\"><a href=\"#3-删除数据\" class=\"headerlink\" title=\"3. 删除数据\"></a>3. 删除数据</h2><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221001183459161.png\" alt=\"image-20221001183459161\"></p>\n<ul>\n<li>使用 DELETE 语句从表中删除数据</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221009170021070.png\" alt=\"image-20221009170021070\"></p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">DELETE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> table_name [WHERE &lt;condition&gt;];</span></span></code></pre></div><p>table_name指定要执行删除操作的表；“[WHERE ]”为可选参数，指定删除条件，如果没有WHERE子句，DELETE语句将删除表中的所有记录。</p>\n<ul>\n<li>使用 WHERE 子句删除指定的记录。</li>\n</ul>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">DELETE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> departments</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">WHERE</span><span style=\"color: #BABED8\"> department_name </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">Finance</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">;</span></span></code></pre></div><ul>\n<li>如果省略 WHERE 子句，则表中的全部数据将被删除</li>\n</ul>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">DELETE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> copy_emp;</span></span></code></pre></div><ul>\n<li><strong>删除中的数据完整性错误</strong></li>\n</ul>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">DELETE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> departments</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">WHERE</span><span style=\"color: #BABED8\"> department_id </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">60</span><span style=\"color: #BABED8\">;</span></span></code></pre></div><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221009164343211.png\" alt=\"image-20221009164343211\"></p>\n<p>说明：You cannot delete a row that contains a primary key that is used as a foreign key in another  table.</p>\n<h2 id=\"4-MySQL-8-新特性：计算列\"><a href=\"#4-MySQL-8-新特性：计算列\" class=\"headerlink\" title=\"4. MySQL 8 新特性：计算列\"></a>4. MySQL 8 新特性：计算列</h2><p>什么叫计算列呢？简单来说就是某一列的值是通过别的列计算得来的。例如，a列值为 1 、b列值为 2 ，c列不需要手动插入，定义a+b的结果为c的值，那么c就是计算列，是通过别的列计算得来的。</p>\n<p>在MySQL 8.0中，CREATE TABLE 和 ALTER TABLE 中都支持增加计算列。下面以CREATE TABLE为例进行讲解。</p>\n<p>举例：定义数据表tb1，然后定义字段id、字段a、字段b和字段c，其中字段c为计算列，用于计算a+b的值。 首先创建测试表tb1，语句如下：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">CREATE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">TABLE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">tb1</span><span style=\"color: #BABED8\">(</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">id </span><span style=\"color: #C792EA\">INT</span><span style=\"color: #BABED8\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">a </span><span style=\"color: #C792EA\">INT</span><span style=\"color: #BABED8\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">b </span><span style=\"color: #C792EA\">INT</span><span style=\"color: #BABED8\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">c </span><span style=\"color: #C792EA\">INT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">GENERATED</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">ALWAYS</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">AS</span><span style=\"color: #BABED8\"> (a </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> b) VIRTUAL</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">);</span></span></code></pre></div><p>插入演示数据，语句如下：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">INSERT INTO</span><span style=\"color: #BABED8\"> tb1(a,b) </span><span style=\"color: #F78C6C\">VALUES</span><span style=\"color: #BABED8\"> (</span><span style=\"color: #F78C6C\">100</span><span style=\"color: #BABED8\">,</span><span style=\"color: #F78C6C\">200</span><span style=\"color: #BABED8\">);</span></span></code></pre></div><p>查询数据表tb1中的数据，结果如下：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">mysql</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> tb1;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">+</span><span style=\"color: #676E95; font-style: italic\">------+------+------+------+</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| id | a | b | c |</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">+</span><span style=\"color: #676E95; font-style: italic\">------+------+------+------+</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">NULL</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">100</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">200</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">300</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">+</span><span style=\"color: #676E95; font-style: italic\">------+------+------+------+</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">row</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">in</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">set</span><span style=\"color: #BABED8\"> (</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">00</span><span style=\"color: #BABED8\"> sec)</span></span></code></pre></div><p>更新数据中的数据，语句如下：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">mysql</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">UPDATE</span><span style=\"color: #BABED8\"> tb1 </span><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> a </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">500</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">Query OK, </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">rows</span><span style=\"color: #BABED8\"> affected (</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">00</span><span style=\"color: #BABED8\"> sec)</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">Rows</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">matched</span><span style=\"color: #BABED8\">: </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\"> Changed: </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\"> Warnings: </span><span style=\"color: #F78C6C\">0</span></span></code></pre></div><h2 id=\"5-综合案例\"><a href=\"#5-综合案例\" class=\"headerlink\" title=\"5. 综合案例\"></a>5. 综合案例</h2><div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\"># </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">、创建数据库test01_library</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"># </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\">、创建表 books，表结构如下：</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\"># </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #BABED8\">、向books表中插入记录</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #BABED8\"># </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">）不指定字段名称，插入第一条记录</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #BABED8\"># </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\">）指定所有字段名称，插入第二记录</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #BABED8\"># </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #BABED8\">）同时插入多条记录（剩下的所有记录）</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\"># </span><span style=\"color: #F78C6C\">4</span><span style=\"color: #BABED8\">、将小说类型(novel)的书的价格都增加5。</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"># </span><span style=\"color: #F78C6C\">5</span><span style=\"color: #BABED8\">、将名称为EmmaT的书的价格改为40，并将说明改为drama。</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"># </span><span style=\"color: #F78C6C\">6</span><span style=\"color: #BABED8\">、删除库存为0的记录。</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"># </span><span style=\"color: #F78C6C\">7</span><span style=\"color: #BABED8\">、统计书名中包含a字母的书</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"># </span><span style=\"color: #F78C6C\">8</span><span style=\"color: #BABED8\">、统计书名中包含a字母的书的数量和库存总量</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"># </span><span style=\"color: #F78C6C\">9</span><span style=\"color: #BABED8\">、找出“novel”类型的书，按照价格降序排列</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"># </span><span style=\"color: #F78C6C\">10</span><span style=\"color: #BABED8\">、查询图书信息，按照库存量降序排列，如果库存量相同的按照note升序排列</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"># </span><span style=\"color: #F78C6C\">11</span><span style=\"color: #BABED8\">、按照note分类统计书的数量</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"># </span><span style=\"color: #F78C6C\">12</span><span style=\"color: #BABED8\">、按照note分类统计书的库存量，显示库存量超过30本的</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"># </span><span style=\"color: #F78C6C\">13</span><span style=\"color: #BABED8\">、查询所有图书，每页显示5本，显示第二页</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"># </span><span style=\"color: #F78C6C\">14</span><span style=\"color: #BABED8\">、按照note分类统计书的库存量，显示库存量最多的</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"># </span><span style=\"color: #F78C6C\">15</span><span style=\"color: #BABED8\">、查询书名达到10个字符的书，不包括里面的空格</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"># </span><span style=\"color: #F78C6C\">16</span><span style=\"color: #BABED8\">、查询书名和类型，其中note值为novel显示小说，law显示法律，medicine显示医药，cartoon显示卡通，joke显示笑话</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"># </span><span style=\"color: #F78C6C\">17</span><span style=\"color: #BABED8\">、查询书名、库存，其中num值超过30本的，显示滞销，大于0并低于10的，显示畅销，为0的显示需要无货</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"># </span><span style=\"color: #F78C6C\">18</span><span style=\"color: #BABED8\">、统计每一种note的库存量，并合计总量</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"># </span><span style=\"color: #F78C6C\">19</span><span style=\"color: #BABED8\">、统计每一种note的数量，并合计总量</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"># </span><span style=\"color: #F78C6C\">20</span><span style=\"color: #BABED8\">、统计库存量前三名的图书</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"># </span><span style=\"color: #F78C6C\">21</span><span style=\"color: #BABED8\">、找出最早出版的一本书</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"># </span><span style=\"color: #F78C6C\">22</span><span style=\"color: #BABED8\">、找出novel中价格最高的一本书</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"># </span><span style=\"color: #F78C6C\">23</span><span style=\"color: #BABED8\">、找出书名中字数最多的一本书，不含空格</span></span></code></pre></div><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221009165447560.png\" alt=\"image-20221009165447560\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221009165500820.png\" alt=\"image-20221009165500820\"></p>\n<p><strong>答案：</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221009165645996.png\" alt=\"image-20221009165645996\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221009165659086.png\" alt=\"image-20221009165659086\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221009165727951.png\" alt=\"image-20221009165727951\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221009165743525.png\" alt=\"image-20221009165743525\"></p>\n<h1 id=\"第-12-章-MySQL数据类型精讲\"><a href=\"#第-12-章-MySQL数据类型精讲\" class=\"headerlink\" title=\"第 12 章_MySQL数据类型精讲\"></a>第 12 章_MySQL数据类型精讲</h1><h2 id=\"1-MySQL中的数据类型\"><a href=\"#1-MySQL中的数据类型\" class=\"headerlink\" title=\"1. MySQL中的数据类型\"></a>1. MySQL中的数据类型</h2><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011150627020.png\" alt=\"image-20221011150627020\"></p>\n<p>常见数据类型的属性，如下：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011150647962.png\" alt=\"image-20221011150647962\"></p>\n<h2 id=\"2-整数类型\"><a href=\"#2-整数类型\" class=\"headerlink\" title=\"2. 整数类型\"></a>2. 整数类型</h2><h3 id=\"2-1-类型介绍\"><a href=\"#2-1-类型介绍\" class=\"headerlink\" title=\"2. 1 类型介绍\"></a>2. 1 类型介绍</h3><p>整数类型一共有 5 种，包括 TINYINT、SMALLINT、MEDIUMINT、INT（INTEGER）和 BIGINT。</p>\n<p>它们的区别如下表所示：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011150747141.png\" alt=\"image-20221011150747141\"></p>\n<h3 id=\"2-2-可选属性\"><a href=\"#2-2-可选属性\" class=\"headerlink\" title=\"2. 2 可选属性\"></a>2. 2 可选属性</h3><p><strong>整数类型的可选属性有三个：</strong></p>\n<h4 id=\"2-2-1-M\"><a href=\"#2-2-1-M\" class=\"headerlink\" title=\"2. 2. 1 M\"></a>2. 2. 1 M</h4><p><strong>M</strong>: 表示显示宽度，M的取值范围是( 0 , 255 )。例如，int( 5 )：当数据宽度小于 5 位的时候在数字前面需要用字符填满宽度。该项功能需要配合“<strong>ZEROFILL</strong>”使用，表示用“ 0 ”填满宽度，否则指定显示宽度无效。</p>\n<p>如果设置了显示宽度，那么插入的数据宽度超过显示宽度限制，会不会截断或插入失败？</p>\n<p>答案：不会对插入的数据有任何影响，还是按照类型的实际宽度进行保存，即<strong>显示宽度与类型可以存储的值范围无关</strong>。 <strong>从MySQL 8. 0. 17 开始，整数数据类型不推荐使用显示宽度属性。</strong></p>\n<p>整型数据类型可以在定义表结构时指定所需要的显示宽度，如果不指定，则系统为每一种类型指定默认的宽度值。</p>\n<p>举例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011150927278.png\" alt=\"image-20221011150927278\"></p>\n<p>查看表结构 （MySQL 5. 7 中显式如下，MySQL 8 中不再显式范围）</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011150940793.png\" alt=\"image-20221011150940793\"></p>\n<p>TINYINT有符号数和无符号数的取值范围分别为- 128 ~ 127 和 0 ~ 255 ，由于负号占了一个数字位，因此TINYINT默认的显示宽度为 4 。同理，其他整数类型的默认显示宽度与其有符号数的最小值的宽度相同。</p>\n<p>举例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011151006743.png\" alt=\"image-20221011151006743\"></p>\n<h4 id=\"2-2-2-UNSIGNED\"><a href=\"#2-2-2-UNSIGNED\" class=\"headerlink\" title=\"2. 2. 2 UNSIGNED\"></a>2. 2. 2 UNSIGNED</h4><p><strong>UNSIGNED:</strong> 无符号类型（非负），所有的整数类型都有一个可选的属性UNSIGNED（无符号属性），无符号整数类型的最小取值为 0 。所以，如果需要在MySQL数据库中保存非负整数值时，可以将整数类型设<br>置为无符号类型。</p>\n<p>int类型默认显示宽度为int(11)，无符号int类型默认显示宽度为int(10)。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011151049275.png\" alt=\"image-20221011151049275\"></p>\n<h4 id=\"2-2-3-ZEROFILL\"><a href=\"#2-2-3-ZEROFILL\" class=\"headerlink\" title=\"2. 2. 3 ZEROFILL\"></a>2. 2. 3 ZEROFILL</h4><p><strong>ZEROFILL</strong>: 0填充,（如果某列是ZEROFILL，那么MySQL会自动为当前列添加UNSIGNED属性），如果指定了ZEROFILL只是表示不够M位时，用 0 在左边填充，如果超过M位，只要不超过数据存储范围即可。</p>\n<p>原来，在 int(M) 中，M 的值跟 int(M) 所占多少存储空间并无任何关系。 int(3)、int(4)、int(8) 在磁盘上都是占用 4 bytes 的存储空间。也就是说， <strong>int(M)，必须和UNSIGNED ZEROFILL一起使用才有意义。</strong> 如果整数值超过M位，就按照实际位数存储。只是无须再用字符 0 进行填充。</p>\n<h3 id=\"2-3-适用场景\"><a href=\"#2-3-适用场景\" class=\"headerlink\" title=\"2. 3 适用场景\"></a>2. 3 适用场景</h3><p><code>TINYINT</code>：一般用于枚举数据，比如系统设定取值范围很小且固定的场景。</p>\n<p><code>SMALLINT</code>：可以用于较小范围的统计数据，比如统计工厂的固定资产库存数量等。</p>\n<p><code>MEDIUMINT</code>：用于较大整数的计算，比如车站每日的客流量等。</p>\n<p><code>INT、INTEGER</code>：取值范围足够大，一般情况下不用考虑超限问题，用得最多。比如商品编号。</p>\n<p><code>BIGINT</code>：只有当你处理特别巨大的整数时才会用到。比如双十一的交易量、大型门户网站点击量、证券公司衍生产品持仓等。</p>\n<h3 id=\"2-4-如何选择？\"><a href=\"#2-4-如何选择？\" class=\"headerlink\" title=\"2. 4 如何选择？\"></a>2. 4 如何选择？</h3><p>在评估用哪种整数类型的时候，你需要考虑<strong>存储空间</strong>和<strong>可靠性</strong>的平衡问题：一方 面，用占用字节数少的整数类型可以节省存储空间；另一方面，要是为了节省存储空间， 使用的整数类型取值范围太小，一旦遇到超出取值范围的情况，就可能引起<strong>系统错误</strong>，影响可靠性。</p>\n<p>举个例子，商品编号采用的数据类型是 INT。原因就在于，客户门店中流通的商品种类较多，而且，每天都有旧商品下架，新商品上架，这样不断迭代，日积月累。</p>\n<p>如果使用 SMALLINT 类型，虽然占用字节数比 INT 类型的整数少，但是却不能保证数据不会超出范围65535 。相反，使用 INT，就能确保有足够大的取值范围，不用担心数据超出范围影响可靠性的问题。</p>\n<p>你要注意的是，在实际工作中， <strong>系统故障产生的成本远远超过增加几个字段存储空间所产生的成本</strong> 。因此，我建议你首先确保数据不会超过取值范围，在这个前提之下，再去考虑如何节省存储空间。</p>\n<h2 id=\"3-浮点类型\"><a href=\"#3-浮点类型\" class=\"headerlink\" title=\"3. 浮点类型\"></a>3. 浮点类型</h2><h3 id=\"3-1-类型介绍\"><a href=\"#3-1-类型介绍\" class=\"headerlink\" title=\"3. 1 类型介绍\"></a>3. 1 类型介绍</h3><p>浮点数和定点数类型的特点是可以<strong>处理小数</strong>，你可以把整数看成小数的一个特例。因此，浮点数和定点数的使用场景，比整数大多了。 MySQL支持的浮点数类型，分别是 FLOAT、DOUBLE、REAL。</p>\n<ul>\n<li>FLOAT 表示单精度浮点数；</li>\n<li>DOUBLE 表示双精度浮点数；</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011151421159.png\" alt=\"image-20221011151421159\"></p>\n<ul>\n<li>REAL默认就是 DOUBLE。如果你把 SQL 模式设定为启用“<strong>REAL_AS_FLOAT</strong>”，那 么，MySQL 就认为REAL 是 FLOAT。如果要启用“REAL_AS_FLOAT”，可以通过以下 SQL 语句实现：</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011151459901.png\" alt=\"image-20221011151459901\"></p>\n<p><strong>问题 1</strong> ： FLOAT 和 DOUBLE 这两种数据类型的区别是啥呢？</p>\n<p>FLOAT 占用字节数少，取值范围小；DOUBLE 占用字节数多，取值范围也大。</p>\n<p><strong>问题 2</strong> ： 为什么浮点数类型的无符号数取值范围，只相当于有符号数取值范围的一半，也就是只相当于有符号数取值范围大于等于零的部分呢？</p>\n<p>MySQL 存储浮点数的格式为：**符号(S)、尾数(M)和 阶码(E)**。因此，无论有没有符号，MySQL 的浮点数都会存储表示符号的部分。因此， 所谓的无符号数取值范围，其实就是有符号数取值范围大于等于零的部分。</p>\n<h3 id=\"3-2-数据精度说明\"><a href=\"#3-2-数据精度说明\" class=\"headerlink\" title=\"3. 2 数据精度说明\"></a>3. 2 数据精度说明</h3><p>对于浮点类型，在MySQL中<strong>单精度值使用 4 个字节，双精度值使用 8 个字节</strong>。</p>\n<ul>\n<li>MySQL允许使用<strong>非标准语法</strong>（其他数据库未必支持，因此如果涉及到数据迁移，则最好不要这么用）：<strong>FLOAT(M,D)<strong>或</strong>DOUBLE(M,D)<strong>。这里，M称为</strong>精度</strong>，D称为<strong>标度</strong>。(M,D)中 M&#x3D;整数位+小数位，D&#x3D;小数位。 D&lt;&#x3D;M&lt;&#x3D; 255 ， 0 &lt;&#x3D;D&lt;&#x3D; 30 。<ul>\n<li>例如，定义为FLOAT( 5 , 2 )的一个列可以显示为- 999. 99 - 999. 99 。如果超过这个范围会报错。</li>\n</ul>\n</li>\n<li>FLOAT和DOUBLE类型在不指定(M,D)时，默认会按照实际的精度（由实际的硬件和操作系统决定）来显示。</li>\n<li>说明：浮点类型，也可以加UNSIGNED，但是不会改变数据范围，例如：FLOAT( 3 , 2 ) UNSIGNED仍然只能表示 0 - 9. 99 的范围。</li>\n<li>不管是否显式设置了精度(M,D)，这里MySQL的处理方案如下：<ul>\n<li>如果存储时，整数部分超出了范围，MySQL就会报错，不允许存这样的值</li>\n<li>如果存储时，小数点部分若超出范围，就分以下情况：<ul>\n<li>若四舍五入后，整数部分没有超出范围，则只警告，但能成功操作并四舍五入删除多余的小数位后保存。例如在FLOAT( 5 , 2 )列内插入 999. 009 ，近似结果是 999. 01 。</li>\n<li>若四舍五入后，整数部分超出范围，则MySQL报错，并拒绝处理。如FLOAT( 5 , 2 )列内插入999. 995 和- 999. 995 都会报错。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>从MySQL 8. 0. 17 开始，FLOAT(M,D) 和DOUBLE(M,D)用法在官方文档中已经明确不推荐使用</strong> ，将来可能被移除。另外，关于浮点型FLOAT和DOUBLE的UNSIGNED也不推荐使用了，将来也可能被移除。</li>\n<li>举例</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011151925019.png\" alt=\"image-20221011151925019\"></p>\n<h3 id=\"3-3-精度误差说明\"><a href=\"#3-3-精度误差说明\" class=\"headerlink\" title=\"3. 3 精度误差说明\"></a>3. 3 精度误差说明</h3><p>浮点数类型有个缺陷，就是不精准。下面我来重点解释一下为什么 MySQL 的浮点数不够精准。比如，我们设计一个表，有f 1 这个字段，插入值分别为 0. 47 , 0. 44 , 0. 19 ，我们期待的运行结果是： 0. 47 + 0. 44 + 0. 19 &#x3D;1.1。而使用sum之后查询：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011152014344.png\" alt=\"image-20221011152014344\"></p>\n<p>查询结果是 1. 0999999999999999 。看到了吗？虽然误差很小，但确实有误差。 你也可以尝试把数据类型改成 FLOAT，然后运行求和查询，得到的是， 1. 0999999940395355 。显然，误差更大了。</p>\n<p>那么，为什么会存在这样的误差呢？问题还是出在 MySQL 对浮点类型数据的存储方式上。</p>\n<p>MySQL 用 4 个字节存储 FLOAT 类型数据，用 8 个字节来存储 DOUBLE 类型数据。无论哪个，都是采用二进制的方式来进行存储的。比如 9. 625 ，用二进制来表达，就是 1001. 101 ，或者表达成 1. 001101 × 2 ^ 3 。如果尾数不是 0 或 5 （比如 9. 624 ），你就无法用一个二进制数来精确表达。进而，就只好在取值允许的范围内进行四舍五入。</p>\n<p>在编程中，如果用到浮点数，要特别注意误差问题， <strong>因为浮点数是不准确的，所以我们要避免使用“&#x3D;”来判断两个数是否相等。</strong> 同时，在一些对精确度要求较高的项目中，千万不要使用浮点数，不然会导致结果错误，甚至是造成不可挽回的损失。那么，MySQL 有没有精准的数据类型呢？当然有，这就是定点数类型：<strong>DECIMAL</strong>。</p>\n<h2 id=\"4-定点数类型\"><a href=\"#4-定点数类型\" class=\"headerlink\" title=\"4. 定点数类型\"></a>4. 定点数类型</h2><h3 id=\"4-1-类型介绍\"><a href=\"#4-1-类型介绍\" class=\"headerlink\" title=\"4. 1 类型介绍\"></a>4. 1 类型介绍</h3><ul>\n<li>MySQL中的定点数类型只有 DECIMAL 一种类型。</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011185845336.png\" alt=\"image-20221011185845336\"></p>\n<p>使用 DECIMAL(M,D) 的方式表示高精度小数。其中，M被称为精度，D被称为标度。0&lt;&#x3D;M&lt;&#x3D;65，0&lt;&#x3D;D&lt;&#x3D;30，D&lt;M。例如，定义DECIMAL（5,2）的类型，表示该列取值范围是-999.99~999.99。</p>\n<ul>\n<li><p><strong>DECIMAL(M,D)的最大取值范围与DOUBLE类型一样</strong> ，但是有效的数据范围是由M和D决定的。</p>\n<p>DECIMAL 的存储空间并不是固定的，由精度值M决定，总共占用的存储空间为M+2个字节。也就是说，在一些对精度要求不高的场景下，比起占用同样字节长度的定点数，浮点数表达的数值范围可以更大一些。</p>\n</li>\n<li><p>定点数在MySQL内部是以<strong>字符串</strong>的形式进行存储，这就决定了它一定是精准的。</p>\n</li>\n<li><p>当DECIMAL类型不指定精度和标度时，其默认为DECIMAL(10,0)。当数据的精度超出了定点数类型的精度范围时，则MySQL同样会进行四舍五入处理。</p>\n</li>\n<li><p><strong>浮点数 vs 定点数</strong></p>\n<ul>\n<li>浮点数相对于定点数的优点是在长度一定的情况下，浮点类型取值范围大，但是不精准，适用于需要取值范围大，又可以容忍微小误差的科学计算场景（比如计算化学、分子建模、流体动力学等）</li>\n<li>定点数类型取值范围相对小，但是精准，没有误差，适合于对精度要求极高的场景 （比如涉及金额计算的场景）</li>\n</ul>\n</li>\n<li><p>举例</p>\n</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011190028650.png\" alt=\"image-20221011190028650\"></p>\n<ul>\n<li>举例</li>\n</ul>\n<p>我们运行下面的语句，把test_double2表中字段“f1”的数据类型修改为 DECIMAL(5,2)：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011190053436.png\" alt=\"image-20221011190053436\"></p>\n<p>然后，我们再一次运行求和语句：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011190114774.png\" alt=\"image-20221011190114774\"></p>\n<h3 id=\"4-2-开发中经验\"><a href=\"#4-2-开发中经验\" class=\"headerlink\" title=\"4. 2 开发中经验\"></a>4. 2 开发中经验</h3><p>“由于 DECIMAL 数据类型的精准性，在我们的项目中，除了极少数（比如商品编号）用到整数类型外，其他的数值都用的是 DECIMAL，原因就是这个项目所处的零售行业，要求精准，一分钱也不能差。 ” ——来自某项目经理</p>\n<h2 id=\"5-位类型：BIT\"><a href=\"#5-位类型：BIT\" class=\"headerlink\" title=\"5. 位类型：BIT\"></a>5. 位类型：BIT</h2><p>BIT类型中存储的是二进制值，类似 010110 。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011190230936.png\" alt=\"image-20221011190230936\"></p>\n<p>BIT类型，如果没有指定(M)，默认是 1 位。这个 1 位，表示只能存 1 位的二进制值。这里(M)是表示二进制的位数，位数最小值为 1 ，最大值为 64 。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011190244939.png\" alt=\"image-20221011190244939\"></p>\n<p>注意：在向BIT类型的字段中插入数据时，一定要确保插入的数据在BIT类型支持的范围内。</p>\n<p>使用SELECT命令查询位字段时，可以用**BIN()<strong>或</strong>HEX()**函数进行读取。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011190325107.png\" alt=\"image-20221011190325107\"></p>\n<p>可以看到，使用b+ 0 查询数据时，可以直接查询出存储的十进制数据的值。</p>\n<h2 id=\"6-日期与时间类型\"><a href=\"#6-日期与时间类型\" class=\"headerlink\" title=\"6. 日期与时间类型\"></a>6. 日期与时间类型</h2><p>日期与时间是重要的信息，在我们的系统中，几乎所有的数据表都用得到。原因是客户需要知道数据的时间标签，从而进行数据查询、统计和处理。</p>\n<p>MySQL有多种表示日期和时间的数据类型，不同的版本可能有所差异，MySQL 8. 0 版本支持的日期和时间类型主要有：YEAR类型、TIME类型、DATE类型、DATETIME类型和TIMESTAMP类型。</p>\n<ul>\n<li><code>YEAR</code>类型通常用来表示年</li>\n<li><code>DATE</code>类型通常用来表示年、月、日</li>\n<li><code>TIME</code>类型通常用来表示时、分、秒</li>\n<li><code>DATETIME</code>类型通常用来表示年、月、日、时、分、秒</li>\n<li><code>TIMESTAMP</code>类型通常用来表示带时区的年、月、日、时、分、秒</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011190449508.png\" alt=\"image-20221011190449508\"></p>\n<p>可以看到，不同数据类型表示的时间内容不同、取值范围不同，而且占用的字节数也不一样，你要根据实际需要灵活选取。</p>\n<p>为什么时间类型 TIME 的取值范围不是 - 23 : 59 : 59 ～ 23 : 59 : 59 呢？原因是 MySQL 设计的 TIME 类型，不光表示一天之内的时间，而且可以用来表示一个时间间隔，这个时间间隔可以超过 24 小时。</p>\n<h3 id=\"6-1-YEAR类型\"><a href=\"#6-1-YEAR类型\" class=\"headerlink\" title=\"6. 1 YEAR类型\"></a>6. 1 YEAR类型</h3><p>YEAR类型用来表示年份，在所有的日期时间类型中所占用的存储空间最小，只需要 1 个字节的存储空间。</p>\n<p>在MySQL中，YEAR有以下几种存储格式：</p>\n<ul>\n<li>以 4 位字符串或数字格式表示YEAR类型，其格式为YYYY，最小值为 1901 ，最大值为 2155 。</li>\n<li>以 2 位字符串格式表示YEAR类型，最小值为 00 ，最大值为 99 。<ul>\n<li>当取值为 01 到 69 时，表示 2001 到 2069 ；</li>\n<li>当取值为 70 到 99 时，表示 1970 到 1999 ；</li>\n<li>当取值整数的 0 或 00 添加的话，那么是 0000 年；</li>\n<li>当取值是日期&#x2F;字符串的’ 0 ‘添加的话，是 2000 年。</li>\n</ul>\n</li>\n</ul>\n<p><strong>从MySQL 5. 5. 27 开始， 2 位格式的YEAR已经不推荐使用</strong> 。YEAR默认格式就是“YYYY”，没必要写成YEAR( 4 )，从MySQL 8. 0. 19 开始，不推荐使用指定显示宽度的YEAR( 4 )数据类型。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011190650567.png\" alt=\"image-20221011190650567\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011190704596.png\" alt=\"image-20221011190704596\"></p>\n<h3 id=\"6-2-DATE类型\"><a href=\"#6-2-DATE类型\" class=\"headerlink\" title=\"6. 2 DATE类型\"></a>6. 2 DATE类型</h3><p>DATE类型表示日期，没有时间部分，格式为<code>YYYY-MM-DD</code>，其中，YYYY表示年份，MM表示月份，DD表示日期。需要 <strong>3 个字节</strong>的存储空间。在向DATE类型的字段插入数据时，同样需要满足一定的格式条件。</p>\n<ul>\n<li><p>以<code>YYYY-MM-DD</code>格式或者<code>YYYYMMDD</code>格式表示的字符串日期，其最小取值为 1000 - 01 - 01 ，最大取值为9999 - 12 - 03 。YYYYMMDD格式会被转化为YYYY-MM-DD格式。</p>\n</li>\n<li><p>以<code>YY-MM-DD</code>格式或者<code>YYMMDD</code>格式表示的字符串日期，此格式中，年份为两位数值或字符串满足YEAR类型的格式条件为：当年份取值为 00 到 69 时，会被转化为 2000 到 2069 ；当年份取值为 70 到 99时，会被转化为 1970 到 1999 。</p>\n</li>\n<li><p>使用<code>CURRENT_DATE()</code>或者<code>NOW()</code>函数，会插入当前系统的日期。</p>\n</li>\n</ul>\n<p><strong>举例</strong>：</p>\n<p>创建数据表，表中只包含一个DATE类型的字段f 1 。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011190809278.png\" alt=\"image-20221011190809278\"></p>\n<p>插入数据：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011190856198.png\" alt=\"image-20221011190856198\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011190904503.png\" alt=\"image-20221011190904503\"></p>\n<h3 id=\"6-3-TIME类型\"><a href=\"#6-3-TIME类型\" class=\"headerlink\" title=\"6. 3 TIME类型\"></a>6. 3 TIME类型</h3><p>TIME类型用来表示时间，不包含日期部分。在MySQL中，需要 <strong>3 个字节</strong>的存储空间来存储TIME类型的数据，可以使用“HH:MM:SS”格式来表示TIME类型，其中，HH表示小时，MM表示分钟，SS表示秒。</p>\n<p>在MySQL中，向TIME类型的字段插入数据时，也可以使用几种不同的格式。 </p>\n<p>（ 1 ）可以使用带有冒号的字符串，比如’<code>D  HH:MM:SS</code>‘、’<code>HH:MM:SS</code>‘、’<code>HH:MM</code>‘、’<code>D HH:MM</code>‘、’<code>D HH</code>‘或’<code>SS</code>‘格式，都能被正确地插入TIME类型的字段中。其中D表示天，其最小值为 0 ，最大值为 34 。如果使用带有D格式的字符串插入TIME类型的字段时，D会被转化为小时，计算格式为D* 24 +HH。当使用带有冒号并且不带D的字符串表示时间时，表示当天的时间，比如 12 : 10 表示 12 : 10 : 00 ，而不是 00 : 12 : 10 。 </p>\n<p>（ 2 ）可以使用不带有冒号的字符串或者数字，格式为’<code>HHMMSS</code>‘或者<code>HHMMSS</code>。如果插入一个不合法的字符串或者数字，MySQL在存储数据时，会将其自动转化为 00 : 00 : 00 进行存储。比如 1210 ，MySQL会将最右边的两位解析成秒，表示00 : 12 : 10 ，而不是 12 : 10 : 00 。 </p>\n<p>（ 3 ）使用<code>CURRENT_TIME()</code>或<code>NOW()</code>，会插入当前系统的时间。</p>\n<p><strong>举例：</strong></p>\n<p>创建数据表，表中包含一个TIME类型的字段f 1 。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011191109431.png\" alt=\"image-20221011191109431\"></p>\n<h3 id=\"6-4-DATETIME类型\"><a href=\"#6-4-DATETIME类型\" class=\"headerlink\" title=\"6. 4 DATETIME类型\"></a>6. 4 DATETIME类型</h3><p>DATETIME类型在所有的日期时间类型中占用的存储空间最大，总共需要 <strong>8</strong> 个字节的存储空间。在格式上为DATE类型和TIME类型的组合，可以表示为<code>YYYY-MM-DD HH:MM:SS</code>，其中YYYY表示年份，MM表示月份，DD表示日期，HH表示小时，MM表示分钟，SS表示秒。</p>\n<p>在向DATETIME类型的字段插入数据时，同样需要满足一定的格式条件。</p>\n<ul>\n<li><p>以<code>YYYY-MM-DD HH:MM:SS</code>格式或者<code>YYYYMMDDHHMMSS</code>格式的字符串插入DATETIME类型的字段时，最小值为 1000 - 01 - 01 00 : 00 : 00 ，最大值为 9999 - 12 - 03 23 : 59 : 59 。</p>\n<ul>\n<li>以YYYYMMDDHHMMSS格式的数字插入DATETIME类型的字段时，会被转化为YYYY-MM-DD HH:MM:SS格式。</li>\n</ul>\n</li>\n<li><p>以<code>YY-MM-DD HH:MM:SS</code>格式或者<code>YYMMDDHHMMSS</code>格式的字符串插入DATETIME类型的字段时，两位数的年份规则符合YEAR类型的规则， 00 到 69 表示 2000 到 2069 ； 70 到 99 表示 1970 到 1999 。</p>\n</li>\n<li><p>使用函数<code>CURRENT_TIMESTAMP()</code>和<code>NOW()</code>，可以向DATETIME类型的字段插入系统的当前日期和时间。</p>\n</li>\n</ul>\n<p><strong>举例</strong>：</p>\n<p>创建数据表，表中包含一个DATETIME类型的字段dt。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011191414825.png\" alt=\"image-20221011191414825\"></p>\n<p>插入数据：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011191426159.png\" alt=\"image-20221011191426159\"></p>\n<h3 id=\"6-5-TIMESTAMP类型\"><a href=\"#6-5-TIMESTAMP类型\" class=\"headerlink\" title=\"6. 5 TIMESTAMP类型\"></a>6. 5 TIMESTAMP类型</h3><p>TIMESTAMP类型也可以表示日期时间，其显示格式与DATETIME类型相同，都是<code>YYYY-MM-DDHH:MM:SS</code>，需要 4 个字节的存储空间。但是TIMESTAMP存储的时间范围比DATETIME要小很多，只能存储“ 1970 - 01 - 01 00 : 00 : 01 UTC”到“ 2038 - 01 - 19 03 : 14 : 07 UTC”之间的时间。其中，UTC表示世界统一时间，也叫作世界标准时间。</p>\n<ul>\n<li><strong>存储数据的时候需要对当前时间所在的时区进行转换，查询数据的时候再将时间转换回当前的时区。因此，使用TIMESTAMP存储的同一个时间值，在不同的时区查询时会显示不同的时间。</strong></li>\n</ul>\n<p>向TIMESTAMP类型的字段插入数据时，当插入的数据格式满足YY-MM-DD HH:MM:SS和YYMMDDHHMMSS时，两位数值的年份同样符合YEAR类型的规则条件，只不过表示的时间范围要小很多。</p>\n<p>如果向TIMESTAMP类型的字段插入的时间超出了TIMESTAMP类型的范围，则MySQL会抛出错误信息。</p>\n<p><strong>举例：</strong></p>\n<p>创建数据表，表中包含一个TIMESTAMP类型的字段ts。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011191555032.png\" alt=\"image-20221011191555032\"></p>\n<p>插入数据：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011191605229.png\" alt=\"image-20221011191605229\"></p>\n<p><strong>TIMESTAMP和DATETIME的区别</strong>：</p>\n<ul>\n<li><p>TIMESTAMP存储空间比较小，表示的日期时间范围也比较小</p>\n</li>\n<li><p>底层存储方式不同，TIMESTAMP底层存储的是毫秒值，距离 1970 - 1 - 1 0 : 0 : 0 0 毫秒的毫秒值。</p>\n</li>\n<li><p>两个日期比较大小或日期计算时，TIMESTAMP更方便、更快。</p>\n</li>\n<li><p>TIMESTAMP和时区有关。TIMESTAMP会根据用户的时区不同，显示不同的结果。而DATETIME则只能反映出插入时当地的时区，其他时区的人查看数据必然会有误差的。</p>\n</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011191643533.png\" alt=\"image-20221011191643533\"></p>\n<h3 id=\"6-6-开发中经验\"><a href=\"#6-6-开发中经验\" class=\"headerlink\" title=\"6. 6 开发中经验\"></a>6. 6 开发中经验</h3><p>用得最多的日期时间类型，就是 <strong>DATETIME</strong>。虽然 MySQL 也支持 YEAR（年）、 TIME（时间）、DATE（日期），以及 TIMESTAMP 类型，但是在实际项目中，尽量用 DATETIME 类型。因为这个数据类型包括了完整的日期和时间信息，取值范围也最大，使用起来比较方便。毕竟，如果日期时间信息分散在好几个字段，很不容易记，而且查询的时候，SQL 语句也会更加复杂。</p>\n<p>此外，一般存注册时间、商品发布时间等，不建议使用DATETIME存储，而是使用<strong>时间戳</strong>，因为DATETIME虽然直观，但不便于计算。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011191739913.png\" alt=\"image-20221011191739913\"></p>\n<h2 id=\"7-文本字符串类型\"><a href=\"#7-文本字符串类型\" class=\"headerlink\" title=\"7. 文本字符串类型\"></a>7. 文本字符串类型</h2><p>在实际的项目中，我们还经常遇到一种数据，就是字符串数据。</p>\n<p>MySQL中，文本字符串总体上分为<code>CHAR</code>、<code>VARCHAR</code>、<code>TINYTEXT</code>、<code>TEXT</code>、<code>MEDIUMTEXT</code>、<code>LONGTEXT</code>、<code>ENUM</code>、<code>SET</code>等类型。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011191848963.png\" alt=\"image-20221011191848963\"></p>\n<h3 id=\"7-1-CHAR与VARCHAR类型\"><a href=\"#7-1-CHAR与VARCHAR类型\" class=\"headerlink\" title=\"7. 1 CHAR与VARCHAR类型\"></a>7. 1 CHAR与VARCHAR类型</h3><p>CHAR和VARCHAR类型都可以存储比较短的字符串。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011191923881.png\" alt=\"image-20221011191923881\"></p>\n<p><strong>CHAR类型</strong>：</p>\n<ul>\n<li><p>CHAR(M) 类型一般需要预先定义字符串长度。如果不指定(M)，则表示长度默认是 1 个字符。</p>\n</li>\n<li><p>如果保存时，数据的实际长度比CHAR类型声明的长度小，则会在<strong>右侧填充</strong>空格以达到指定的长度。当MySQL检索CHAR类型的数据时，CHAR类型的字段会去除尾部的空格。</p>\n</li>\n<li><p>定义CHAR类型字段时，声明的字段长度即为CHAR类型字段所占的存储空间的字节数。</p>\n</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011192027825.png\" alt=\"image-20221011192027825\"></p>\n<p><strong>VARCHAR类型</strong>：</p>\n<ul>\n<li>VARCHAR(M) 定义时，<strong>必须指定长度M</strong>，否则报错。</li>\n<li>MySQL4.0版本以下，varchar(20)：指的是 20 字节，如果存放UTF8汉字时，只能存 6 个（每个汉字 3 字节） ；MySQL5.0版本以上，varchar(20)：指的是 20 字符。</li>\n<li>检索VARCHAR类型的字段数据时，会保留数据尾部的空格。VARCHAR类型的字段所占用的存储空间为字符串实际长度加 1 个字节。</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011192135112.png\" alt=\"image-20221011192135112\"></p>\n<p><strong>哪些情况使用 CHAR 或 VARCHAR 更好</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011192150645.png\" alt=\"image-20221011192150645\"></p>\n<p>情况 1 ：存储很短的信息。比如门牌号码 101 ，201……这样很短的信息应该用char，因为varchar还要占个byte用于存储信息长度，本来打算节约存储的，结果得不偿失。</p>\n<p>情况 2 ：固定长度的。比如使用uuid作为主键，那用char应该更合适。因为他固定长度，varchar动态根据长度的特性就消失了，而且还要占个长度信息。</p>\n<p>情况 3 ：十分频繁改变的column。因为varchar每次存储都要有额外的计算，得到长度等工作，如果一个非常频繁改变的，那就要有很多的精力用于计算，而这些对于char来说是不需要的。</p>\n<p>情况 4 ：具体存储引擎中的情况：</p>\n<ul>\n<li><code>MyISAM </code>数据存储引擎和数据列：MyISAM数据表，最好使用固定长度(CHAR)的数据列代替可变长度(VARCHAR)的数据列。这样使得整个表静态化，从而使<strong>数据检索更快</strong>，用空间换时间。</li>\n<li><code>MEMORY</code> 存储引擎和数据列：MEMORY数据表目前都使用固定长度的数据行存储，因此无论使用CHAR或VARCHAR列都没有关系，两者都是作为CHAR类型处理的。</li>\n<li><code>InnoDB</code>存储引擎，建议使用VARCHAR类型。因为对于InnoDB数据表，内部的行存储格式并没有区分固定长度和可变长度列（所有数据行都使用指向数据列值的头指针），而且 主<strong>要影响性能的因素是数据行使用的存储总量</strong> ，由于char平均占用的空间多于varchar，所以除了简短并且固定长度的，其他考虑varchar。这样节省空间，对磁盘I&#x2F;O和数据存储总量比较好。</li>\n</ul>\n<h3 id=\"7-2-TEXT类型\"><a href=\"#7-2-TEXT类型\" class=\"headerlink\" title=\"7. 2 TEXT类型\"></a>7. 2 TEXT类型</h3><p>在MySQL中，TEXT用来保存文本类型的字符串，总共包含 4 种类型，分别为TINYTEXT、TEXT、MEDIUMTEXT 和 LONGTEXT 类型。</p>\n<p>在向TEXT类型的字段保存和查询数据时，系统自动按照实际长度存储，不需要预先定义长度。这一点和VARCHAR类型相同。</p>\n<p>每种TEXT类型保存的数据长度和所占用的存储空间不同，如下：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011192358765.png\" alt=\"image-20221011192358765\"></p>\n<p><strong>由于实际存储的长度不确定，MySQL 不允许 TEXT 类型的字段做主键</strong> 。遇到这种情况，你只能采用CHAR(M)，或者 VARCHAR(M)。</p>\n<p><strong>举例：</strong></p>\n<p>创建数据表：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011192421144.png\" alt=\"image-20221011192421144\"></p>\n<p><strong>开发中经验</strong>：</p>\n<p>TEXT文本类型，可以存比较大的文本段，搜索速度稍慢，因此如果不是特别大的内容，建议使用CHAR，VARCHAR来代替。还有TEXT类型不用加默认值，加了也没用。而且text和blob类型的数据删除后容易导致<br>“空洞”，使得文件碎片比较多，所以频繁使用的表不建议包含TEXT类型字段，建议单独分出去，单独用一个表。</p>\n<h2 id=\"8-ENUM类型\"><a href=\"#8-ENUM类型\" class=\"headerlink\" title=\"8. ENUM类型\"></a>8. ENUM类型</h2><p>ENUM类型也叫作枚举类型，ENUM类型的取值范围需要在定义字段时进行指定。设置字段值时，ENUM类型只允许从成员中选取单个值，不能一次选取多个值。</p>\n<p>其所需要的存储空间由定义ENUM类型时指定的成员个数决定。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011192519118.png\" alt=\"image-20221011192519118\"></p>\n<ul>\n<li><p>当ENUM类型包含 1 ～ 255 个成员时，需要 1 个字节的存储空间；</p>\n</li>\n<li><p>当ENUM类型包含 256 ～ 65535 个成员时，需要 2 个字节的存储空间。</p>\n</li>\n<li><p>ENUM类型的成员个数的上限为 65535 个。</p>\n</li>\n</ul>\n<p>举例：</p>\n<p>创建表如下：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011192548731.png\" alt=\"image-20221011192548731\"></p>\n<p>添加数据：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011192556372.png\" alt=\"image-20221011192556372\"></p>\n<h2 id=\"9-SET类型\"><a href=\"#9-SET类型\" class=\"headerlink\" title=\"9. SET类型\"></a>9. SET类型</h2><p>SET表示一个字符串对象，可以包含 0 个或多个成员，但成员个数的上限为 <strong>64</strong> 。设置字段值时，可以取取值范围内的 0 个或多个值。</p>\n<p>当SET类型包含的成员个数不同时，其所占用的存储空间也是不同的，具体如下：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011192628377.png\" alt=\"image-20221011192628377\"></p>\n<p>SET类型在存储数据时成员个数越多，其占用的存储空间越大。注意：SET类型在选取成员时，可以一次选择多个成员，这一点与ENUM类型不同。</p>\n<p>举例：</p>\n<p>创建表：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011192653270.png\" alt=\"image-20221011192653270\"></p>\n<p>向表中插入数据：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011192702744.png\" alt=\"image-20221011192702744\"></p>\n<p>举例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011192717442.png\" alt=\"image-20221011192717442\"></p>\n<h2 id=\"10-二进制字符串类型\"><a href=\"#10-二进制字符串类型\" class=\"headerlink\" title=\"10. 二进制字符串类型\"></a>10. 二进制字符串类型</h2><p>MySQL中的二进制字符串类型主要存储一些二进制数据，比如可以存储图片、音频和视频等二进制数据。</p>\n<p>MySQL中支持的二进制字符串类型主要包括BINARY、VARBINARY、TINYBLOB、BLOB、MEDIUMBLOB 和LONGBLOB类型。</p>\n<h4 id=\"BINARY与VARBINARY类型\"><a href=\"#BINARY与VARBINARY类型\" class=\"headerlink\" title=\"BINARY与VARBINARY类型\"></a>BINARY与VARBINARY类型</h4><p>BINARY和VARBINARY类似于CHAR和VARCHAR，只是它们存储的是二进制字符串。</p>\n<p>BINARY (M)为固定长度的二进制字符串，M表示最多能存储的字节数，取值范围是 0 ~ 255 个字符。如果未指定(M)，表示只能存储 <strong>1 个字节</strong>。例如BINARY ( 8 )，表示最多能存储 8 个字节，如果字段值不足(M)个字节，将在右边填充’\\ 0 ‘以补齐指定长度。</p>\n<p>VARBINARY (M)为可变长度的二进制字符串，M表示最多能存储的字节数，总字节数不能超过行的字节长度限制 65535 ，另外还要考虑额外字节开销，VARBINARY类型的数据除了存储数据本身外，还需要 1 或 2 个字节来存储数据的字节数。VARBINARY类型**必须指定(M)**，否则报错。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011192920879.png\" alt=\"image-20221011192920879\"></p>\n<p>举例：</p>\n<p>创建表：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011192940408.png\" alt=\"image-20221011192940408\"></p>\n<p>添加数据：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011192949901.png\" alt=\"image-20221011192949901\"></p>\n<h4 id=\"BLOB类型\"><a href=\"#BLOB类型\" class=\"headerlink\" title=\"BLOB类型\"></a>BLOB类型</h4><p>BLOB是一个<strong>二进制大对象</strong>，可以容纳可变数量的数据。</p>\n<p>MySQL中的BLOB类型包括TINYBLOB、BLOB、MEDIUMBLOB和LONGBLOB 4种类型，它们可容纳值的最大长度不同。可以存储一个二进制的大对象，比如<strong>图片、音频和视频</strong>等。</p>\n<p>需要注意的是，在实际工作中，往往不会在MySQL数据库中使用BLOB类型存储大对象数据，通常会将图片、音频和视频文件存储到<strong>服务器的磁盘上</strong>，并将图片、音频和视频的访问路径存储到MySQL中。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011193033093.png\" alt=\"image-20221011193033093\"></p>\n<p>举例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011193042038.png\" alt=\"image-20221011193042038\"></p>\n<p><strong>TEXT和BLOB的使用注意事项</strong>：</p>\n<p>在使用text和blob字段类型时要注意以下几点，以便更好的发挥数据库的性能。</p>\n<p>① BLOB和TEXT值也会引起自己的一些问题，特别是执行了大量的删除或更新操作的时候。删除这种值会在数据表中留下很大的”<strong>空洞</strong>“，以后填入这些”空洞”的记录可能长度不同。为了提高性能，建议定期使用 OPTIMIZE TABLE 功能对这类表进行<strong>碎片整理</strong>。</p>\n<p>② 如果需要对大文本字段进行模糊查询，MySQL 提供了<strong>前缀索引</strong>。但是仍然要在不必要的时候避免检索大型的BLOB或TEXT值。例如，SELECT * 查询就不是很好的想法，除非你能够确定作为约束条件的<br>WHERE子句只会找到所需要的数据行。否则，你可能毫无目的地在网络上传输大量的值。</p>\n<p>③ 把BLOB或TEXT列<strong>分离到单独的表</strong>中。在某些环境中，如果把这些数据列移动到第二张数据表中，可以让你把原数据表中的数据列转换为固定长度的数据行格式，那么它就是有意义的。这会<strong>减少主表中的碎片</strong>，使你得到固定长度数据行的性能优势。它还使你在主数据表上运行 SELECT * 查询的时候不会通过网络传输大量的BLOB或TEXT值。</p>\n<h2 id=\"11-JSON-类型\"><a href=\"#11-JSON-类型\" class=\"headerlink\" title=\"11. JSON 类型\"></a>11. JSON 类型</h2><p>JSON（JavaScript Object Notation）是一种轻量级的<strong>数据交换格式</strong>。简洁和清晰的层次结构使得 JSON 成为理想的数据交换语言。它易于人阅读和编写，同时也易于机器解析和生成，并有效地提升网络传输效率。<strong>JSON 可以将 JavaScript 对象中表示的一组数据转换为字符串，然后就可以在网络或者程序之间轻松地传递这个字符串，并在需要的时候将它还原为各编程语言所支持的数据格式。</strong></p>\n<p>在MySQL 5.7中，就已经支持JSON数据类型。在MySQL 8.x版本中，JSON类型提供了可以进行自动验证的JSON文档和优化的存储结构，使得在MySQL中存储和读取JSON类型的数据更加方便和高效。 创建数据表，表中包含一个JSON类型的字段 js 。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011210208679.png\" alt=\"image-20221011210208679\"></p>\n<p>向表中插入JSON数据。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011210221071.png\" alt=\"image-20221011210221071\"></p>\n<p>查询t19表中的数据。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011210236833.png\" alt=\"image-20221011210236833\"></p>\n<p>当需要检索JSON类型的字段中数据的某个具体值时，可以使用“-&gt;”和“-&gt;&gt;”符号。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011210246451.png\" alt=\"image-20221011210246451\"></p>\n<p>通过“-&gt;”和“-&gt;&gt;”符号，从JSON字段中正确查询出了指定的JSON数据的值。</p>\n<h2 id=\"12-空间类型\"><a href=\"#12-空间类型\" class=\"headerlink\" title=\"12. 空间类型\"></a>12. 空间类型</h2><p>MySQL 空间类型扩展支持地理特征的生成、存储和分析。这里的地理特征表示世界上具有位置的任何东西，可以是一个实体，例如一座山；可以是空间，例如一座办公楼；也可以是一个可定义的位置，例如:一个十字路口等等。MySQL中使用<strong>Geometry（几何）</strong>来表示所有地理特征。Geometry指一个点或点的集合，代表世界上任何具有位置的事物。</p>\n<p>MySQL的空间数据类型（Spatial Data Type）对应于OpenGIS类，包括单值类型：GEOMETRY、POINT、LINESTRING、POLYGON以及集合类型：MULTIPOINT、MULTILINESTRING、MULTIPOLYGON、<br>GEOMETRYCOLLECTION 。</p>\n<ul>\n<li>Geometry是所有空间集合类型的基类，其他类型如POINT、LINESTRING、POLYGON都是Geometry的子类。<ul>\n<li>Point，顾名思义就是点，有一个坐标值。例如POINT(121.213342 31.234532)，POINT(30 10)，坐标值支持DECIMAL类型，经度（longitude）在前，维度（latitude）在后，用空格分隔。</li>\n<li>LineString，线，由一系列点连接而成。如果线从头至尾没有交叉，那就是简单的（simple）；如果起点和终点重叠，那就是封闭的（closed）。例如LINESTRING(30 10,10 30,4040)，点与点之间用逗号分隔，一个点中的经纬度用空格分隔，与POINT格式一致。</li>\n<li>Polygon，多边形。可以是一个实心平面形，即没有内部边界，也可以有空洞，类似纽扣。最简单的就是只有一个外边界的情况，例如POLYGON((0 0,10 0,10 10, 0 10))。</li>\n</ul>\n</li>\n</ul>\n<p>下面展示几种常见的几何图形元素：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011210544799.png\" alt=\"image-20221011210544799\"></p>\n<ul>\n<li>MultiPoint、MultiLineString、MultiPolygon、GeometryCollection 这 4 种类型都是集合类，是多个<br>Point、LineString或Polygon组合而成。</li>\n</ul>\n<p>下面展示的是多个同类或异类几何图形元素的组合：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011210611467.png\" alt=\"image-20221011210611467\"></p>\n<h2 id=\"13-小结及选择建议\"><a href=\"#13-小结及选择建议\" class=\"headerlink\" title=\"13. 小结及选择建议\"></a>13. 小结及选择建议</h2><p>在定义数据类型时，如果确定是<strong>整数</strong>，就用<strong>INT</strong>； 如果是<strong>小数</strong>，一定用定点数类型**DECIMAL(M,D)**； 如果是日期与时间，就用 <strong>DATETIME</strong>。</p>\n<p>这样做的好处是，首先确保你的系统不会因为数据类型定义出错。不过，凡事都是有两面的，可靠性好，并不意味着高效。比如，TEXT 虽然使用方便，但是效率不如 CHAR(M) 和 VARCHAR(M)。</p>\n<p>关于字符串的选择，建议参考如下阿里巴巴的《Java开发手册》规范：</p>\n<p><strong>阿里巴巴《Java开发手册》之MySQL数据库：</strong></p>\n<ul>\n<li>任何字段如果为非负数，必须是 UNSIGNED</li>\n<li>【<strong>强制</strong>】小数类型为 DECIMAL，禁止使用 FLOAT 和 DOUBLE。<ul>\n<li>说明：在存储的时候，FLOAT 和 DOUBLE 都存在精度损失的问题，很可能在比较值的时候，得到不正确的结果。如果存储的数据范围超过 DECIMAL 的范围，建议将数据拆成整数和小数并分开存储。</li>\n</ul>\n</li>\n<li>【<strong>强制</strong>】如果存储的字符串长度几乎相等，使用 CHAR 定长字符串类型。</li>\n<li>【<strong>强制</strong>】VARCHAR 是可变长字符串，不预先分配存储空间，长度不要超过 5000 。如果存储长度大于此值，定义字段类型为 TEXT，独立出来一张表，用主键来对应，避免影响其它字段索引效率。</li>\n</ul>\n<hr>\n<h1 id=\"第-13-章-约束\"><a href=\"#第-13-章-约束\" class=\"headerlink\" title=\"第 13 章_约束\"></a>第 13 章_约束</h1><h2 id=\"1-约束-constraint-概述\"><a href=\"#1-约束-constraint-概述\" class=\"headerlink\" title=\"1. 约束(constraint)概述\"></a>1. 约束(constraint)概述</h2><h3 id=\"1-1-为什么需要约束\"><a href=\"#1-1-为什么需要约束\" class=\"headerlink\" title=\"1. 1 为什么需要约束\"></a>1. 1 为什么需要约束</h3><p>数据完整性（Data Integrity）是指数据的精确性（Accuracy）和可靠性（Reliability）。它是防止数据库中存在不符合语义规定的数据和防止因错误信息的输入输出造成无效操作或错误信息而提出的。</p>\n<p>为了保证数据的完整性，SQL规范以约束的方式对 <strong>表数据进行额外的条件限制</strong> 。从以下四个方面考虑：</p>\n<ul>\n<li><p><code>实体完整性（Entity Integrity）</code>：例如，同一个表中，不能存在两条完全相同无法区分的记录</p>\n</li>\n<li><p><code>域完整性（Domain Integrity）</code>：例如：年龄范围0-120，性别范围“男&#x2F;女”</p>\n</li>\n<li><p><code>引用完整性（Referential Integrity）</code>：例如：员工所在部门，在部门表中要能找到这个部门</p>\n</li>\n<li><p><code>用户自定义完整性（User-defined Integrity）</code>：例如：用户名唯一、密码不能为空等，本部门经理的工资不得高于本部门职工的平均工资的 5 倍。</p>\n</li>\n</ul>\n<h3 id=\"1-2-什么是约束\"><a href=\"#1-2-什么是约束\" class=\"headerlink\" title=\"1. 2 什么是约束\"></a>1. 2 什么是约束</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221014145702636.png\" alt=\"image-20221014145702636\"></p>\n<p>约束是表级的强制规定。</p>\n<p>可以在 <strong>创建表时规定约束（通过 CREATE TABLE 语句）</strong> ，或者在 <strong>表创建之后通过 ALTER TABLE 语句规定约束</strong> 。</p>\n<h3 id=\"1-3-约束的分类\"><a href=\"#1-3-约束的分类\" class=\"headerlink\" title=\"1. 3 约束的分类\"></a>1. 3 约束的分类</h3><ul>\n<li><p><strong>根据约束数据列的限制</strong>， 约束可分为：</p>\n<ul>\n<li><strong>单列约束</strong> ：每个约束只约束一列</li>\n<li><strong>多列约束</strong> ：每个约束可约束多列数据</li>\n</ul>\n</li>\n<li><p><strong>根据约束的作用范围</strong> ，约束可分为：</p>\n<ul>\n<li><strong>列级约束</strong> ：只能作用在一个列上，跟在列的定义后面</li>\n<li><strong>表级约束</strong> ：可以作用在多个列上，不与列一起，而是单独定义</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011212109098.png\" alt=\"image-20221011212109098\"></p>\n<ul>\n<li><strong>根据约束起的作用</strong> ，约束可分为：<ul>\n<li><strong>NOT NULL 非空约束，规定某个字段不能为空</strong></li>\n<li><strong>UNIQUE 唯一约束 ， 规定某个字段在整个表中是唯一的</strong></li>\n<li><strong>PRIMARY KEY 主键(非空且唯一)约束</strong></li>\n<li><strong>FOREIGN KEY 外键约束</strong></li>\n<li><strong>CHECK 检查约束</strong></li>\n<li><strong>DEFAULT 默认值约束</strong></li>\n</ul>\n</li>\n</ul>\n<p>注意： MySQL不支持check约束，但可以使用check约束，而没有任何效果</p>\n<ul>\n<li>查看某个表已有的约束</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011212218519.png\" alt=\"image-20221011212218519\"></p>\n<h2 id=\"2-非空约束\"><a href=\"#2-非空约束\" class=\"headerlink\" title=\"2. 非空约束\"></a>2. 非空约束</h2><h3 id=\"2-1-作用\"><a href=\"#2-1-作用\" class=\"headerlink\" title=\"2. 1 作用\"></a>2. 1 作用</h3><p>限定某个字段&#x2F;某列的值不允许为空</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011212246572.png\" alt=\"image-20221011212246572\"></p>\n<h3 id=\"2-2-关键字\"><a href=\"#2-2-关键字\" class=\"headerlink\" title=\"2. 2 关键字\"></a>2. 2 关键字</h3><p>NOT NULL</p>\n<h3 id=\"2-3-特点\"><a href=\"#2-3-特点\" class=\"headerlink\" title=\"2. 3 特点\"></a>2. 3 特点</h3><ul>\n<li><p>默认，所有的类型的值都可以是NULL，包括INT、FLOAT等数据类型</p>\n</li>\n<li><p>非空约束只能出现在表对象的列上，只能某个列单独限定非空，不能组合非空</p>\n</li>\n<li><p>一个表可以有很多列都分别限定了非空</p>\n</li>\n<li><p>空字符串’’不等于NULL， 0 也不等于NULL</p>\n</li>\n</ul>\n<h3 id=\"2-4-添加非空约束\"><a href=\"#2-4-添加非空约束\" class=\"headerlink\" title=\"2. 4 添加非空约束\"></a>2. 4 添加非空约束</h3><p>（ 1 ）建表时</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011212330954.png\" alt=\"image-20221011212330954\"></p>\n<p>举例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011212346606.png\" alt=\"image-20221011212346606\"></p>\n<p>（ 2 ）建表后</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011212411924.png\" alt=\"image-20221011212411924\"></p>\n<p>举例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011212420860.png\" alt=\"image-20221011212420860\"></p>\n<h3 id=\"2-5-删除非空约束\"><a href=\"#2-5-删除非空约束\" class=\"headerlink\" title=\"2. 5 删除非空约束\"></a>2. 5 删除非空约束</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011212623008.png\" alt=\"image-20221011212623008\"></p>\n<p>举例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011212633082.png\" alt=\"image-20221011212633082\"></p>\n<h2 id=\"3-唯一性约束\"><a href=\"#3-唯一性约束\" class=\"headerlink\" title=\"3. 唯一性约束\"></a>3. 唯一性约束</h2><h3 id=\"3-1-作用\"><a href=\"#3-1-作用\" class=\"headerlink\" title=\"3. 1 作用\"></a>3. 1 作用</h3><p>用来限制某个字段&#x2F;某列的值不能重复。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011213002546.png\" alt=\"image-20221011213002546\"></p>\n<h3 id=\"3-2-关键字\"><a href=\"#3-2-关键字\" class=\"headerlink\" title=\"3. 2 关键字\"></a>3. 2 关键字</h3><p>UNIQUE</p>\n<h3 id=\"3-3-特点\"><a href=\"#3-3-特点\" class=\"headerlink\" title=\"3. 3 特点\"></a>3. 3 特点</h3><ul>\n<li><p>同一个表可以有多个唯一约束。</p>\n</li>\n<li><p>唯一约束可以是某一个列的值唯一，也可以多个列组合的值唯一。</p>\n</li>\n<li><p>唯一性约束允许列值为空。</p>\n</li>\n<li><p>在创建唯一约束的时候，如果不给唯一约束命名，就默认和列名相同。</p>\n</li>\n<li><p><strong>MySQL会给唯一约束的列上默认创建一个唯一索引。</strong></p>\n</li>\n</ul>\n<h3 id=\"3-4-添加唯一约束\"><a href=\"#3-4-添加唯一约束\" class=\"headerlink\" title=\"3. 4 添加唯一约束\"></a>3. 4 添加唯一约束</h3><p>（ 1 ）建表时</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011213106193.png\" alt=\"image-20221011213106193\"></p>\n<p>举例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011213121088.png\" alt=\"image-20221011213121088\"></p>\n<p>表示用户名和密码组合不能重复</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011213246017.png\" alt=\"image-20221011213246017\"></p>\n<p>（ 2 ）建表后指定唯一键约束</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011213306363.png\" alt=\"image-20221011213306363\"></p>\n<p>举例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011213346728.png\" alt=\"image-20221011213346728\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011213355539.png\" alt=\"image-20221011213355539\"></p>\n<p>举例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011213426585.png\" alt=\"image-20221011213426585\"></p>\n<h3 id=\"3-5-关于复合唯一约束\"><a href=\"#3-5-关于复合唯一约束\" class=\"headerlink\" title=\"3. 5 关于复合唯一约束\"></a>3. 5 关于复合唯一约束</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011213510507.png\" alt=\"image-20221011213510507\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011213522493.png\" alt=\"image-20221011213522493\"></p>\n<h3 id=\"3-6-删除唯一约束\"><a href=\"#3-6-删除唯一约束\" class=\"headerlink\" title=\"3. 6 删除唯一约束\"></a>3. 6 删除唯一约束</h3><ul>\n<li><p>添加唯一性约束的列上也会自动创建唯一索引。</p>\n</li>\n<li><p>删除唯一约束只能通过删除唯一索引的方式删除。</p>\n</li>\n<li><p>删除时需要指定唯一索引名，唯一索引名就和唯一约束名一样。</p>\n</li>\n<li><p>如果创建唯一约束时未指定名称，如果是单列，就默认和列名相同；如果是组合列，那么默认和()中排在第一个的列名相同。也可以自定义唯一性约束名。</p>\n</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011213628042.png\" alt=\"image-20221011213628042\"></p>\n<p>注意：可以通过 <strong>show index from</strong> 表名称;查看表的索引</p>\n<h2 id=\"4-PRIMARY-KEY-约束\"><a href=\"#4-PRIMARY-KEY-约束\" class=\"headerlink\" title=\"4. PRIMARY KEY 约束\"></a>4. PRIMARY KEY 约束</h2><h3 id=\"4-1-作用\"><a href=\"#4-1-作用\" class=\"headerlink\" title=\"4. 1 作用\"></a>4. 1 作用</h3><p>用来唯一标识表中的一行记录。</p>\n<h3 id=\"4-2-关键字\"><a href=\"#4-2-关键字\" class=\"headerlink\" title=\"4. 2 关键字\"></a>4. 2 关键字</h3><p>primary key</p>\n<h3 id=\"4-3-特点\"><a href=\"#4-3-特点\" class=\"headerlink\" title=\"4. 3 特点\"></a>4. 3 特点</h3><ul>\n<li>主键约束相当于 <strong>唯一约束+非空约束的组合</strong> ，主键约束列不允许重复，也不允许出现空值。</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011213929332.png\" alt=\"image-20221011213929332\"></p>\n<ul>\n<li><p>一个表最多只能有一个主键约束，建立主键约束可以在列级别创建，也可以在表级别上创建。</p>\n</li>\n<li><p>主键约束对应着表中的一列或者多列（复合主键）</p>\n</li>\n<li><p>如果是多列组合的复合主键约束，那么这些列都不允许为空值，并且组合的值不允许重复。</p>\n</li>\n<li><p><strong>MySQL的主键名总是PRIMARY</strong> ，就算自己命名了主键约束名也没用。</p>\n</li>\n<li><p>当创建主键约束时，系统默认会在所在的列或列组合上建立对应的 主键索引 （能够根据主键查询的，就根据主键查询，效率更高）。如果删除主键约束了，主键约束对应的索引就自动删除了。</p>\n</li>\n<li><p>需要注意的一点是，不要修改主键字段的值。因为主键是数据记录的唯一标识，如果修改了主键的值，就有可能会破坏数据的完整性。</p>\n</li>\n</ul>\n<h3 id=\"4-4-添加主键约束\"><a href=\"#4-4-添加主键约束\" class=\"headerlink\" title=\"4. 4 添加主键约束\"></a>4. 4 添加主键约束</h3><p>（ 1 ）建表时指定主键约束</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011214023287.png\" alt=\"image-20221011214023287\"></p>\n<p>举例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011214045543.png\" alt=\"image-20221011214045543\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011214101009.png\" alt=\"image-20221011214101009\"></p>\n<p>再举例：</p>\n<ul>\n<li>列级约束</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011214120849.png\" alt=\"image-20221011214120849\"></p>\n<ul>\n<li>表级约束</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011214132560.png\" alt=\"image-20221011214132560\"></p>\n<p>（ 2 ）建表后增加主键约束</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011214151371.png\" alt=\"image-20221011214151371\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011214158277.png\" alt=\"image-20221011214158277\"></p>\n<h3 id=\"4-5-关于复合主键\"><a href=\"#4-5-关于复合主键\" class=\"headerlink\" title=\"4. 5 关于复合主键\"></a>4. 5 关于复合主键</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011221829631.png\" alt=\"image-20221011221829631\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011221844175.png\" alt=\"image-20221011221844175\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011221855767.png\" alt=\"image-20221011221855767\"></p>\n<ul>\n<li>再举例</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011221915871.png\" alt=\"image-20221011221915871\"></p>\n<h3 id=\"4-6-删除主键约束\"><a href=\"#4-6-删除主键约束\" class=\"headerlink\" title=\"4. 6 删除主键约束\"></a>4. 6 删除主键约束</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011221937689.png\" alt=\"image-20221011221937689\"></p>\n<p>举例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011221947099.png\" alt=\"image-20221011221947099\"></p>\n<p>说明：删除主键约束，不需要指定主键名，因为一个表只有一个主键，删除主键约束后，非空还在。</p>\n<h2 id=\"5-自增列：AUTO-INCREMENT\"><a href=\"#5-自增列：AUTO-INCREMENT\" class=\"headerlink\" title=\"5. 自增列：AUTO_INCREMENT\"></a>5. 自增列：AUTO_INCREMENT</h2><h3 id=\"5-1-作用\"><a href=\"#5-1-作用\" class=\"headerlink\" title=\"5. 1 作用\"></a>5. 1 作用</h3><p>某个字段的值自增</p>\n<h3 id=\"5-2-关键字\"><a href=\"#5-2-关键字\" class=\"headerlink\" title=\"5. 2 关键字\"></a>5. 2 关键字</h3><p>auto_increment</p>\n<h3 id=\"5-3-特点和要求\"><a href=\"#5-3-特点和要求\" class=\"headerlink\" title=\"5. 3 特点和要求\"></a>5. 3 特点和要求</h3><p>（ 1 ）一个表最多只能有一个自增长列</p>\n<p>（ 2 ）当需要产生唯一标识符或顺序值时，可设置自增长</p>\n<p>（ 3 ）自增长列约束的列必须是键列（主键列，唯一键列）</p>\n<p>（ 4 ）自增约束的列的数据类型必须是整数类型</p>\n<p>（ 5 ）如果自增列指定了 0 和 null，会在当前最大值的基础上自增；如果自增列手动指定了具体值，直接赋值为具体值。</p>\n<p>错误演示：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011222039578.png\" alt=\"image-20221011222039578\"></p>\n<h3 id=\"5-4-如何指定自增约束\"><a href=\"#5-4-如何指定自增约束\" class=\"headerlink\" title=\"5. 4 如何指定自增约束\"></a>5. 4 如何指定自增约束</h3><p><strong>（ 1 ）建表时</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011222103488.png\" alt=\"image-20221011222103488\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011222111976.png\" alt=\"image-20221011222111976\"></p>\n<p><strong>（ 2 ）建表后</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011222135354.png\" alt=\"image-20221011222135354\"></p>\n<p>例如：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011222144990.png\" alt=\"image-20221011222144990\"></p>\n<h3 id=\"5-5-如何删除自增约束\"><a href=\"#5-5-如何删除自增约束\" class=\"headerlink\" title=\"5. 5 如何删除自增约束\"></a>5. 5 如何删除自增约束</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011222203656.png\" alt=\"image-20221011222203656\"></p>\n<h3 id=\"5-6-MySQL-8-0-新特性—自增变量的持久化\"><a href=\"#5-6-MySQL-8-0-新特性—自增变量的持久化\" class=\"headerlink\" title=\"5. 6 MySQL 8. 0 新特性—自增变量的持久化\"></a>5. 6 MySQL 8. 0 新特性—自增变量的持久化</h3><p>在MySQL 8.0之前，自增主键AUTO_INCREMENT的值如果大于max(primary key)+1，在MySQL重启后，会重置AUTO_INCREMENT&#x3D;max(primary key)+1，这种现象在某些情况下会导致业务主键冲突或者其他难以发现的问题。 下面通过案例来对比不同的版本中自增变量是否持久化。 在MySQL 5.7版本中，测试步骤如下： 创建的数据表中包含自增主键的id字段，语句如下：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011222242537.png\" alt=\"image-20221011222242537\"></p>\n<p>插入 4 个空值，执行如下：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011222256308.png\" alt=\"image-20221011222256308\"></p>\n<p>查询数据表test1中的数据，结果如下：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011222309379.png\" alt=\"image-20221011222309379\"></p>\n<p>删除id为 4 的记录，语句如下：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011222320634.png\" alt=\"image-20221011222320634\"></p>\n<p>再次插入一个空值，语句如下：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011222332568.png\" alt=\"image-20221011222332568\"></p>\n<p>查询此时数据表test1中的数据，结果如下：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011222345648.png\" alt=\"image-20221011222345648\"></p>\n<p>从结果可以看出，虽然删除了id为 4 的记录，但是再次插入空值时，并没有重用被删除的 4 ，而是分配了5 。 删除id为 5 的记录，结果如下：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011222408217.png\" alt=\"image-20221011222408217\"></p>\n<p><strong>重启数据库</strong> ，重新插入一个空值。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011222418172.png\" alt=\"image-20221011222418172\"></p>\n<p>再次查询数据表test1中的数据，结果如下：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011222438787.png\" alt=\"image-20221011222438787\"></p>\n<p>从结果可以看出，新插入的 0 值分配的是 4 ，按照重启前的操作逻辑，此处应该分配 6 。出现上述结果的主要原因是自增主键没有持久化。 在MySQL 5. 7 系统中，对于自增主键的分配规则，是由InnoDB数据字典内部一个<strong>计数器</strong>来决定的，而该计数器只在<strong>内存中维护</strong>，并不会持久化到磁盘中。当数据库重启时，该计数器会被初始化。</p>\n<p>在MySQL 8. 0 版本中，上述测试步骤最后一步的结果如下：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011222607010.png\" alt=\"image-20221011222607010\"></p>\n<p>从结果可以看出，自增变量已经持久化了。</p>\n<p>MySQL 8. 0 将自增主键的计数器持久化到<strong>重做日志</strong>中。每次计数器发生改变，都会将其写入重做日志中。如果数据库重启，InnoDB会根据重做日志中的信息来初始化计数器的内存值。</p>\n<h2 id=\"6-FOREIGN-KEY-约束\"><a href=\"#6-FOREIGN-KEY-约束\" class=\"headerlink\" title=\"6. FOREIGN KEY 约束\"></a>6. FOREIGN KEY 约束</h2><h3 id=\"6-1-作用\"><a href=\"#6-1-作用\" class=\"headerlink\" title=\"6. 1 作用\"></a>6. 1 作用</h3><p>限定某个表的某个字段的引用完整性。</p>\n<p>比如：员工表的员工所在部门的选择，必须在部门表能找到对应的部分。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011223107575.png\" alt=\"image-20221011223107575\"></p>\n<h3 id=\"6-2-关键字\"><a href=\"#6-2-关键字\" class=\"headerlink\" title=\"6. 2 关键字\"></a>6. 2 关键字</h3><p>FOREIGN KEY</p>\n<h3 id=\"6-3-主表和从表-父表和子表\"><a href=\"#6-3-主表和从表-父表和子表\" class=\"headerlink\" title=\"6. 3 主表和从表&#x2F;父表和子表\"></a>6. 3 主表和从表&#x2F;父表和子表</h3><p>主表（父表）：被引用的表，被参考的表</p>\n<p>从表（子表）：引用别人的表，参考别人的表</p>\n<p>例如：员工表的员工所在部门这个字段的值要参考部门表：部门表是主表，员工表是从表。</p>\n<p>例如：学生表、课程表、选课表：选课表的学生和课程要分别参考学生表和课程表，学生表和课程表是主表，选课表是从表。</p>\n<h3 id=\"6-4-特点\"><a href=\"#6-4-特点\" class=\"headerlink\" title=\"6. 4 特点\"></a>6. 4 特点</h3><p>（ 1 ）从表的外键列，必须引用&#x2F;参考主表的主键或唯一约束的列为什么？因为被依赖&#x2F;被参考的值必须是唯一的</p>\n<p>（ 2 ）在创建外键约束时，如果不给外键约束命名， <strong>默认名不是列名，而是自动产生一个外键名</strong> （例如student_ibfk_1;），也可以指定外键约束名。</p>\n<p>（ 3 ）创建(CREATE)表时就指定外键约束的话，先创建主表，再创建从表</p>\n<p>（ 4 ）删表时，先删从表（或先删除外键约束），再删除主表</p>\n<p>（ 5 ）当主表的记录被从表参照时，主表的记录将不允许删除，如果要删除数据，需要先删除从表中依赖该记录的数据，然后才可以删除主表的数据</p>\n<p>（ 6 ）在“从表”中指定外键约束，并且一个表可以建立多个外键约束</p>\n<p>（ 7 ）从表的外键列与主表被参照的列名字可以不相同，但是数据类型必须一样，逻辑意义一致。如果类型不一样，创建子表时，就会出现错误“ERROR 1005 (HY000): Can’t create</p>\n<p>table’database.tablename’(errno: 150)”。</p>\n<p>例如：都是表示部门编号，都是int类型。</p>\n<p>（ 8 ） <strong>当创建外键约束时，系统默认会在所在的列上建立对应的普通索引 。</strong>但是索引名是外键的约束名。（根据外键查询效率很高）</p>\n<p>（ 9 ）删除外键约束后，必须<strong>手动</strong>删除对应的索引</p>\n<h3 id=\"6-5-添加外键约束\"><a href=\"#6-5-添加外键约束\" class=\"headerlink\" title=\"6. 5 添加外键约束\"></a>6. 5 添加外键约束</h3><p>（ 1 ）建表时</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011223340182.png\" alt=\"image-20221011223340182\"></p>\n<p>（ 2 ）建表后</p>\n<p>一般情况下，表与表的关联都是提前设计好了的，因此，会在创建表的时候就把外键约束定义好。不过，如果需要修改表的设计（比如添加新的字段，增加新的关联关系），但没有预先定义外键约束，那么，就要用修改表的方式来补充定义。</p>\n<p>格式：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011223355768.png\" alt=\"image-20221011223355768\"></p>\n<p>举例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011223410154.png\" alt=\"image-20221011223410154\"></p>\n<p>举例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011223445149.png\" alt=\"image-20221011223445149\"></p>\n<h3 id=\"6-6-演示问题\"><a href=\"#6-6-演示问题\" class=\"headerlink\" title=\"6. 6 演示问题\"></a>6. 6 演示问题</h3><p>（ 1 ）失败：不是键列</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011223510408.png\" alt=\"image-20221011223510408\"></p>\n<p>（ 2 ）失败：数据类型不一致</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011223518033.png\" alt=\"image-20221011223518033\"></p>\n<p>（ 3 ）成功，两个表字段名一样</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011223530814.png\" alt=\"image-20221011223530814\"></p>\n<p>（ 4 ）添加、删除、修改问题</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011223559974.png\" alt=\"image-20221011223559974\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011223623781.png\" alt=\"image-20221011223623781\"></p>\n<p>总结：约束关系是针对双方的</p>\n<ul>\n<li><p>添加了外键约束后，主表的修改和删除数据受约束</p>\n</li>\n<li><p>添加了外键约束后，从表的添加和修改数据受约束</p>\n</li>\n<li><p>在从表上建立外键，要求主表必须存在</p>\n</li>\n<li><p>删除主表时，要求从表从表先删除，或将从表中外键引用该主表的关系先删除</p>\n</li>\n</ul>\n<h3 id=\"6-7-约束等级\"><a href=\"#6-7-约束等级\" class=\"headerlink\" title=\"6. 7 约束等级\"></a>6. 7 约束等级</h3><ul>\n<li><p><code>Cascade方式</code>：在父表上update&#x2F;delete记录时，同步update&#x2F;delete掉子表的匹配记录</p>\n</li>\n<li><p><code>Set null方式</code>：在父表上update&#x2F;delete记录时，将子表上匹配记录的列设为null，但是要注意子表的外键列不能为not null</p>\n</li>\n<li><p><code>No action方式</code>：如果子表中有匹配的记录，则不允许对父表对应候选键进行update&#x2F;delete操作</p>\n</li>\n<li><p><code>Restrict方式</code>：同no action， 都是立即检查外键约束</p>\n</li>\n<li><p><code>Set default方式</code>（在可视化工具SQLyog中可能显示空白）：父表有变更时，子表将外键列设置成一个默认的值，但Innodb不能识别</p>\n</li>\n</ul>\n<p>如果没有指定等级，就相当于Restrict方式。</p>\n<p>对于外键约束，最好是采用: <strong>ON UPDATE CASCADE ON DELETE RESTRICT</strong> 的方式。</p>\n<p>（ 1 ）演示 1 ：on update cascade on delete set null</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011224154848.png\" alt=\"image-20221011224154848\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011224206554.png\" alt=\"image-20221011224206554\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011224219683.png\" alt=\"image-20221011224219683\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011224231791.png\" alt=\"image-20221011224231791\"></p>\n<p>（ 2 ）演示 2 ：on update set null on delete cascade</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011224327556.png\" alt=\"image-20221011224327556\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011224354101.png\" alt=\"image-20221011224354101\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011224404696.png\" alt=\"image-20221011224404696\"></p>\n<p>（ 3 ）演示：on update cascade on delete cascade</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011224430209.png\" alt=\"image-20221011224430209\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011224443176.png\" alt=\"image-20221011224443176\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011224455388.png\" alt=\"image-20221011224455388\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011224506604.png\" alt=\"image-20221011224506604\"></p>\n<h3 id=\"6-8-删除外键约束\"><a href=\"#6-8-删除外键约束\" class=\"headerlink\" title=\"6. 8 删除外键约束\"></a>6. 8 删除外键约束</h3><p>流程如下：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011224540122.png\" alt=\"image-20221011224540122\"></p>\n<p>举例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011224550248.png\" alt=\"image-20221011224550248\"></p>\n<h3 id=\"6-9-开发场景\"><a href=\"#6-9-开发场景\" class=\"headerlink\" title=\"6. 9 开发场景\"></a>6. 9 开发场景</h3><ul>\n<li><p>问题 1 ：如果两个表之间有关系（一对一、一对多），比如：员工表和部门表（一对多），它们之间是否一定要建外键约束？</p>\n</li>\n<li><ul>\n<li>答：不是的</li>\n</ul>\n</li>\n<li><p>问题 2 ：建和不建外键约束有什么区别？</p>\n</li>\n<li><ul>\n<li>答：建外键约束，你的操作（创建表、删除表、添加、修改、删除）会受到限制，从语法层面受到限制。例如：在员工表中不可能添加一个员工信息，它的部门的值在部门表中找不到。</li>\n</ul>\n</li>\n</ul>\n<p>不建外键约束，你的操作（创建表、删除表、添加、修改、删除）不受限制，要保证数据的<strong>引用完整性</strong>，只能依靠<strong>程序员的自觉</strong>，或者是<strong>在Java程序中进行限定</strong>。例如：在员工表中，可以添加一个员工的信息，它的部门指定为一个完全不存在的部门。</p>\n<ul>\n<li><p>问题 3 ：那么建和不建外键约束和查询有没有关系？</p>\n</li>\n<li><ul>\n<li>答：没有</li>\n</ul>\n</li>\n</ul>\n<p>在 MySQL 里，外键约束是有成本的，需要消耗系统资源。对于大并发的 SQL 操作，有可能会不适合。比如大型网站的中央数据库，可能会<strong>因为外键约束的系统开销而变得非常慢</strong>。所以， MySQL 允许你不使用系统自带的外键约束，在<strong>应用层面</strong>完成检查数据一致性的逻辑。也就是说，即使你不用外键约束，也要想办法通过应用层面的附加逻辑，来实现外键约束的功能，确保数据的一致性。</p>\n<h3 id=\"6-10-阿里开发规范\"><a href=\"#6-10-阿里开发规范\" class=\"headerlink\" title=\"6. 10 阿里开发规范\"></a>6. 10 阿里开发规范</h3><p>【<strong>强制</strong>】不得使用外键与级联，一切外键概念必须在应用层解决。</p>\n<p>说明：（概念解释）学生表中的 student_id 是主键，那么成绩表中的 student_id 则为外键。如果更新学生表中的 student_id，同时触发成绩表中的 student_id 更新，即为级联更新。外键与级联更新适用于<strong>单机低并发</strong>，不适合<strong>分布式、高并发集群</strong>；级联更新是强阻塞，存在数据库<strong>更新风暴</strong>的风险；外键影响数据库的插入速度。</p>\n<h2 id=\"7-CHECK-约束\"><a href=\"#7-CHECK-约束\" class=\"headerlink\" title=\"7. CHECK 约束\"></a>7. CHECK 约束</h2><h3 id=\"7-1-作用\"><a href=\"#7-1-作用\" class=\"headerlink\" title=\"7. 1 作用\"></a>7. 1 作用</h3><p>检查某个字段的值是否符号xx要求，一般指的是值的范围</p>\n<h3 id=\"2-、关键字\"><a href=\"#2-、关键字\" class=\"headerlink\" title=\"2 、关键字\"></a>2 、关键字</h3><p>CHECK</p>\n<h3 id=\"3-、说明：MySQL-5-7-不支持\"><a href=\"#3-、说明：MySQL-5-7-不支持\" class=\"headerlink\" title=\"3 、说明：MySQL 5. 7 不支持\"></a>3 、说明：MySQL 5. 7 不支持</h3><p>MySQL5.7 可以使用check约束，但check约束对数据验证没有任何作用。添加数据时，没有任何错误或警告</p>\n<p>但是 <strong>MySQL 8.0中可以使用check约束了</strong> 。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011224931410.png\" alt=\"image-20221011224931410\"></p>\n<ul>\n<li>再举例</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011224945706.png\" alt=\"image-20221011224945706\"></p>\n<ul>\n<li>再举例</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011224957741.png\" alt=\"image-20221011224957741\"></p>\n<ul>\n<li>再举例</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011225010423.png\" alt=\"image-20221011225010423\"></p>\n<h2 id=\"8-DEFAULT约束\"><a href=\"#8-DEFAULT约束\" class=\"headerlink\" title=\"8. DEFAULT约束\"></a>8. DEFAULT约束</h2><h3 id=\"8-1-作用\"><a href=\"#8-1-作用\" class=\"headerlink\" title=\"8. 1 作用\"></a>8. 1 作用</h3><p>给某个字段&#x2F;某列指定默认值，一旦设置默认值，在插入数据时，如果此字段没有显式赋值，则赋值为默认值。</p>\n<h3 id=\"8-2-关键字\"><a href=\"#8-2-关键字\" class=\"headerlink\" title=\"8. 2 关键字\"></a>8. 2 关键字</h3><p>DEFAULT</p>\n<h3 id=\"8-3-如何给字段加默认值\"><a href=\"#8-3-如何给字段加默认值\" class=\"headerlink\" title=\"8. 3 如何给字段加默认值\"></a>8. 3 如何给字段加默认值</h3><p>（ 1 ）建表时</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011225057483.png\" alt=\"image-20221011225057483\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011225121762.png\" alt=\"image-20221011225121762\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011225131573.png\" alt=\"image-20221011225131573\"></p>\n<p>再举例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011225146288.png\" alt=\"image-20221011225146288\"></p>\n<p>（ 2 ）建表后</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011225307691.png\" alt=\"image-20221011225307691\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011225319536.png\" alt=\"image-20221011225319536\"></p>\n<h3 id=\"8-4-如何删除默认值约束\"><a href=\"#8-4-如何删除默认值约束\" class=\"headerlink\" title=\"8. 4 如何删除默认值约束\"></a>8. 4 如何删除默认值约束</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011225334251.png\" alt=\"image-20221011225334251\"></p>\n<h2 id=\"9-面试\"><a href=\"#9-面试\" class=\"headerlink\" title=\"9. 面试\"></a>9. 面试</h2><ul>\n<li><p>面试 1 、为什么建表时，加 not null default ‘’ 或 default 0</p>\n</li>\n<li><ul>\n<li>答：不想让表中出现null值。</li>\n</ul>\n</li>\n<li><p>面试 2 、为什么不想要 null 的值</p>\n</li>\n<li><ul>\n<li>答:（ 1 ）不好比较。null是一种特殊值，比较时只能用专门的is null 和 is not null来比较。碰到运算符，通常返回null。</li>\n<li>（ 2 ）效率不高。影响提高索引效果。因此，我们往往在建表时 not null default ‘’ 或 default 0</li>\n</ul>\n</li>\n<li><p>面试 3 、带AUTO_INCREMENT约束的字段值是从 1 开始的吗？ </p>\n</li>\n<li><ul>\n<li>在MySQL中，默认AUTO_INCREMENT的初始值是 1 ，每新增一条记录，字段值自动加 1 。设置自增属性（AUTO_INCREMENT）的时候，还可以指定第一条插入记录的自增字段的值，这样新插入的记录的自增字段值从初始值开始递增，如在表中插入第一条记录，同时指定id值为 5 ，则以后插入的记录的id值就会从 6 开始往上增加。添加主键约束时，往往需要设置字段自动增加属性。</li>\n</ul>\n</li>\n<li><p>面试 4 、并不是每个表都可以任意选择存储引擎？ </p>\n</li>\n<li><ul>\n<li>外键约束（FOREIGN KEY）不能跨引擎使用。MySQL支持多种存储引擎，每一个表都可以指定一个不同的存储引擎，需要注意的是：外键约束是用来保证数据的参照完整性的，如果表之间需要关联外键，却指定了不同的存储引擎，那么这些表之间是不能创建外键约束的。所以说，存储引擎的选择也不完全是随意的。</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"第-14-章-视图\"><a href=\"#第-14-章-视图\" class=\"headerlink\" title=\"第 14 章_视图\"></a>第 14 章_视图</h1><h2 id=\"1-常见的数据库对象\"><a href=\"#1-常见的数据库对象\" class=\"headerlink\" title=\"1. 常见的数据库对象\"></a>1. 常见的数据库对象</h2><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011225750890.png\" alt=\"image-20221011225750890\"></p>\n<h2 id=\"2-视图概述\"><a href=\"#2-视图概述\" class=\"headerlink\" title=\"2. 视图概述\"></a>2. 视图概述</h2><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011225809437.png\" alt=\"image-20221011225809437\"></p>\n<h3 id=\"2-1-为什么使用视图？\"><a href=\"#2-1-为什么使用视图？\" class=\"headerlink\" title=\"2. 1 为什么使用视图？\"></a>2. 1 为什么使用视图？</h3><p>视图一方面可以帮我们使用表的一部分而不是所有的表，另一方面也可以针对不同的用户制定不同的查询视图。比如，针对一个公司的销售人员，我们只想给他看部分数据，而某些特殊的数据，比如采购的价格，则不会提供给他。再比如，人员薪酬是个敏感的字段，那么只给某个级别以上的人员开放，其他人的查询视图中则不提供这个字段。</p>\n<p>刚才讲的只是视图的一个使用场景，实际上视图还有很多作用。最后，我们总结视图的优点。</p>\n<h3 id=\"2-2-视图的理解\"><a href=\"#2-2-视图的理解\" class=\"headerlink\" title=\"2. 2 视图的理解\"></a>2. 2 视图的理解</h3><ul>\n<li>视图是一种<strong>虚拟表</strong>，本身是<strong>不具有数据</strong>的，占用很少的内存空间，它是 SQL 中的一个重要概念。</li>\n<li><strong>视图建立在已有表的基础上</strong> , 视图赖以建立的这些表称为 <strong>基表</strong> 。</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221011230107446.png\" alt=\"image-20221011230107446\"></p>\n<ul>\n<li><p>视图的创建和删除只影响视图本身，不影响对应的基表。但是当对视图中的数据进行增加、删除和修改操作时，数据表中的数据会相应地发生变化，反之亦然。</p>\n</li>\n<li><p>向视图提供数据内容的语句为 SELECT 语句, 可以将视图理解为 <strong>存储起来的 SELECT 语句</strong></p>\n<ul>\n<li>在数据库中，视图不会保存数据，数据真正保存在数据表中。当对视图中的数据进行增加、删除和修改操作时，数据表中的数据会相应地发生变化；反之亦然。</li>\n</ul>\n</li>\n<li><p>视图，是向用户提供基表数据的另一种表现形式。通常情况下，小型项目的数据库可以不使用视图，但是在大型项目中，以及数据表比较复杂的情况下，视图的价值就凸显出来了，它可以帮助我们把经常查询的结果集放到虚拟表中，提升使用效率。理解和使用起来都非常方便。</p>\n</li>\n</ul>\n<h2 id=\"3-创建视图\"><a href=\"#3-创建视图\" class=\"headerlink\" title=\"3. 创建视图\"></a>3. 创建视图</h2><ul>\n<li><strong>在 CREATE VIEW 语句中嵌入子查询</strong></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012115939888.png\" alt=\"image-20221012115939888\"></p>\n<ul>\n<li>精简版</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012115954140.png\" alt=\"image-20221012115954140\"></p>\n<h3 id=\"3-1-创建单表视图\"><a href=\"#3-1-创建单表视图\" class=\"headerlink\" title=\"3. 1 创建单表视图\"></a>3. 1 创建单表视图</h3><p>举例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012120019152.png\" alt=\"image-20221012120019152\"></p>\n<p>查询视图：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012120036730.png\" alt=\"image-20221012120036730\"></p>\n<p>举例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012120048112.png\" alt=\"image-20221012120048112\"></p>\n<p>举例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012120100775.png\" alt=\"image-20221012120100775\"></p>\n<p>说明 1 ：实际上就是我们在 SQL 查询语句的基础上封装了视图 VIEW，这样就会基于 SQL 语句的结果集形成一张虚拟表。</p>\n<p>说明 2 ：在创建视图时，没有在视图名后面指定字段列表，则视图中字段列表默认和SELECT语句中的字段列表一致。如果SELECT语句中给字段取了别名，那么视图中的字段名和别名相同。</p>\n<h3 id=\"3-2-创建多表联合视图\"><a href=\"#3-2-创建多表联合视图\" class=\"headerlink\" title=\"3. 2 创建多表联合视图\"></a>3. 2 创建多表联合视图</h3><p>举例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012120125261.png\" alt=\"image-20221012120125261\"></p>\n<ul>\n<li><strong>利用视图对数据进行格式化</strong></li>\n</ul>\n<p>我们经常需要输出某个格式的内容，比如我们想输出员工姓名和对应的部门名，对应格式为emp_name(department_name)，就可以使用视图来完成数据格式化的操作：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012120155482.png\" alt=\"image-20221012120155482\"></p>\n<h3 id=\"3-3-基于视图创建视图\"><a href=\"#3-3-基于视图创建视图\" class=\"headerlink\" title=\"3. 3 基于视图创建视图\"></a>3. 3 基于视图创建视图</h3><p>当我们创建好一张视图之后，还可以在它的基础上继续创建视图。</p>\n<p>举例：联合“emp_dept”视图和“emp_year_salary”视图查询员工姓名、部门名称、年薪信息创建“emp_dept_ysalary”视图。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012120222927.png\" alt=\"image-20221012120222927\"></p>\n<h2 id=\"4-查看视图\"><a href=\"#4-查看视图\" class=\"headerlink\" title=\"4. 查看视图\"></a>4. 查看视图</h2><p>语法 1 ：查看数据库的表对象、视图对象</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012120241513.png\" alt=\"image-20221012120241513\"></p>\n<p>语法 2 ：查看视图的结构</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012120249642.png\" alt=\"image-20221012120249642\"></p>\n<p>语法 3 ：查看视图的属性信息</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012120301299.png\" alt=\"image-20221012120301299\"></p>\n<p>执行结果显示，注释Comment为VIEW，说明该表为视图，其他的信息为NULL，说明这是一个虚表。</p>\n<p>语法 4 ：查看视图的详细定义信息</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012120312929.png\" alt=\"image-20221012120312929\"></p>\n<h2 id=\"5-更新视图的数据\"><a href=\"#5-更新视图的数据\" class=\"headerlink\" title=\"5. 更新视图的数据\"></a>5. 更新视图的数据</h2><h3 id=\"5-1-一般情况\"><a href=\"#5-1-一般情况\" class=\"headerlink\" title=\"5. 1 一般情况\"></a>5. 1 一般情况</h3><p>MySQL支持使用INSERT、UPDATE和DELETE语句对视图中的数据进行插入、更新和删除操作。当视图中的数据发生变化时，数据表中的数据也会发生变化，反之亦然。</p>\n<p>举例：UPDATE操作</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012120348063.png\" alt=\"image-20221012120348063\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012120355813.png\" alt=\"image-20221012120355813\"></p>\n<p>举例：DELETE操作</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012120407583.png\" alt=\"image-20221012120407583\"></p>\n<h3 id=\"5-2-不可更新的视图\"><a href=\"#5-2-不可更新的视图\" class=\"headerlink\" title=\"5. 2 不可更新的视图\"></a>5. 2 不可更新的视图</h3><p>要使视图可更新，视图中的行和底层基本表中的行之间必须存在<strong>一对一</strong>的关系。另外当视图定义出现如下情况时，视图不支持更新操作：</p>\n<ul>\n<li><p>在定义视图的时候指定了“ALGORITHM &#x3D; TEMPTABLE”，视图将不支持INSERT和DELETE操作；</p>\n</li>\n<li><p>视图中不包含基表中所有被定义为非空又未指定默认值的列，视图将不支持INSERT操作；</p>\n</li>\n<li><p>在定义视图的SELECT语句中使用了<strong>JOIN联合查询</strong>，视图将不支持INSERT和DELETE操作；</p>\n</li>\n<li><p>在定义视图的SELECT语句后的字段列表中使用了<strong>数学表达式</strong>或<strong>子查询</strong>，视图将不支持INSERT，也不支持UPDATE使用了数学表达式、子查询的字段值；</p>\n</li>\n<li><p>在定义视图的SELECT语句后的字段列表中使用<strong>DISTINCT、聚合函数、GROUP BY、HAVING、UNION</strong>等，视图将不支持INSERT、UPDATE、DELETE；</p>\n</li>\n<li><p>在定义视图的SELECT语句中包含了子查询，而子查询中引用了FROM后面的表，视图将不支持INSERT、UPDATE、DELETE；</p>\n</li>\n<li><p>视图定义基于一个<strong>不可更新视图</strong>；</p>\n</li>\n<li><p>常量视图。</p>\n</li>\n</ul>\n<p>举例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012120540652.png\" alt=\"image-20221012120540652\"></p>\n<p>从上面的SQL执行结果可以看出，在定义视图的SELECT语句中使用了JOIN联合查询，视图将不支持更新操作。</p>\n<p>虽然可以更新视图数据，但总的来说，视图作为虚拟表，主要用于方便查询，不建议更新视图的数据。 对视图数据的更改，都是通过对实际数据表里数据的操作来完成的。</p>\n<h2 id=\"6-修改、删除视图\"><a href=\"#6-修改、删除视图\" class=\"headerlink\" title=\"6. 修改、删除视图\"></a>6. 修改、删除视图</h2><h3 id=\"6-1-修改视图\"><a href=\"#6-1-修改视图\" class=\"headerlink\" title=\"6. 1 修改视图\"></a>6. 1 修改视图</h3><p>方式 1 ：使用CREATE OR REPLACE VIEW 子句 修改视图</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012120608705.png\" alt=\"image-20221012120608705\"></p>\n<p>说明：CREATE VIEW 子句中各列的别名应和子查询中各列相对应。</p>\n<p>方式 2 ：ALTER VIEW</p>\n<p>修改视图的语法是：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012120622887.png\" alt=\"image-20221012120622887\"></p>\n<h3 id=\"6-2-删除视图\"><a href=\"#6-2-删除视图\" class=\"headerlink\" title=\"6. 2 删除视图\"></a>6. 2 删除视图</h3><ul>\n<li><p>删除视图只是删除视图的定义，并不会删除基表的数据。</p>\n</li>\n<li><p>删除视图的语法是：</p>\n</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012120645226.png\" alt=\"image-20221012120645226\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012120653781.png\" alt=\"image-20221012120653781\"></p>\n<ul>\n<li>举例：</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012120708812.png\" alt=\"image-20221012120708812\"></p>\n<ul>\n<li>说明：基于视图a、b创建了新的视图c，如果将视图a或者视图b删除，会导致视图c的查询失败。这样的视图c需要手动删除或修改，否则影响使用。</li>\n</ul>\n<h2 id=\"7-总结\"><a href=\"#7-总结\" class=\"headerlink\" title=\"7. 总结\"></a>7. 总结</h2><h3 id=\"7-1-视图优点\"><a href=\"#7-1-视图优点\" class=\"headerlink\" title=\"7. 1 视图优点\"></a>7. 1 视图优点</h3><ol>\n<li><strong>操作简单</strong></li>\n</ol>\n<p>将经常使用的查询操作定义为视图，可以使开发人员不需要关心视图对应的数据表的结构、表与表之间的关联关系，也不需要关心数据表之间的业务逻辑和查询条件，而只需要简单地操作视图即可，极大简化了开发人员对数据库的操作。</p>\n<ol start=\"2\">\n<li><strong>减少数据冗余</strong></li>\n</ol>\n<p>视图跟实际数据表不一样，它存储的是查询语句。所以，在使用的时候，我们要通过定义视图的查询语句来获取结果集。而视图本身不存储数据，不占用数据存储的资源，减少了数据冗余。</p>\n<ol start=\"3\">\n<li><strong>数据安全</strong></li>\n</ol>\n<p>MySQL将用户对数据的<strong>访问限制</strong>在某些数据的结果集上，而这些数据的结果集可以使用视图来实现。用户不必直接查询或操作数据表。这也可以理解为视图具有<strong>隔离性</strong>。视图相当于在用户和实际的数据表之间加了一层虚拟表。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012120911191.png\" alt=\"image-20221012120911191\"></p>\n<p>同时，MySQL可以根据权限将用户对数据的访问限制在某些视图上， <strong>用户不需要查询数据表，可以直接通过视图获取数据表中的信息</strong> 。这在一定程度上保障了数据表中数据的安全性。</p>\n<p><strong>4. 适应灵活多变的需求</strong> 当业务系统的需求发生变化后，如果需要改动数据表的结构，则工作量相对较大，可以使用视图来减少改动的工作量。这种方式在实际工作中使用得比较多。</p>\n<p><strong>5. 能够分解复杂的查询逻辑</strong> 数据库中如果存在复杂的查询逻辑，则可以将问题进行分解，创建多个视图获取数据，再将创建的多个视图结合起来，完成复杂的查询逻辑。</p>\n<h3 id=\"7-2-视图不足\"><a href=\"#7-2-视图不足\" class=\"headerlink\" title=\"7. 2 视图不足\"></a>7. 2 视图不足</h3><p>如果我们在实际数据表的基础上创建了视图，那么， <strong>如果实际数据表的结构变更了，我们就需要及时对相关的视图进行相应的维护</strong> 。特别是嵌套的视图（就是在视图的基础上创建视图），维护会变得比较复杂，可<strong>读性不好</strong>，容易变成系统的潜在隐患。因为创建视图的 SQL 查询可能会对字段重命名，也可能包含复杂的逻辑，这些都会增加维护的成本。</p>\n<p>实际项目中，如果视图过多，会导致数据库维护成本的问题。</p>\n<p>所以，在创建视图的时候，你要结合实际项目需求，综合考虑视图的优点和不足，这样才能正确使用视图，使系统整体达到最优。</p>\n<hr>\n<h1 id=\"第-15-章-存储过程与函数\"><a href=\"#第-15-章-存储过程与函数\" class=\"headerlink\" title=\"第 15 章_存储过程与函数\"></a>第 15 章_存储过程与函数</h1><p>MySQL从 5. 0 版本开始支持存储过程和函数。存储过程和函数能够将复杂的SQL逻辑封装在一起，应用程序无须关注存储过程和函数内部复杂的SQL逻辑，而只需要简单地调用存储过程和函数即可。</p>\n<h2 id=\"1-存储过程概述\"><a href=\"#1-存储过程概述\" class=\"headerlink\" title=\"1. 存储过程概述\"></a>1. 存储过程概述</h2><h3 id=\"1-1-理解\"><a href=\"#1-1-理解\" class=\"headerlink\" title=\"1. 1 理解\"></a>1. 1 理解</h3><p><strong>含义</strong> ：存储过程的英文是 <strong>Stored Procedure</strong>。它的思想很简单，就是一组经过<strong>预先编译</strong>的 SQL 语句的封装。</p>\n<p>执行过程：存储过程预先存储在 MySQL 服务器上，需要执行的时候，客户端只需要向服务器端发出调用存储过程的命令，服务器端就可以把预先存储好的这一系列 SQL 语句全部执行。</p>\n<p><strong>好处</strong> ：</p>\n<p>1 、简化操作，提高了sql语句的重用性，减少了开发程序员的压力</p>\n<p>2 、减少操作过程中的失误，提高效率</p>\n<p>3 、减少网络传输量（客户端不需要把所有的 SQL 语句通过网络发给服务器）</p>\n<p> 4 、减少了 SQL 语句暴露在网上的风险，也提高了数据查询的安全性</p>\n<p><strong>和视图、函数的对比</strong> ：</p>\n<p>它和视图有着同样的优点，清晰、安全，还可以减少网络传输量。不过它和视图不同，视图是<strong>虚拟表</strong>，通常不对底层数据表直接操作，而存储过程是程序化的 SQL，可以<strong>直接操作底层数据表</strong>，相比于面向集合的操作方式，能够实现一些更复杂的数据处理。</p>\n<p>一旦存储过程被创建出来，使用它就像使用函数一样简单，我们直接通过调用存储过程名即可。相较于函数，存储过程是<strong>没有返回值</strong>的。</p>\n<h3 id=\"1-2-分类\"><a href=\"#1-2-分类\" class=\"headerlink\" title=\"1. 2 分类\"></a>1. 2 分类</h3><p>存储过程的参数类型可以是IN、OUT和INOUT。根据这点分类如下：</p>\n<p>1 、没有参数（无参数无返回） </p>\n<p>2 、仅仅带 IN 类型（有参数无返回） </p>\n<p>3 、仅仅带 OUT 类型（无参数有返回）</p>\n<p>4 、既带 IN 又带 OUT（有参数有返回） </p>\n<p>5 、带 INOUT（有参数有返回）</p>\n<p>注意：IN、OUT、INOUT 都可以在一个存储过程中带多个。</p>\n<h2 id=\"2-创建存储过程\"><a href=\"#2-创建存储过程\" class=\"headerlink\" title=\"2. 创建存储过程\"></a>2. 创建存储过程</h2><h3 id=\"2-1-语法分析\"><a href=\"#2-1-语法分析\" class=\"headerlink\" title=\"2. 1 语法分析\"></a>2. 1 语法分析</h3><p>语法：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012121418225.png\" alt=\"image-20221012121418225\"></p>\n<p>类似于Java中的方法：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012121426988.png\" alt=\"image-20221012121426988\"></p>\n<p>说明：</p>\n<p>1 、参数前面的符号的意思</p>\n<ul>\n<li><p><code>IN</code>：当前参数为输入参数，也就是表示入参；</p>\n<p>存储过程只是读取这个参数的值。如果没有定义参数种类，<strong>默认就是 IN</strong>，表示输入参数。</p>\n</li>\n<li><p><code>OUT</code>：当前参数为输出参数，也就是表示出参；</p>\n<p>执行完成之后，调用这个存储过程的客户端或者应用程序就可以读取这个参数返回的值了。</p>\n</li>\n<li><p><code>INOUT</code>：当前参数既可以为输入参数，也可以为输出参数。</p>\n</li>\n</ul>\n<p>2 、形参类型可以是 MySQL数据库中的任意类型。</p>\n<p>3 、<code>characteristics </code>表示创建存储过程时指定的对存储过程的约束条件，其取值信息如下：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012121505546.png\" alt=\"image-20221012121505546\"></p>\n<ul>\n<li><p><code>LANGUAGE SQL</code>：说明存储过程执行体是由SQL语句组成的，当前系统支持的语言为SQL。</p>\n</li>\n<li><p><code>[NOT] DETERMINISTIC</code>：指明存储过程执行的结果是否确定。DETERMINISTIC表示结果是确定的。每次执行存储过程时，相同的输入会得到相同的输出。NOT DETERMINISTIC表示结果是不确定的，相同的输入可能得到不同的输出。如果没有指定任意一个值，默认为NOT DETERMINISTIC。</p>\n</li>\n<li><p><code>&#123; CONTAINS SQL | NO SQL | READS SQL DATA | MODIFIES SQL DATA &#125;</code>：指明子程序使用SQL语句的限制。</p>\n<ul>\n<li>CONTAINS SQL表示当前存储过程的子程序包含SQL语句，但是并不包含读写数据的SQL语句；</li>\n<li>NO SQL表示当前存储过程的子程序中不包含任何SQL语句；</li>\n<li>READS SQL DATA表示当前存储过程的子程序中包含读数据的SQL语句；</li>\n<li>MODIFIES SQL DATA表示当前存储过程的子程序中包含写数据的SQL语句。</li>\n<li>默认情况下，系统会指定为CONTAINS SQL。</li>\n</ul>\n</li>\n<li><p><code>SQL SECURITY &#123; DEFINER | INVOKER &#125;</code>：执行当前存储过程的权限，即指明哪些用户能够执行当前存储过程。</p>\n<ul>\n<li><code>DEFINER</code>表示只有当前存储过程的创建者或者定义者才能执行当前存储过程；</li>\n<li><code>INVOKER</code>表示拥有当前存储过程的访问权限的用户能够执行当前存储过程。</li>\n<li>如果没有设置相关的值，则MySQL默认指定值为DEFINER。</li>\n<li><code>COMMENT &#39;string&#39;</code>：注释信息，可以用来描述存储过程。</li>\n</ul>\n</li>\n</ul>\n<p>4 、存储过程体中可以有多条 SQL 语句，如果仅仅一条SQL 语句，则可以省略 BEGIN 和 END编写存储过程并不是一件简单的事情，可能存储过程中需要复杂的 SQL 语句。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012121658209.png\" alt=\"image-20221012121658209\"></p>\n<p>5 、需要设置新的结束标记</p>\n<p>因为MySQL默认的语句结束符号为分号‘;’。为了避免与存储过程中SQL语句结束符相冲突，需要使用DELIMITER改变存储过程的结束符。</p>\n<p>比如：“DELIMITER &#x2F;&#x2F;”语句的作用是将MySQL的结束符设置为&#x2F;&#x2F;，并以“END &#x2F;&#x2F;”结束存储过程。存储过程定义完毕之后再使用“DELIMITER ;”恢复默认结束符。DELIMITER也可以指定其他符号作为结束符。</p>\n<p>当使用DELIMITER命令时，应该避免使用反斜杠（‘\\’）字符，因为反斜线是MySQL的转义字符。</p>\n<p>示例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012121717905.png\" alt=\"image-20221012121717905\"></p>\n<h3 id=\"2-2-代码举例\"><a href=\"#2-2-代码举例\" class=\"headerlink\" title=\"2. 2 代码举例\"></a>2. 2 代码举例</h3><p>举例 1 ：创建存储过程select_all_data()，查看 emps 表的所有数据</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012121839471.png\" alt=\"image-20221012121839471\"></p>\n<p>举例 2 ：创建存储过程avg_employee_salary()，返回所有员工的平均工资</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012121856916.png\" alt=\"image-20221012121856916\"></p>\n<p>举例 3 ：创建存储过程show_max_salary()，用来查看“emps”表的最高薪资值。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012121923644.png\" alt=\"image-20221012121923644\"></p>\n<p>举例 4 ：创建存储过程show_min_salary()，查看“emps”表的最低薪资值。并将最低薪资通过OUT参数“ms”输出</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012121938575.png\" alt=\"image-20221012121938575\"></p>\n<p>举例 5 ：创建存储过程show_someone_salary()，查看“emps”表的某个员工的薪资，并用IN参数empname输入员工姓名。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012121956981.png\" alt=\"image-20221012121956981\"></p>\n<p>举例 6 ：创建存储过程show_someone_salary2()，查看“emps”表的某个员工的薪资，并用IN参数empname输入员工姓名，用OUT参数empsalary输出员工薪资。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012122016319.png\" alt=\"image-20221012122016319\"></p>\n<p>举例 7 ：创建存储过程show_mgr_name()，查询某个员工领导的姓名，并用INOUT参数“empname”输入员工姓名，输出领导的姓名。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012122039662.png\" alt=\"image-20221012122039662\"></p>\n<h2 id=\"3-调用存储过程\"><a href=\"#3-调用存储过程\" class=\"headerlink\" title=\"3. 调用存储过程\"></a>3. 调用存储过程</h2><h3 id=\"3-1-调用格式\"><a href=\"#3-1-调用格式\" class=\"headerlink\" title=\"3. 1 调用格式\"></a>3. 1 调用格式</h3><p>存储过程有多种调用方法。存储过程必须使用CALL语句调用，并且存储过程和数据库相关，如果要执行其他数据库中的存储过程，需要指定数据库名称，例如CALL dbname.procname。</p>\n<p><strong>格式</strong>：</p>\n<p>1 、调用in模式的参数：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012122110166.png\" alt=\"image-20221012122110166\"></p>\n<p>2 、调用out模式的参数：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012122118568.png\" alt=\"image-20221012122118568\"></p>\n<p>3 、调用inout模式的参数：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012122128414.png\" alt=\"image-20221012122128414\"></p>\n<h3 id=\"3-2-代码举例\"><a href=\"#3-2-代码举例\" class=\"headerlink\" title=\"3. 2 代码举例\"></a>3. 2 代码举例</h3><p><strong>举例 1</strong> ：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012122203536.png\" alt=\"image-20221012122203536\"></p>\n<p>调用存储过程：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012122213411.png\" alt=\"image-20221012122213411\"></p>\n<p>查看返回结果：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012122223227.png\" alt=\"image-20221012122223227\"></p>\n<p>该存储过程返回了指定 s_id&#x3D;101 的水果商提供的水果种类，返回值存储在num变量中，使用SELECT查看，返回结果为 3 。</p>\n<p><strong>举例 2 ：</strong> 创建存储过程，实现累加运算，计算 1+2+…+n 等于多少。具体的代码如下：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012122245502.png\" alt=\"image-20221012122245502\"></p>\n<p>如果你用的是 Navicat 工具，那么在编写存储过程的时候，Navicat 会自动设置 DELIMITER 为其他符号，我们不需要再进行 DELIMITER 的操作。</p>\n<p>直接使用 **CALL add_num(50);**即可。这里我传入的参数为 50 ，也就是统计 1+2+…+50 的积累之和。</p>\n<h3 id=\"3-3-如何调试\"><a href=\"#3-3-如何调试\" class=\"headerlink\" title=\"3. 3 如何调试\"></a>3. 3 如何调试</h3><p>在 MySQL 中，存储过程不像普通的编程语言（比如 VC++、Java 等）那样有专门的集成开发环境。因此，你可以通过 SELECT 语句，把程序执行的中间结果查询出来，来调试一个 SQL 语句的正确性。调试成功之后，把 SELECT 语句后移到下一个 SQL 语句之后，再调试下一个 SQL 语句。这样<strong>逐步推进</strong>，就可以完成对存储过程中所有操作的调试了。当然，你也可以把存储过程中的 SQL 语句复制出来，逐段单独调试。</p>\n<h2 id=\"4-存储函数的使用\"><a href=\"#4-存储函数的使用\" class=\"headerlink\" title=\"4. 存储函数的使用\"></a>4. 存储函数的使用</h2><p>前面学习了很多函数，使用这些函数可以对数据进行的各种处理操作，极大地提高用户对数据库的管理效率。MySQL支持自定义函数，定义好之后，调用方式与调用MySQL预定义的系统函数一样。</p>\n<h3 id=\"4-1-语法分析\"><a href=\"#4-1-语法分析\" class=\"headerlink\" title=\"4. 1 语法分析\"></a>4. 1 语法分析</h3><p>学过的函数：LENGTH、SUBSTR、CONCAT等</p>\n<p>语法格式：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012122406919.png\" alt=\"image-20221012122406919\"></p>\n<p>说明：</p>\n<p>1 、参数列表：指定参数为IN、OUT或INOUT只对PROCEDURE是合法的，FUNCTION中总是默认为IN参数。</p>\n<p>2 、RETURNS type 语句表示函数返回数据的类型；</p>\n<p>RETURNS子句只能对FUNCTION做指定，对函数而言这是<strong>强制</strong>的。它用来指定函数的返回类型，而且函数体必须包含一个<strong>RETURN value</strong>句。</p>\n<p>3 、characteristic 创建函数时指定的对函数的约束。取值与创建存储过程时相同，这里不再赘述。</p>\n<p>4 、函数体也可以用BEGIN…END来表示SQL代码的开始和结束。如果函数体只有一条语句，也可以省略BEGIN…END。</p>\n<h3 id=\"4-2-调用存储函数\"><a href=\"#4-2-调用存储函数\" class=\"headerlink\" title=\"4. 2 调用存储函数\"></a>4. 2 调用存储函数</h3><p>在MySQL中，存储函数的使用方法与MySQL内部函数的使用方法是一样的。换言之，用户自己定义的存储函数与MySQL内部函数是一个性质的。区别在于，存储函数是<strong>用户自己定义</strong>的，而内部函数是MySQL的<strong>开发者定义</strong>的。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012122518510.png\" alt=\"image-20221012122518510\"></p>\n<h3 id=\"4-3-代码举例\"><a href=\"#4-3-代码举例\" class=\"headerlink\" title=\"4. 3 代码举例\"></a>4. 3 代码举例</h3><p><strong>举例 1</strong> ：</p>\n<p>创建存储函数，名称为email_by_name()，参数定义为空，该函数查询Abel的email，并返回，数据类型为字符串型。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012122549601.png\" alt=\"image-20221012122549601\"></p>\n<p>调用：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012122601177.png\" alt=\"image-20221012122601177\"></p>\n<p><strong>举例 2</strong> ：</p>\n<p>创建存储函数，名称为email_by_id()，参数传入emp_id，该函数查询emp_id的email，并返回，数据类型为字符串型。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012122620452.png\" alt=\"image-20221012122620452\"></p>\n<p>调用：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012122633956.png\" alt=\"image-20221012122633956\"></p>\n<p>**举例 3 **：</p>\n<p>创建存储函数count_by_id()，参数传入dept_id，该函数查询dept_id部门的员工人数，并返回，数据类型为整型。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012122711726.png\" alt=\"image-20221012122711726\"></p>\n<p>调用：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012122728241.png\" alt=\"image-20221012122728241\"></p>\n<p><strong>注意</strong>：</p>\n<p>若在创建存储函数中报错“<code>you might want to use the less safe log_bin_trust_function_creators variable</code>”，有两种处理方法：</p>\n<ul>\n<li>方式 1 ：加上必要的函数特性“[NOT]  DETERMINISTIC”和“{CONTAINS SQL | NO SQL | READS SQL DATA |MODIFIES SQL DATA}”</li>\n<li>方式 2 ：</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012122822600.png\" alt=\"image-20221012122822600\"></p>\n<h3 id=\"4-4-对比存储函数和存储过程\"><a href=\"#4-4-对比存储函数和存储过程\" class=\"headerlink\" title=\"4. 4 对比存储函数和存储过程\"></a>4. 4 对比存储函数和存储过程</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012122846438.png\" alt=\"image-20221012122846438\"></p>\n<p>此外， <strong>存储函数可以放在查询语句中使用，存储过程不行</strong> 。反之，存储过程的功能更加强大，包括能够执行对表的操作（比如创建表，删除表等）和事务操作，这些功能是存储函数不具备的。</p>\n<h2 id=\"5-存储过程和函数的查看、修改、删除\"><a href=\"#5-存储过程和函数的查看、修改、删除\" class=\"headerlink\" title=\"5. 存储过程和函数的查看、修改、删除\"></a>5. 存储过程和函数的查看、修改、删除</h2><h3 id=\"5-1-查看\"><a href=\"#5-1-查看\" class=\"headerlink\" title=\"5. 1 查看\"></a>5. 1 查看</h3><p>创建完之后，怎么知道我们创建的存储过程、存储函数是否成功了呢？</p>\n<p>MySQL存储了存储过程和函数的状态信息，用户可以使用SHOW STATUS语句或SHOW CREATE语句来查看，也可直接从系统的information_schema数据库中查询。这里介绍 3 种方法。</p>\n<p><strong>1. 使用SHOW CREATE语句查看存储过程和函数的创建信息</strong></p>\n<p>基本语法结构如下：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012122932272.png\" alt=\"image-20221012122932272\"></p>\n<p>举例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012122946661.png\" alt=\"image-20221012122946661\"></p>\n<p><strong>2. 使用SHOW STATUS语句查看存储过程和函数的状态信息</strong></p>\n<p>基本语法结构如下：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012123006050.png\" alt=\"image-20221012123006050\"></p>\n<p>这个语句返回子程序的特征，如数据库、名字、类型、创建者及创建和修改日期。</p>\n<p>[LIKE ‘pattern’]：匹配存储过程或函数的名称，可以省略。当省略不写时，会列出MySQL数据库中存在的所有存储过程或函数的信息。 举例：SHOW STATUS语句示例，代码如下：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012123034142.png\" alt=\"image-20221012123034142\"></p>\n<p><strong>3. 从information_schema.Routines表中查看存储过程和函数的信息</strong></p>\n<p>MySQL中存储过程和函数的信息存储在information_schema数据库下的Routines表中。可以通过查询该表的记录来查询存储过程和函数的信息。其基本语法形式如下：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012123057045.png\" alt=\"image-20221012123057045\"></p>\n<p>说明：如果在MySQL数据库中存在存储过程和函数名称相同的情况，最好指定ROUTINE_TYPE查询条件来指明查询的是存储过程还是函数。</p>\n<p>举例：从Routines表中查询名称为CountProc的存储函数的信息，代码如下：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012123108320.png\" alt=\"image-20221012123108320\"></p>\n<h3 id=\"5-2-修改\"><a href=\"#5-2-修改\" class=\"headerlink\" title=\"5. 2 修改\"></a>5. 2 修改</h3><p>修改存储过程或函数，不影响存储过程或函数功能，只是修改相关特性。使用ALTER语句实现。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012123126198.png\" alt=\"image-20221012123126198\"></p>\n<p>其中，characteristic指定存储过程或函数的特性，其取值信息与创建存储过程、函数时的取值信息略有不同。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012123137843.png\" alt=\"image-20221012123137843\"></p>\n<ul>\n<li><p><code>CONTAINS SQL</code>，表示子程序包含SQL语句，但不包含读或写数据的语句。</p>\n</li>\n<li><p><code>NO SQL</code>，表示子程序中不包含SQL语句。</p>\n</li>\n<li><p><code>READS SQL DATA</code>，表示子程序中包含读数据的语句。</p>\n</li>\n<li><p><code>MODIFIES SQL DATA</code>，表示子程序中包含写数据的语句。</p>\n</li>\n<li><p><code>SQL SECURITY &#123; DEFINER | INVOKER &#125;</code>，指明谁有权限来执行。</p>\n<ul>\n<li><code>DEFINER</code>，表示只有定义者自己才能够执行。</li>\n<li><code>INVOKER</code>，表示调用者可以执行。</li>\n</ul>\n</li>\n<li><p><code>COMMENT &#39;string&#39;</code>，表示注释信息。</p>\n</li>\n</ul>\n<p>修改存储过程使用ALTER PROCEDURE语句，修改存储函数使用ALTER FUNCTION语句。但是，这两个语句的结构是一样的，语句中的所有参数也是一样的。</p>\n<p><strong>举例 1</strong> ：</p>\n<p>修改存储过程CountProc的定义。将读写权限改为MODIFIES SQL DATA，并指明调用者可以执行，代码如下：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012123404592.png\" alt=\"image-20221012123404592\"></p>\n<p>查询修改后的信息：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012123415388.png\" alt=\"image-20221012123415388\"></p>\n<p>结果显示，存储过程修改成功。从查询的结果可以看出，访问数据的权限（SQL_DATA_ ACCESS）已经变成MODIFIES SQL DATA，安全类型（SECURITY_TYPE）已经变成INVOKER。</p>\n<p><strong>举例 2</strong> ：</p>\n<p>修改存储函数CountProc的定义。将读写权限改为READS SQL DATA，并加上注释信息“FIND NAME”，代码如下：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012123442653.png\" alt=\"image-20221012123442653\"></p>\n<p>存储函数修改成功。从查询的结果可以看出，访问数据的权限（SQL_DATA_ACCESS）已经变成READSSQL DATA，函数注释（ROUTINE_COMMENT）已经变成FIND NAME。</p>\n<h3 id=\"5-3-删除\"><a href=\"#5-3-删除\" class=\"headerlink\" title=\"5. 3 删除\"></a>5. 3 删除</h3><p>删除存储过程和函数，可以使用DROP语句，其语法结构如下：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012123504375.png\" alt=\"image-20221012123504375\"></p>\n<p>IF EXISTS：如果程序或函数不存储，它可以防止发生错误，产生一个用SHOW WARNINGS查看的警告。</p>\n<p>举例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221012123517130.png\" alt=\"image-20221012123517130\"></p>\n<h2 id=\"6-关于存储过程使用的争议\"><a href=\"#6-关于存储过程使用的争议\" class=\"headerlink\" title=\"6. 关于存储过程使用的争议\"></a>6. 关于存储过程使用的争议</h2><p>尽管存储过程有诸多优点，但是对于存储过程的使用， <strong>一直都存在着很多争议</strong> ，比如有些公司对于大型项目要求使用存储过程，而有些公司在手册中明确禁止使用存储过程，为什么这些公司对存储过程的使用需求差别这么大呢？</p>\n<h3 id=\"6-1-优点\"><a href=\"#6-1-优点\" class=\"headerlink\" title=\"6. 1 优点\"></a>6. 1 优点</h3><p><strong>1 、存储过程可以一次编译多次使用。</strong> 存储过程只在创建时进行编译，之后的使用都不需要重新编译，这就提升了 SQL 的执行效率。</p>\n<p><strong>2 、可以减少开发工作量。</strong> 将代码<strong>封装</strong>成模块，实际上是编程的核心思想之一，这样可以把复杂的问题拆解成不同的模块，然后模块之间可以<strong>重复使用</strong>，在减少开发工作量的同时，还能保证代码的结构清晰。</p>\n<p><strong>3 、存储过程的安全性强。</strong> 我们在设定存储过程的时候可以<strong>设置对用户的使用权限</strong>，这样就和视图一样具有较强的安全性。</p>\n<p><strong>4 、可以减少网络传输量。</strong> 因为代码封装到存储过程中，每次使用只需要调用存储过程即可，这样就减少了网络传输量。</p>\n<p><strong>5 、良好的封装性。</strong> 在进行相对复杂的数据库操作时，原本需要使用一条一条的 SQL 语句，可能要连接多次数据库才能完成的操作，现在变成了一次存储过程，只需要<strong>连接一次即可</strong>。</p>\n<h3 id=\"6-2-缺点\"><a href=\"#6-2-缺点\" class=\"headerlink\" title=\"6. 2 缺点\"></a>6. 2 缺点</h3><p>基于上面这些优点，不少大公司都要求大型项目使用存储过程，比如微软、IBM 等公司。但是国内的阿里并不推荐开发人员使用存储过程，这是为什么呢？</p>\n<p><strong>阿里开发规范</strong></p>\n<p>【强制】禁止使用存储过程，存储过程难以调试和扩展，更没有移植性。</p>\n<p>存储过程虽然有诸如上面的好处，但缺点也是很明显的。</p>\n<p><strong>1 、可移植性差。</strong> 存储过程不能跨数据库移植，比如在 MySQL、Oracle 和 SQL Server 里编写的存储过程，在换成其他数据库时都需要重新编写。</p>\n<p><strong>2 、调试困难。</strong> 只有少数 DBMS 支持存储过程的调试。对于复杂的存储过程来说，开发和维护都不容易。虽然也有一些第三方工具可以对存储过程进行调试，但要收费。</p>\n<p><strong>3 、存储过程的版本管理很困难。</strong> 比如数据表索引发生变化了，可能会导致存储过程失效。我们在开发软件的时候往往需要进行版本管理，但是存储过程本身没有版本控制，版本迭代更新的时候很麻烦。</p>\n<p><strong>4 、它不适合高并发的场景。</strong> 高并发的场景需要减少数据库的压力，有时数据库会采用分库分表的方式，而且对可扩展性要求很高，在这种情况下，存储过程会变得难以维护，<strong>增加数据库的压力</strong>，显然就不适用了。</p>\n<p><strong>小结：</strong></p>\n<p>存储过程既方便，又有局限性。尽管不同的公司对存储过程的态度不一，但是对于我们开发人员来说，不论怎样，掌握存储过程都是必备的技能之一。</p>\n<hr>\n<h1 id=\"第-16-章-变量、流程控制与游标\"><a href=\"#第-16-章-变量、流程控制与游标\" class=\"headerlink\" title=\"第 16 章_变量、流程控制与游标\"></a>第 16 章_变量、流程控制与游标</h1><h2 id=\"1-变量\"><a href=\"#1-变量\" class=\"headerlink\" title=\"1. 变量\"></a>1. 变量</h2><p>在MySQL数据库的存储过程和函数中，可以使用变量来存储查询或计算的中间结果数据，或者输出最终的结果数据。</p>\n<p>在 MySQL 数据库中，变量分为<strong>系统变量</strong>以及<strong>用户自定义变量</strong>。</p>\n<h3 id=\"1-1-系统变量\"><a href=\"#1-1-系统变量\" class=\"headerlink\" title=\"1. 1 系统变量\"></a>1. 1 系统变量</h3><h4 id=\"1-1-1-系统变量分类\"><a href=\"#1-1-1-系统变量分类\" class=\"headerlink\" title=\"1. 1. 1 系统变量分类\"></a>1. 1. 1 系统变量分类</h4><p>变量由系统定义，不是用户定义，属于<strong>服务器</strong>层面。启动MySQL服务，生成MySQL服务实例期间，MySQL将为MySQL服务器内存中的系统变量赋值，这些系统变量定义了当前MySQL服务实例的属性、特征。这些系统变量的值要么是<strong>编译MySQL时参数</strong>的默认值，要么是<strong>配置文件</strong>（例如my.ini等）中的参数值。大家可以通过网址 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html\">https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html</a> 查看MySQL文档的系统变量。</p>\n<p>系统变量分为全局系统变量（需要添加<strong>global</strong> 关键字）以及会话系统变量（需要添加 <strong>session</strong> 关键字），有时也把全局系统变量简称为全局变量，有时也把会话系统变量称为local变量。 <strong>如果不写，默认会话级别</strong>。 静态变量（在 MySQL 服务实例运行期间它们的值不能使用 set 动态修改）属于特殊的全局系统变量。</p>\n<p>每一个MySQL客户机成功连接MySQL服务器后，都会产生与之对应的会话。会话期间，MySQL服务实例会在MySQL服务器内存中生成与该会话对应的会话系统变量，这些会话系统变量的初始值是全局系统变量值的复制。如下图：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221026194644829.png\" alt=\"image-20221026194644829\"></p>\n<ul>\n<li><p>全局系统变量针对于所有会话（连接）有效，但<strong>不能跨重启</strong></p>\n</li>\n<li><p>会话系统变量仅针对于当前会话（连接）有效。会话期间，当前会话对某个会话系统变量值的修改，不会影响其他会话同一个会话系统变量的值。</p>\n</li>\n<li><p>会话 1 对某个全局系统变量值的修改会导致会话 2 中同一个全局系统变量值的修改。</p>\n</li>\n</ul>\n<p>在MySQL中有些系统变量只能是全局的，例如 max_connections 用于限制服务器的最大连接数；有些系统变量作用域既可以是全局又可以是会话，例如 character_set_client 用于设置客户端的字符集；有些系统变量的作用域只能是当前会话，例如 pseudo_thread_id 用于标记当前会话的 MySQL 连接 ID。</p>\n<h4 id=\"1-1-2-查看系统变量\"><a href=\"#1-1-2-查看系统变量\" class=\"headerlink\" title=\"1. 1. 2 查看系统变量\"></a>1. 1. 2 查看系统变量</h4><ul>\n<li><strong>查看所有或部分系统变量</strong></li>\n</ul>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">#查看所有全局变量</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">SHOW </span><span style=\"color: #F78C6C\">GLOBAL</span><span style=\"color: #BABED8\"> VARIABLES;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">#查看所有会话变量</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">SHOW </span><span style=\"color: #F78C6C\">SESSION</span><span style=\"color: #BABED8\"> VARIABLES;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">或</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">SHOW VARIABLES;</span></span></code></pre></div><div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">#查看满足条件的部分系统变量。</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">SHOW </span><span style=\"color: #F78C6C\">GLOBAL</span><span style=\"color: #BABED8\"> VARIABLES </span><span style=\"color: #F78C6C\">LIKE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">%标识符%</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">#查看满足条件的部分会话变量</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">SHOW </span><span style=\"color: #F78C6C\">SESSION</span><span style=\"color: #BABED8\"> VARIABLES </span><span style=\"color: #F78C6C\">LIKE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">%标识符%</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">;</span></span></code></pre></div><p>举例：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">SHOW </span><span style=\"color: #F78C6C\">GLOBAL</span><span style=\"color: #BABED8\"> VARIABLES </span><span style=\"color: #F78C6C\">LIKE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">admin_%</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">;</span></span></code></pre></div><ul>\n<li><strong>查看指定系统变量</strong></li>\n</ul>\n<p>作为 MySQL 编码规范，MySQL 中的系统变量以<strong>两个“@”</strong>开头，其中“@@global”仅用于标记全局系统变量，“@@session”仅用于标记会话系统变量。“@@”首先标记会话系统变量，如果会话系统变量不存在，则标记全局系统变量。</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">#查看指定的系统变量的值</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> @@global.变量名;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">#查看指定的会话变量的值</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> @@session.变量名;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">#或者</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> @@变量名;</span></span></code></pre></div><ul>\n<li><strong>修改系统变量的值</strong></li>\n</ul>\n<p>有些时候，数据库管理员需要修改系统变量的默认值，以便修改当前会话或者MySQL服务实例的属性、特征。具体方法：</p>\n<p>方式 1 ：修改MySQL<strong>配置文件</strong>，继而修改MySQL系统变量的值（该方法需要重启MySQL服务）</p>\n<p>方式 2 ：在MySQL服务运行期间，使用“set”命令重新设置系统变量的值</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">#为某个系统变量赋值</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">#方式1：</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> @@global.变量名</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">变量值;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">#方式2：</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">GLOBAL</span><span style=\"color: #BABED8\"> 变量名</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">变量值;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">#为某个会话变量赋值</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">#方式1：</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> @@session.变量名</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">变量值;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">#方式2：</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">SESSION</span><span style=\"color: #BABED8\"> 变量名</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">变量值;</span></span></code></pre></div><p>举例：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> @@global.autocommit;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">GLOBAL</span><span style=\"color: #BABED8\"> autocommit</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">;</span></span></code></pre></div><div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> @@session.tx_isolation;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> @@session.tx_isolation</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">read-uncommitted</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">;</span></span></code></pre></div><div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">GLOBAL</span><span style=\"color: #BABED8\"> max_connections </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1000</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> @@global.max_connections;</span></span></code></pre></div><h3 id=\"1-2-用户变量\"><a href=\"#1-2-用户变量\" class=\"headerlink\" title=\"1. 2 用户变量\"></a>1. 2 用户变量</h3><h4 id=\"1-2-1-用户变量分类\"><a href=\"#1-2-1-用户变量分类\" class=\"headerlink\" title=\"1. 2. 1 用户变量分类\"></a>1. 2. 1 用户变量分类</h4><p>用户变量是用户自己定义的，作为 MySQL 编码规范，MySQL 中的用户变量以<strong>一个“@”</strong>开头。根据作用范围不同，又分为<strong>会话用户变量</strong>和<strong>局部变量</strong>。</p>\n<ul>\n<li>会话用户变量：作用域和会话变量一样，只对<strong>当前连接</strong>会话有效。</li>\n<li>局部变量：只在 BEGIN 和 END 语句块中有效。局部变量只能在<strong>存储过程和函数</strong>中使用。</li>\n</ul>\n<h4 id=\"1-2-2-会话用户变量\"><a href=\"#1-2-2-会话用户变量\" class=\"headerlink\" title=\"1. 2. 2 会话用户变量\"></a>1. 2. 2 会话用户变量</h4><ul>\n<li><strong>变量的定义</strong></li>\n</ul>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">#方式1：“</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">”或“:</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">”</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> @用户变量 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> 值;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> @用户变量 :</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> 值;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">#方式2：“:</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">” 或 INTO关键字</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> @用户变量 :</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> 表达式 [FROM 等子句];</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> 表达式 </span><span style=\"color: #F78C6C\">INTO</span><span style=\"color: #BABED8\"> @用户变量 [FROM 等子句];</span></span></code></pre></div><ul>\n<li><strong>查看用户变量的值 （查看、比较、运算等）</strong></li>\n</ul>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> @用户变量</span></span></code></pre></div><ul>\n<li>举例</li>\n</ul>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> @a </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> @a;</span></span></code></pre></div><div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> @num :</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">COUNT</span><span style=\"color: #BABED8\">(</span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\">) </span><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> employees;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> @num;</span></span></code></pre></div><div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">AVG</span><span style=\"color: #BABED8\">(salary) </span><span style=\"color: #F78C6C\">INTO</span><span style=\"color: #BABED8\"> @avgsalary </span><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> employees;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> @avgsalary;</span></span></code></pre></div><div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> @big; #查看某个未声明的变量时，将得到NULL值</span></span></code></pre></div><h4 id=\"1-2-3-局部变量\"><a href=\"#1-2-3-局部变量\" class=\"headerlink\" title=\"1. 2. 3 局部变量\"></a>1. 2. 3 局部变量</h4><p>定义：可以使用<strong>DECLARE</strong>语句定义一个局部变量</p>\n<p>作用域：仅仅在定义它的 BEGIN … END 中有效</p>\n<p>位置：只能放在 BEGIN … END 中，而且只能放在第一句</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">BEGIN</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #BABED8\">#声明局部变量</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> 变量名1 变量数据类型 [DEFAULT 变量默认值];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> 变量名2,变量名3,... 变量数据类型 [DEFAULT 变量默认值];</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #BABED8\">#为局部变量赋值</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> 变量名1 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> 值;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> 值 </span><span style=\"color: #F78C6C\">INTO</span><span style=\"color: #BABED8\"> 变量名2 [FROM 子句];</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #BABED8\">#查看局部变量的值</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> 变量1,变量2,变量3;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">END</span></span></code></pre></div><p><strong>1 .定义变量</strong></p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> 变量名 类型 [default 值]; # 如果没有DEFAULT子句，初始值为NULL</span></span></code></pre></div><p>举例：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\">　myparam　</span><span style=\"color: #C792EA\">INT</span><span style=\"color: #BABED8\">　</span><span style=\"color: #C792EA\">DEFAULT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">100</span><span style=\"color: #BABED8\">;</span></span></code></pre></div><p><strong>2 .变量赋值</strong></p>\n<p>方式 1 ：一般用于赋简单的值</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> 变量名</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">值;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> 变量名:</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">值;</span></span></code></pre></div><p>方式 2 ：一般用于赋表中的字段值</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> 字段名或表达式 </span><span style=\"color: #F78C6C\">INTO</span><span style=\"color: #BABED8\"> 变量名 </span><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> 表;</span></span></code></pre></div><p><strong>3 .使用变量</strong> （查看、比较、运算等）</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> 局部变量名;</span></span></code></pre></div><div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">DELIMITER </span><span style=\"color: #89DDFF\">//</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">CREATE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">PROCEDURE</span><span style=\"color: #BABED8\"> set_value</span><span style=\"color: #89DDFF\">()</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">BEGIN</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> emp_name </span><span style=\"color: #C792EA\">VARCHAR</span><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">25</span><span style=\"color: #BABED8\">);</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> sal DOUBLE(</span><span style=\"color: #F78C6C\">10</span><span style=\"color: #BABED8\">,</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\">);</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> last_name,salary </span><span style=\"color: #F78C6C\">INTO</span><span style=\"color: #BABED8\"> emp_name,sal</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> employees</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">WHERE</span><span style=\"color: #BABED8\"> employee_id </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">102</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> emp_name,sal;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">END</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">//</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">DELIMITER ;</span></span></code></pre></div><p>举例 2 ：声明两个变量，求和并打印 （分别使用会话用户变量、局部变量的方式实现）</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">#方式1：使用用户变量</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> @m</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> @n</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> @sum</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">@m</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\">@n;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> @sum;</span></span></code></pre></div><div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">#方式2：使用局部变量</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">DELIMITER </span><span style=\"color: #89DDFF\">//</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">CREATE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">PROCEDURE</span><span style=\"color: #BABED8\"> add_value</span><span style=\"color: #89DDFF\">()</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">BEGIN</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">#局部变量</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> m </span><span style=\"color: #C792EA\">INT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">DEFAULT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> n </span><span style=\"color: #C792EA\">INT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">DEFAULT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> SUM </span><span style=\"color: #C792EA\">INT</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> SUM </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> m</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\">n;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> SUM;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">END</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">//</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">DELIMITER ;</span></span></code></pre></div><p>举例 3 ：创建存储过程“different_salary”查询某员工和他领导的薪资差距，并用IN参数emp_id接收员工id，用OUT参数dif_salary输出薪资差距结果。</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">#声明</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">DELIMITER </span><span style=\"color: #89DDFF\">//</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">CREATE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">PROCEDURE</span><span style=\"color: #BABED8\"> different_salary(</span><span style=\"color: #F78C6C\">IN</span><span style=\"color: #BABED8\"> emp_id </span><span style=\"color: #C792EA\">INT</span><span style=\"color: #BABED8\">,</span><span style=\"color: #F78C6C\">OUT</span><span style=\"color: #BABED8\"> dif_salary DOUBLE)</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">BEGIN</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">#声明局部变量</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> emp_sal,mgr_sal DOUBLE </span><span style=\"color: #C792EA\">DEFAULT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> mgr_id </span><span style=\"color: #C792EA\">INT</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> salary </span><span style=\"color: #F78C6C\">INTO</span><span style=\"color: #BABED8\"> emp_sal </span><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> employees </span><span style=\"color: #F78C6C\">WHERE</span><span style=\"color: #BABED8\"> employee_id </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> emp_id;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> manager_id </span><span style=\"color: #F78C6C\">INTO</span><span style=\"color: #BABED8\"> mgr_id </span><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> employees </span><span style=\"color: #F78C6C\">WHERE</span><span style=\"color: #BABED8\"> employee_id </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> emp_id;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> salary </span><span style=\"color: #F78C6C\">INTO</span><span style=\"color: #BABED8\"> mgr_sal </span><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> employees </span><span style=\"color: #F78C6C\">WHERE</span><span style=\"color: #BABED8\"> employee_id </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> mgr_id;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> dif_salary </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> mgr_sal </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> emp_sal;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">END</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">//</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">DELIMITER ;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">#调用</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> @emp_id </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">102</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">CALL</span><span style=\"color: #BABED8\"> different_salary(@emp_id,@diff_sal);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">#查看</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> @diff_sal;</span></span></code></pre></div><h4 id=\"1-2-4-对比会话用户变量与局部变量\"><a href=\"#1-2-4-对比会话用户变量与局部变量\" class=\"headerlink\" title=\"1. 2. 4 对比会话用户变量与局部变量\"></a>1. 2. 4 对比会话用户变量与局部变量</h4><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221026194909912.png\" alt=\"image-20221026194909912\"></p>\n<h2 id=\"2-定义条件与处理程序\"><a href=\"#2-定义条件与处理程序\" class=\"headerlink\" title=\"2. 定义条件与处理程序\"></a>2. 定义条件与处理程序</h2><p><strong>定义条件</strong>是事先定义程序执行过程中可能遇到的问题，<strong>处理程序</strong>定义了在遇到问题时应当采取的处理方式，并且保证存储过程或函数在遇到警告或错误时能继续执行。这样可以增强存储程序处理问题的能力，避免程序异常停止运行。</p>\n<p>说明：定义条件和处理程序在存储过程、存储函数中都是支持的。</p>\n<h3 id=\"2-1-案例分析\"><a href=\"#2-1-案例分析\" class=\"headerlink\" title=\"2. 1 案例分析\"></a>2. 1 案例分析</h3><p><strong>案例分析</strong>： 创建一个名称为“UpdateDataNoCondition”的存储过程。代码如下：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">DELIMITER </span><span style=\"color: #89DDFF\">//</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">CREATE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">PROCEDURE</span><span style=\"color: #BABED8\"> UpdateDataNoCondition</span><span style=\"color: #89DDFF\">()</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">BEGIN</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> @x </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">UPDATE</span><span style=\"color: #BABED8\"> employees </span><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> email </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">NULL</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">WHERE</span><span style=\"color: #BABED8\"> last_name </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">Abel</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> @x </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">UPDATE</span><span style=\"color: #BABED8\"> employees </span><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> email </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">aabbel</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">WHERE</span><span style=\"color: #BABED8\"> last_name </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">Abel</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> @x </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">END</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">//</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">DELIMITER ;</span></span></code></pre></div><p>调用存储过程：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">mysql</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">CALL</span><span style=\"color: #BABED8\"> UpdateDataNoCondition</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">ERROR </span><span style=\"color: #F78C6C\">1048</span><span style=\"color: #BABED8\"> (</span><span style=\"color: #F78C6C\">23000</span><span style=\"color: #BABED8\">): Column </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">email</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\"> cannot be </span><span style=\"color: #F78C6C\">null</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">mysql</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> @x;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">+</span><span style=\"color: #676E95; font-style: italic\">------+</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| @x |</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">+</span><span style=\"color: #676E95; font-style: italic\">------+</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">+</span><span style=\"color: #676E95; font-style: italic\">------+</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">row</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">in</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">set</span><span style=\"color: #BABED8\"> (</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">00</span><span style=\"color: #BABED8\"> sec)</span></span></code></pre></div><p>可以看到，此时@x变量的值为 1 。结合创建存储过程的SQL语句代码可以得出：在存储过程中未定义条件和处理程序，且当存储过程中执行的SQL语句报错时，MySQL数据库会抛出错误，并退出当前SQL逻辑，不再向下继续执行。</p>\n<h3 id=\"2-2-定义条件\"><a href=\"#2-2-定义条件\" class=\"headerlink\" title=\"2. 2 定义条件\"></a>2. 2 定义条件</h3><p>定义条件就是给MySQL中的错误码命名，这有助于存储的程序代码更清晰。它将一个<strong>错误名字</strong>和<strong>指定的错误条件</strong>关联起来。这个名字可以随后被用在定义处理程序的<strong>DECLARE HANDLER</strong>语句中。</p>\n<p>定义条件使用DECLARE语句，语法格式如下：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> 错误名称 CONDITION </span><span style=\"color: #F78C6C\">FOR</span><span style=\"color: #BABED8\"> 错误码（或错误条件）</span></span></code></pre></div><p>错误码的说明：</p>\n<ul>\n<li><p><strong>MySQL_error_code</strong>和<strong>sqlstate_value</strong>都可以表示MySQL的错误。</p>\n<ul>\n<li>MySQL_error_code是数值类型错误代码。</li>\n<li>sqlstate_value是长度为 5 的字符串类型错误代码。</li>\n</ul>\n</li>\n<li><p>例如，在ERROR 1418 (HY000)中， 1418 是MySQL_error_code，’HY000’是sqlstate_value。</p>\n</li>\n<li><p>例如，在ERROR 1142（ 42000 ）中， 1142 是MySQL_error_code，’42000’是sqlstate_value。</p>\n</li>\n</ul>\n<p><strong>举例 1</strong> ： 定义“Field_Not_Be_NULL”错误名与MySQL中违反非空约束的错误类型是“ERROR 1048 (23000)”对应。</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">#使用MySQL_error_code</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> Field_Not_Be_NULL CONDITION </span><span style=\"color: #F78C6C\">FOR</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1048</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">#使用sqlstate_value</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> Field_Not_Be_NULL CONDITION </span><span style=\"color: #F78C6C\">FOR</span><span style=\"color: #BABED8\"> SQLSTATE </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">23000</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">;</span></span></code></pre></div><p><strong>举例 2</strong> ： 定义”ERROR 1148(42000)”错误，名称为command_not_allowed。</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">#使用MySQL_error_code</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> command_not_allowed CONDITION </span><span style=\"color: #F78C6C\">FOR</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1148</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">#使用sqlstate_value</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> command_not_allowed CONDITION </span><span style=\"color: #F78C6C\">FOR</span><span style=\"color: #BABED8\"> SQLSTATE </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">42000</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">;</span></span></code></pre></div><h3 id=\"2-3-定义处理程序\"><a href=\"#2-3-定义处理程序\" class=\"headerlink\" title=\"2. 3 定义处理程序\"></a>2. 3 定义处理程序</h3><p>可以为SQL执行过程中发生的某种类型的错误定义特殊的处理程序。定义处理程序时，使用DECLARE语句的语法如下：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> 处理方式 HANDLER </span><span style=\"color: #F78C6C\">FOR</span><span style=\"color: #BABED8\"> 错误类型 处理语句</span></span></code></pre></div><ul>\n<li><p><strong>处理方式</strong> ：处理方式有 3 个取值：CONTINUE、EXIT、UNDO。</p>\n<ul>\n<li><code>CONTINUE</code>：表示遇到错误不处理，继续执行。</li>\n<li><code>EXIT</code>：表示遇到错误马上退出。</li>\n<li><code>UNDO</code>：表示遇到错误后撤回之前的操作。MySQL中暂时不支持这样的操作。</li>\n</ul>\n</li>\n<li><p><strong>错误类型</strong> （即条件）可以有如下取值：</p>\n<ul>\n<li><code>SQLSTATE &#39;字符串错误码&#39;</code>：表示长度为 5 的sqlstate_value类型的错误代码；</li>\n<li><code>MySQL_error_code</code>：匹配数值类型错误代码；</li>\n<li><code>错误名称</code>：表示DECLARE … CONDITION定义的错误条件名称。</li>\n<li><code>SQLWARNING</code>：匹配所有以 01 开头的SQLSTATE错误代码；</li>\n<li>NOT FOUND&#96;：匹配所有以 02 开头的SQLSTATE错误代码；</li>\n<li><code>SQLEXCEPTION</code>：匹配所有没有被SQLWARNING或NOT FOUND捕获的SQLSTATE错误代码；</li>\n</ul>\n</li>\n<li><p><strong>处理语句</strong> ：如果出现上述条件之一，则采用对应的处理方式，并执行指定的处理语句。语句可以是像“<strong>SET 变量 &#x3D; 值</strong>”这样的简单语句，也可以是使用<strong>BEGIN … END</strong>编写的复合语句。</p>\n</li>\n</ul>\n<p>定义处理程序的几种方式，代码如下：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">#方法1：捕获sqlstate_value</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">CONTINUE</span><span style=\"color: #BABED8\"> HANDLER </span><span style=\"color: #F78C6C\">FOR</span><span style=\"color: #BABED8\"> SQLSTATE </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">42S02</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> @info </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">NO_SUCH_TABLE</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">#方法2：捕获mysql_error_value</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">CONTINUE</span><span style=\"color: #BABED8\"> HANDLER </span><span style=\"color: #F78C6C\">FOR</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1146</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> @info </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">NO_SUCH_TABLE</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">#方法3：先定义条件，再调用</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> no_such_table CONDITION </span><span style=\"color: #F78C6C\">FOR</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1146</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">CONTINUE</span><span style=\"color: #BABED8\"> HANDLER </span><span style=\"color: #F78C6C\">FOR</span><span style=\"color: #BABED8\"> NO_SUCH_TABLE </span><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> @info </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">NO_SUCH_TABLE</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">#方法4：使用SQLWARNING</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> EXIT HANDLER </span><span style=\"color: #F78C6C\">FOR</span><span style=\"color: #BABED8\"> SQLWARNING </span><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> @info </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">ERROR</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">#方法5：使用NOT FOUND</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> EXIT HANDLER </span><span style=\"color: #F78C6C\">FOR</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">NOT</span><span style=\"color: #BABED8\"> FOUND </span><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> @info </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">NO_SUCH_TABLE</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">#方法6：使用SQLEXCEPTION</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> EXIT HANDLER </span><span style=\"color: #F78C6C\">FOR</span><span style=\"color: #BABED8\"> SQLEXCEPTION </span><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> @info </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">ERROR</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">;</span></span></code></pre></div><h3 id=\"2-4-案例解决\"><a href=\"#2-4-案例解决\" class=\"headerlink\" title=\"2. 4 案例解决\"></a>2. 4 案例解决</h3><p>在存储过程中，定义处理程序，捕获sqlstate_value值，当遇到MySQL_error_code值为 1048 时，执行CONTINUE操作，并且将@proc_value的值设置为-1。</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">DELIMITER </span><span style=\"color: #89DDFF\">//</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">CREATE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">PROCEDURE</span><span style=\"color: #BABED8\"> UpdateDataNoCondition</span><span style=\"color: #89DDFF\">()</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">BEGIN</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">#定义处理程序</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">CONTINUE</span><span style=\"color: #BABED8\"> HANDLER </span><span style=\"color: #F78C6C\">FOR</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1048</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> @proc_value </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> @x </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">UPDATE</span><span style=\"color: #BABED8\"> employees </span><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> email </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">NULL</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">WHERE</span><span style=\"color: #BABED8\"> last_name </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">Abel</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> @x </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">UPDATE</span><span style=\"color: #BABED8\"> employees </span><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> email </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">aabbel</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">WHERE</span><span style=\"color: #BABED8\"> last_name </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">Abel</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> @x </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">END</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">//</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">DELIMITER ;</span></span></code></pre></div><p>调用过程：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">mysql</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">CALL</span><span style=\"color: #BABED8\"> UpdateDataWithCondition</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">Query OK, </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">rows</span><span style=\"color: #BABED8\"> affected (</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">01</span><span style=\"color: #BABED8\"> sec)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">mysql</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> @x,@proc_value;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">+</span><span style=\"color: #676E95; font-style: italic\">------+-------------+</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| @x | @proc_value |</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">+</span><span style=\"color: #676E95; font-style: italic\">------+-------------+</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">+</span><span style=\"color: #676E95; font-style: italic\">------+-------------+</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">row</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">in</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">set</span><span style=\"color: #BABED8\"> (</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">00</span><span style=\"color: #BABED8\"> sec)</span></span></code></pre></div><p><strong>举例</strong>：</p>\n<p>创建一个名称为“InsertDataWithCondition”的存储过程，代码如下。</p>\n<p>在存储过程中，定义处理程序，捕获sqlstate_value值，当遇到sqlstate_value值为 23000 时，执行EXIT操作，并且将@proc_value的值设置为-1。</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">#准备工作</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">CREATE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">TABLE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">departments</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">AS</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> atguigudb.</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">departments</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">ALTER</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">TABLE</span><span style=\"color: #BABED8\"> departments</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">ADD</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">CONSTRAINT</span><span style=\"color: #BABED8\"> uk_dept_name </span><span style=\"color: #F78C6C\">UNIQUE</span><span style=\"color: #BABED8\">(department_id);</span></span></code></pre></div><div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">DELIMITER </span><span style=\"color: #89DDFF\">//</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">CREATE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">PROCEDURE</span><span style=\"color: #BABED8\"> InsertDataWithCondition</span><span style=\"color: #89DDFF\">()</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">BEGIN</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> duplicate_entry CONDITION </span><span style=\"color: #F78C6C\">FOR</span><span style=\"color: #BABED8\"> SQLSTATE </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">23000</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\"> ;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> EXIT HANDLER </span><span style=\"color: #F78C6C\">FOR</span><span style=\"color: #BABED8\"> duplicate_entry </span><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> @proc_value </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> @x </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">INSERT INTO</span><span style=\"color: #BABED8\"> departments(department_name) </span><span style=\"color: #F78C6C\">VALUES</span><span style=\"color: #BABED8\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">测试</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">);</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> @x </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">INSERT INTO</span><span style=\"color: #BABED8\"> departments(department_name) </span><span style=\"color: #F78C6C\">VALUES</span><span style=\"color: #BABED8\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">测试</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">);</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> @x </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">END</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">//</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">DELIMITER ;</span></span></code></pre></div><p>调用存储过程：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">mysql</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">CALL</span><span style=\"color: #BABED8\"> InsertDataWithCondition</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">Query OK, </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">rows</span><span style=\"color: #BABED8\"> affected (</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">01</span><span style=\"color: #BABED8\"> sec)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">mysql</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> @x,@proc_value;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">+</span><span style=\"color: #676E95; font-style: italic\">------+-------------+</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| @x | @proc_value |</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">+</span><span style=\"color: #676E95; font-style: italic\">------+-------------+</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">+</span><span style=\"color: #676E95; font-style: italic\">------+-------------+</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">row</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">in</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">set</span><span style=\"color: #BABED8\"> (</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">00</span><span style=\"color: #BABED8\"> sec)</span></span></code></pre></div><h2 id=\"3-流程控制\"><a href=\"#3-流程控制\" class=\"headerlink\" title=\"3. 流程控制\"></a>3. 流程控制</h2><p>解决复杂问题不可能通过一个 SQL 语句完成，我们需要执行多个 SQL 操作。流程控制语句的作用就是控制存储过程中 SQL 语句的执行顺序，是我们完成复杂操作必不可少的一部分。只要是执行的程序，流程就分为三大类：</p>\n<ul>\n<li><strong>顺序结构</strong>：程序从上往下依次执行</li>\n<li><strong>分支结构</strong>：程序按条件进行选择执行，从两条或多条路径中选择一条执行</li>\n<li><strong>循环结构</strong>：程序满足一定条件下，重复执行一组语句</li>\n</ul>\n<p>针对于MySQL 的流程控制语句主要有 3 类。注意：只能用于存储程序。</p>\n<ul>\n<li><strong>条件判断语句</strong>：IF 语句和 CASE 语句</li>\n<li><strong>循环语句</strong>：LOOP、WHILE 和 REPEAT 语句</li>\n<li><strong>跳转语句</strong>：ITERATE 和 LEAVE 语句</li>\n</ul>\n<h3 id=\"3-1-分支结构之-IF\"><a href=\"#3-1-分支结构之-IF\" class=\"headerlink\" title=\"3. 1 分支结构之 IF\"></a>3. 1 分支结构之 IF</h3><ul>\n<li>IF 语句的语法结构是：</li>\n</ul>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">IF</span><span style=\"color: #BABED8\"> 表达式1 </span><span style=\"color: #F78C6C\">THEN</span><span style=\"color: #BABED8\"> 操作1</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">[ELSEIF 表达式2 THEN 操作2]……</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">[ELSE 操作N]</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">END</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">IF</span></span></code></pre></div><p>根据表达式的结果为TRUE或FALSE执行相应的语句。这里“[]”中的内容是可选的。</p>\n<ul>\n<li><p>特点：① 不同的表达式对应不同的操作 ② 使用在begin end中</p>\n</li>\n<li><p><strong>举例 1</strong> ：</p>\n</li>\n</ul>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">IF</span><span style=\"color: #BABED8\"> val </span><span style=\"color: #F78C6C\">IS</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">NULL</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">THEN</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">val is null</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">ELSE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">val is not null</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">END</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">IF</span><span style=\"color: #BABED8\">;</span></span></code></pre></div><ul>\n<li><strong>举例 2</strong> ： 声明存储过程“update_salary_by_eid1”，定义IN参数emp_id，输入员工编号。判断该员工薪资如果低于 8000 元并且入职时间超过 5 年，就涨薪 500 元；否则就不变。</li>\n</ul>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">DELIMITER </span><span style=\"color: #89DDFF\">//</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">CREATE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">PROCEDURE</span><span style=\"color: #BABED8\"> update_salary_by_eid1(</span><span style=\"color: #F78C6C\">IN</span><span style=\"color: #BABED8\"> emp_id </span><span style=\"color: #C792EA\">INT</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">BEGIN</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> emp_salary DOUBLE;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> hire_year DOUBLE;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> salary </span><span style=\"color: #F78C6C\">INTO</span><span style=\"color: #BABED8\"> emp_salary </span><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> employees </span><span style=\"color: #F78C6C\">WHERE</span><span style=\"color: #BABED8\"> employee_id </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> emp_id;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">DATEDIFF</span><span style=\"color: #BABED8\">(CURDATE</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\">,hire_date)</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #F78C6C\">365</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">INTO</span><span style=\"color: #BABED8\"> hire_year</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> employees </span><span style=\"color: #F78C6C\">WHERE</span><span style=\"color: #BABED8\"> employee_id </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> emp_id;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">IF</span><span style=\"color: #BABED8\"> emp_salary </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">8000</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">AND</span><span style=\"color: #BABED8\"> hire_year </span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">5</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">THEN</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">UPDATE</span><span style=\"color: #BABED8\"> employees </span><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> salary </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> salary </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">500</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">WHERE</span><span style=\"color: #BABED8\"> employee_id </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> emp_id;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">END</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">IF</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">END</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">//</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">DELIMITER ;</span></span></code></pre></div><ul>\n<li><strong>举例 3</strong> ： 声明存储过程“update_salary_by_eid2”，定义IN参数emp_id，输入员工编号。判断该员工薪资如果低于 9000 元并且入职时间超过 5 年，就涨薪 500 元；否则就涨薪 100 元。</li>\n</ul>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">DELIMITER </span><span style=\"color: #89DDFF\">//</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">CREATE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">PROCEDURE</span><span style=\"color: #BABED8\"> update_salary_by_eid2(</span><span style=\"color: #F78C6C\">IN</span><span style=\"color: #BABED8\"> emp_id </span><span style=\"color: #C792EA\">INT</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">BEGIN</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> emp_salary DOUBLE;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> hire_year DOUBLE;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> salary </span><span style=\"color: #F78C6C\">INTO</span><span style=\"color: #BABED8\"> emp_salary </span><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> employees </span><span style=\"color: #F78C6C\">WHERE</span><span style=\"color: #BABED8\"> employee_id </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> emp_id;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">DATEDIFF</span><span style=\"color: #BABED8\">(CURDATE</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\">,hire_date)</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #F78C6C\">365</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">INTO</span><span style=\"color: #BABED8\"> hire_year</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> employees </span><span style=\"color: #F78C6C\">WHERE</span><span style=\"color: #BABED8\"> employee_id </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> emp_id;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">IF</span><span style=\"color: #BABED8\"> emp_salary </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">8000</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">AND</span><span style=\"color: #BABED8\"> hire_year </span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">5</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">THEN</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">UPDATE</span><span style=\"color: #BABED8\"> employees </span><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> salary </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> salary </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">500</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">WHERE</span><span style=\"color: #BABED8\"> employee_id </span><span style=\"color: #89DDFF\">=</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">emp_id;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">ELSE</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">UPDATE</span><span style=\"color: #BABED8\"> employees </span><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> salary </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> salary </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">100</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">WHERE</span><span style=\"color: #BABED8\"> employee_id </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> emp_id;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">END</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">IF</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">END</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">//</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">DELIMITER ;</span></span></code></pre></div><ul>\n<li><strong>举例 4</strong> ： 声明存储过程“update_salary_by_eid3”，定义IN参数emp_id，输入员工编号。判断该员工薪资如果低于 9000 元，就更新薪资为 9000 元；薪资如果大于等于 9000 元且低于 10000 的，但是奖金比例为NULL的，就更新奖金比例为0.01；其他的涨薪 100 元。</li>\n</ul>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">DELIMITER </span><span style=\"color: #89DDFF\">//</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">CREATE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">PROCEDURE</span><span style=\"color: #BABED8\"> update_salary_by_eid3(</span><span style=\"color: #F78C6C\">IN</span><span style=\"color: #BABED8\"> emp_id </span><span style=\"color: #C792EA\">INT</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">BEGIN</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> emp_salary DOUBLE;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> bonus </span><span style=\"color: #C792EA\">DECIMAL</span><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">3</span><span style=\"color: #BABED8\">,</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\">);</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> salary </span><span style=\"color: #F78C6C\">INTO</span><span style=\"color: #BABED8\"> emp_salary </span><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> employees </span><span style=\"color: #F78C6C\">WHERE</span><span style=\"color: #BABED8\"> employee_id </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> emp_id;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> commission_pct </span><span style=\"color: #F78C6C\">INTO</span><span style=\"color: #BABED8\"> bonus </span><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> employees </span><span style=\"color: #F78C6C\">WHERE</span><span style=\"color: #BABED8\"> employee_id </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> emp_id;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">IF</span><span style=\"color: #BABED8\"> emp_salary </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">9000</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">THEN</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">UPDATE</span><span style=\"color: #BABED8\"> employees </span><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> salary </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">9000</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">WHERE</span><span style=\"color: #BABED8\"> employee_id </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> emp_id;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">ELSEIF emp_salary </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">10000</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">AND</span><span style=\"color: #BABED8\"> bonus </span><span style=\"color: #F78C6C\">IS</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">NULL</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">THEN</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">UPDATE</span><span style=\"color: #BABED8\"> employees </span><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> commission_pct </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">01</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">WHERE</span><span style=\"color: #BABED8\"> employee_id </span><span style=\"color: #89DDFF\">=</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">emp_id;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">ELSE</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">UPDATE</span><span style=\"color: #BABED8\"> employees </span><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> salary </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> salary </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">100</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">WHERE</span><span style=\"color: #BABED8\"> employee_id </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> emp_id;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">END</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">IF</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">END</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">//</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">DELIMITER ;</span></span></code></pre></div><h3 id=\"3-2-分支结构之-CASE\"><a href=\"#3-2-分支结构之-CASE\" class=\"headerlink\" title=\"3. 2 分支结构之 CASE\"></a>3. 2 分支结构之 CASE</h3><p>CASE 语句的语法结构 1 ：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">#情况一：类似于switch</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">CASE</span><span style=\"color: #BABED8\"> 表达式</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">WHEN</span><span style=\"color: #BABED8\"> 值1 </span><span style=\"color: #F78C6C\">THEN</span><span style=\"color: #BABED8\"> 结果1或语句1(如果是语句，需要加分号)</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">WHEN</span><span style=\"color: #BABED8\"> 值2 </span><span style=\"color: #F78C6C\">THEN</span><span style=\"color: #BABED8\"> 结果2或语句2(如果是语句，需要加分号)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">...</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">ELSE</span><span style=\"color: #BABED8\"> 结果n或语句n(如果是语句，需要加分号)</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">END</span><span style=\"color: #BABED8\"> [case]（如果是放在begin end中需要加上case，如果放在select后面不需要）</span></span></code></pre></div><p>CASE 语句的语法结构 2 ：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">#情况二：类似于多重if</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">CASE</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">WHEN</span><span style=\"color: #BABED8\"> 条件1 </span><span style=\"color: #F78C6C\">THEN</span><span style=\"color: #BABED8\"> 结果1或语句1(如果是语句，需要加分号)</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">WHEN</span><span style=\"color: #BABED8\"> 条件2 </span><span style=\"color: #F78C6C\">THEN</span><span style=\"color: #BABED8\"> 结果2或语句2(如果是语句，需要加分号)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">...</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">ELSE</span><span style=\"color: #BABED8\"> 结果n或语句n(如果是语句，需要加分号)</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">END</span><span style=\"color: #BABED8\"> [case]（如果是放在begin end中需要加上case，如果放在select后面不需要）</span></span></code></pre></div><ul>\n<li><strong>举例 1</strong> ：</li>\n</ul>\n<p>使用CASE流程控制语句的第 1 种格式，判断val值等于 1 、等于 2 ，或者两者都不等。</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">CASE</span><span style=\"color: #BABED8\"> val</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">　　　</span><span style=\"color: #F78C6C\">WHEN</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">THEN</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">val is 1</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">　　　</span><span style=\"color: #F78C6C\">WHEN</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">THEN</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">val is 2</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">　　　</span><span style=\"color: #F78C6C\">ELSE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">val is not 1 or 2</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">END</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">CASE</span><span style=\"color: #BABED8\">;</span></span></code></pre></div><ul>\n<li><strong>举例 2</strong> ：</li>\n</ul>\n<p>使用CASE流程控制语句的第 2 种格式，判断val是否为空、小于 0 、大于 0 或者等于 0 。</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">CASE</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">WHEN</span><span style=\"color: #BABED8\"> val </span><span style=\"color: #F78C6C\">IS</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">NULL</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">THEN</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">val is null</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">WHEN</span><span style=\"color: #BABED8\"> val </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">THEN</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">val is less than 0</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">WHEN</span><span style=\"color: #BABED8\"> val </span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">THEN</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">val is greater than 0</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">ELSE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">val is 0</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">END</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">CASE</span><span style=\"color: #BABED8\">;</span></span></code></pre></div><ul>\n<li><strong>举例 3</strong> ： 声明存储过程“update_salary_by_eid4”，定义IN参数emp_id，输入员工编号。判断该员工薪资如果低于 9000 元，就更新薪资为 9000 元；薪资大于等于 9000 元且低于 10000 的，但是奖金比例为NULL的，就更新奖金比例为0.01；其他的涨薪 100 元。</li>\n</ul>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">DELIMITER </span><span style=\"color: #89DDFF\">//</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">CREATE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">PROCEDURE</span><span style=\"color: #BABED8\"> update_salary_by_eid4(</span><span style=\"color: #F78C6C\">IN</span><span style=\"color: #BABED8\"> emp_id </span><span style=\"color: #C792EA\">INT</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">BEGIN</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> emp_sal DOUBLE;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> bonus </span><span style=\"color: #C792EA\">DECIMAL</span><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">3</span><span style=\"color: #BABED8\">,</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\">);</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> salary </span><span style=\"color: #F78C6C\">INTO</span><span style=\"color: #BABED8\"> emp_sal </span><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> employees </span><span style=\"color: #F78C6C\">WHERE</span><span style=\"color: #BABED8\"> employee_id </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> emp_id;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> commission_pct </span><span style=\"color: #F78C6C\">INTO</span><span style=\"color: #BABED8\"> bonus </span><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> employees </span><span style=\"color: #F78C6C\">WHERE</span><span style=\"color: #BABED8\"> employee_id </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> emp_id;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">CASE</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">WHEN</span><span style=\"color: #BABED8\"> emp_sal</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F78C6C\">9000</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">THEN</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">UPDATE</span><span style=\"color: #BABED8\"> employees </span><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> salary</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">9000</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">WHERE</span><span style=\"color: #BABED8\"> employee_id </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> emp_id;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">WHEN</span><span style=\"color: #BABED8\"> emp_sal</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F78C6C\">10000</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">AND</span><span style=\"color: #BABED8\"> bonus </span><span style=\"color: #F78C6C\">IS</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">NULL</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">THEN</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">UPDATE</span><span style=\"color: #BABED8\"> employees </span><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> commission_pct</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">01</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">WHERE</span><span style=\"color: #BABED8\"> employee_id </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> emp_id;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">ELSE</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">UPDATE</span><span style=\"color: #BABED8\"> employees </span><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> salary</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">salary</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">100</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">WHERE</span><span style=\"color: #BABED8\"> employee_id </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> emp_id;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">END</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">CASE</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">END</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">//</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">DELIMITER ;</span></span></code></pre></div><ul>\n<li><strong>举例 4</strong> ：声明存储过程update_salary_by_eid5，定义IN参数emp_id，输入员工编号。判断该员工的入职年限，如果是 0 年，薪资涨 50 ；如果是 1 年，薪资涨 100 ；如果是 2 年，薪资涨 200 ；如果是 3 年，薪资涨 300 ；如果是 4 年，薪资涨 400 ；其他的涨薪 500 。</li>\n</ul>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">DELIMITER </span><span style=\"color: #89DDFF\">//</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">CREATE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">PROCEDURE</span><span style=\"color: #BABED8\"> update_salary_by_eid5(</span><span style=\"color: #F78C6C\">IN</span><span style=\"color: #BABED8\"> emp_id </span><span style=\"color: #C792EA\">INT</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">BEGIN</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> emp_sal DOUBLE;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> hire_year DOUBLE;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> salary </span><span style=\"color: #F78C6C\">INTO</span><span style=\"color: #BABED8\"> emp_sal </span><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> employees </span><span style=\"color: #F78C6C\">WHERE</span><span style=\"color: #BABED8\"> employee_id </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> emp_id;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">ROUND</span><span style=\"color: #BABED8\">(</span><span style=\"color: #82AAFF\">DATEDIFF</span><span style=\"color: #BABED8\">(CURDATE</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\">,hire_date)</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #F78C6C\">365</span><span style=\"color: #BABED8\">) </span><span style=\"color: #F78C6C\">INTO</span><span style=\"color: #BABED8\"> hire_year </span><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> employees</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">WHERE</span><span style=\"color: #BABED8\"> employee_id </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> emp_id;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">CASE</span><span style=\"color: #BABED8\"> hire_year</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">WHEN</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">THEN</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">UPDATE</span><span style=\"color: #BABED8\"> employees </span><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> salary</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">salary</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">50</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">WHERE</span><span style=\"color: #BABED8\"> employee_id </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> emp_id;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">WHEN</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">THEN</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">UPDATE</span><span style=\"color: #BABED8\"> employees </span><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> salary</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">salary</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">100</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">WHERE</span><span style=\"color: #BABED8\"> employee_id </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> emp_id;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">WHEN</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">THEN</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">UPDATE</span><span style=\"color: #BABED8\"> employees </span><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> salary</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">salary</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">200</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">WHERE</span><span style=\"color: #BABED8\"> employee_id </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> emp_id;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">WHEN</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">THEN</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">UPDATE</span><span style=\"color: #BABED8\"> employees </span><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> salary</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">salary</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">300</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">WHERE</span><span style=\"color: #BABED8\"> employee_id </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> emp_id;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">WHEN</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">4</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">THEN</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">UPDATE</span><span style=\"color: #BABED8\"> employees </span><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> salary</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">salary</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">400</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">WHERE</span><span style=\"color: #BABED8\"> employee_id </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> emp_id;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">ELSE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">UPDATE</span><span style=\"color: #BABED8\"> employees </span><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> salary</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">salary</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">500</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">WHERE</span><span style=\"color: #BABED8\"> employee_id </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> emp_id;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">END</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">CASE</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">END</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">//</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">DELIMITER ;</span></span></code></pre></div><h3 id=\"3-3-循环结构之LOOP\"><a href=\"#3-3-循环结构之LOOP\" class=\"headerlink\" title=\"3. 3 循环结构之LOOP\"></a>3. 3 循环结构之LOOP</h3><p>LOOP循环语句用来重复执行某些语句。LOOP内的语句一直重复执行直到循环被退出（使用LEAVE子句），跳出循环过程。</p>\n<p>LOOP语句的基本格式如下：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">[loop_label:] </span><span style=\"color: #F78C6C\">LOOP</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">循环执行的语句</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">END</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">LOOP</span><span style=\"color: #BABED8\"> [loop_label]</span></span></code></pre></div><p>其中，loop_label表示LOOP语句的标注名称，该参数可以省略。</p>\n<p><strong>举例 1</strong> ：</p>\n<p>使用LOOP语句进行循环操作，id值小于 10 时将重复执行循环过程。</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> id </span><span style=\"color: #C792EA\">INT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">DEFAULT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">add_loop:</span><span style=\"color: #F78C6C\">LOOP</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> id </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> id </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">IF</span><span style=\"color: #BABED8\"> id </span><span style=\"color: #89DDFF\">&gt;=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">10</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">THEN</span><span style=\"color: #BABED8\"> LEAVE add_loop;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">END</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">IF</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">END</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">LOOP</span><span style=\"color: #BABED8\"> add_loop;</span></span></code></pre></div><p><strong>举例 2</strong> ： 当市场环境变好时，公司为了奖励大家，决定给大家涨工资。声明存储过程“update_salary_loop()”，声明OUT参数num，输出循环次数。存储过程中实现循环给大家涨薪，薪资涨为原来的1.1倍。直到全公司的平均薪资达到 12000 结束。并统计循环次数。</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">DELIMITER </span><span style=\"color: #89DDFF\">//</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">CREATE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">PROCEDURE</span><span style=\"color: #BABED8\"> update_salary_loop(</span><span style=\"color: #F78C6C\">OUT</span><span style=\"color: #BABED8\"> num </span><span style=\"color: #C792EA\">INT</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">BEGIN</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> avg_salary DOUBLE;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> loop_count </span><span style=\"color: #C792EA\">INT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">DEFAULT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">AVG</span><span style=\"color: #BABED8\">(salary) </span><span style=\"color: #F78C6C\">INTO</span><span style=\"color: #BABED8\"> avg_salary </span><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> employees;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">label_loop:</span><span style=\"color: #F78C6C\">LOOP</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">IF</span><span style=\"color: #BABED8\"> avg_salary </span><span style=\"color: #89DDFF\">&gt;=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">12000</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">THEN</span><span style=\"color: #BABED8\"> LEAVE label_loop;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">END</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">IF</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">UPDATE</span><span style=\"color: #BABED8\"> employees </span><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> salary </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> salary </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> loop_count </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> loop_count </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">AVG</span><span style=\"color: #BABED8\">(salary) </span><span style=\"color: #F78C6C\">INTO</span><span style=\"color: #BABED8\"> avg_salary </span><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> employees;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">END</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">LOOP</span><span style=\"color: #BABED8\"> label_loop;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> num </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> loop_count;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">END</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">//</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">DELIMITER ;</span></span></code></pre></div><h3 id=\"3-4-循环结构之WHILE\"><a href=\"#3-4-循环结构之WHILE\" class=\"headerlink\" title=\"3. 4 循环结构之WHILE\"></a>3. 4 循环结构之WHILE</h3><p>WHILE语句创建一个带条件判断的循环过程。WHILE在执行语句执行时，先对指定的表达式进行判断，如果为真，就执行循环内的语句，否则退出循环。WHILE语句的基本格式如下：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">[while_label:] </span><span style=\"color: #F78C6C\">WHILE</span><span style=\"color: #BABED8\"> 循环条件 DO</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">循环体</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">END</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">WHILE</span><span style=\"color: #BABED8\"> [while_label];</span></span></code></pre></div><p>while_label为WHILE语句的标注名称；如果循环条件结果为真，WHILE语句内的语句或语句群被执行，直至循环条件为假，退出循环。</p>\n<p><strong>举例 1</strong> ：</p>\n<p>WHILE语句示例，i值小于 10 时，将重复执行循环过程，代码如下：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">DELIMITER </span><span style=\"color: #89DDFF\">//</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">CREATE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">PROCEDURE</span><span style=\"color: #BABED8\"> test_while</span><span style=\"color: #89DDFF\">()</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">BEGIN</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #C792EA\">INT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">DEFAULT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">WHILE</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">10</span><span style=\"color: #BABED8\"> DO</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">END</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">WHILE</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> i;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">END</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">//</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">DELIMITER ;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">#调用</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">CALL</span><span style=\"color: #BABED8\"> test_while</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\">;</span></span></code></pre></div><p><strong>举例 2</strong> ： 市场环境不好时，公司为了渡过难关，决定暂时降低大家的薪资。声明存储过程“update_salary_while()”，声明OUT参数num，输出循环次数。存储过程中实现循环给大家降薪，薪资降为原来的90%。直到全公司的平均薪资达到 5000 结束。并统计循环次数。</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">DELIMITER </span><span style=\"color: #89DDFF\">//</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">CREATE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">PROCEDURE</span><span style=\"color: #BABED8\"> update_salary_while(</span><span style=\"color: #F78C6C\">OUT</span><span style=\"color: #BABED8\"> num </span><span style=\"color: #C792EA\">INT</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">BEGIN</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> avg_sal DOUBLE ;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> while_count </span><span style=\"color: #C792EA\">INT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">DEFAULT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">AVG</span><span style=\"color: #BABED8\">(salary) </span><span style=\"color: #F78C6C\">INTO</span><span style=\"color: #BABED8\"> avg_sal </span><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> employees;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">WHILE</span><span style=\"color: #BABED8\"> avg_sal </span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">5000</span><span style=\"color: #BABED8\"> DO</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">UPDATE</span><span style=\"color: #BABED8\"> employees </span><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> salary </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> salary </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">9</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> while_count </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> while_count </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">AVG</span><span style=\"color: #BABED8\">(salary) </span><span style=\"color: #F78C6C\">INTO</span><span style=\"color: #BABED8\"> avg_sal </span><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> employees;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">END</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">WHILE</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> num </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> while_count;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">END</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">//</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">DELIMITER ;</span></span></code></pre></div><h3 id=\"3-5-循环结构之REPEAT\"><a href=\"#3-5-循环结构之REPEAT\" class=\"headerlink\" title=\"3. 5 循环结构之REPEAT\"></a>3. 5 循环结构之REPEAT</h3><p>REPEAT语句创建一个带条件判断的循环过程。与WHILE循环不同的是，REPEAT 循环首先会执行一次循环，然后在 UNTIL 中进行表达式的判断，如果满足条件就退出，即 END REPEAT；如果条件不满足，则会就继续执行循环，直到满足退出条件为止。</p>\n<p>REPEAT语句的基本格式如下：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">[repeat_label:] </span><span style=\"color: #F78C6C\">REPEAT</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">　　　　循环体的语句</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">UNTIL 结束循环的条件表达式</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">END</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">REPEAT</span><span style=\"color: #BABED8\"> [repeat_label]</span></span></code></pre></div><p>repeat_label为REPEAT语句的标注名称，该参数可以省略；REPEAT语句内的语句或语句群被重复，直至expr_condition为真。</p>\n<p><strong>举例 1</strong> ：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">DELIMITER </span><span style=\"color: #89DDFF\">//</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">CREATE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">PROCEDURE</span><span style=\"color: #BABED8\"> test_repeat</span><span style=\"color: #89DDFF\">()</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">BEGIN</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #C792EA\">INT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">DEFAULT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">REPEAT</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">UNTIL i </span><span style=\"color: #89DDFF\">&gt;=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">10</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">END</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">REPEAT</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> i;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">END</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">//</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">DELIMITER ;</span></span></code></pre></div><p><strong>举例 2</strong> ： 当市场环境变好时，公司为了奖励大家，决定给大家涨工资。声明存储过程“update_salary_repeat()”，声明OUT参数num，输出循环次数。存储过程中实现循环给大家涨薪，薪资涨为原来的1.15倍。直到全公司的平均薪资达到 13000 结束。并统计循环次数。</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">DELIMITER </span><span style=\"color: #89DDFF\">//</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">CREATE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">PROCEDURE</span><span style=\"color: #BABED8\"> update_salary_repeat(</span><span style=\"color: #F78C6C\">OUT</span><span style=\"color: #BABED8\"> num </span><span style=\"color: #C792EA\">INT</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">BEGIN</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> avg_sal DOUBLE ;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> repeat_count </span><span style=\"color: #C792EA\">INT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">DEFAULT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">AVG</span><span style=\"color: #BABED8\">(salary) </span><span style=\"color: #F78C6C\">INTO</span><span style=\"color: #BABED8\"> avg_sal </span><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> employees;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">REPEAT</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">UPDATE</span><span style=\"color: #BABED8\"> employees </span><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> salary </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> salary </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">15</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> repeat_count </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> repeat_count </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">AVG</span><span style=\"color: #BABED8\">(salary) </span><span style=\"color: #F78C6C\">INTO</span><span style=\"color: #BABED8\"> avg_sal </span><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> employees;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">UNTIL avg_sal </span><span style=\"color: #89DDFF\">&gt;=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">13000</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">END</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">REPEAT</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> num </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> repeat_count;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">END</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">//</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">DELIMITER ;</span></span></code></pre></div><p><strong>对比三种循环结构</strong>：</p>\n<p>1 、这三种循环都可以省略名称，但如果循环中添加了循环控制语句（LEAVE或ITERATE）则必须添加名称。</p>\n<p> 2 、 LOOP：一般用于实现简单的”死”循环 </p>\n<p>​\t\tWHILE：先判断后执行 </p>\n<p>​\t\tREPEAT：先执行后判断，无条件至少执行一次</p>\n<h3 id=\"3-6-跳转语句之LEAVE语句\"><a href=\"#3-6-跳转语句之LEAVE语句\" class=\"headerlink\" title=\"3. 6 跳转语句之LEAVE语句\"></a>3. 6 跳转语句之LEAVE语句</h3><p>LEAVE语句：可以用在循环语句内，或者以 BEGIN 和 END 包裹起来的程序体内，表示跳出循环或者跳出程序体的操作。如果你有面向过程的编程语言的使用经验，你可以把 LEAVE 理解为 break。</p>\n<p>基本格式如下：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">LEAVE 标记名</span></span></code></pre></div><p>其中，label参数表示循环的标志。LEAVE和BEGIN … END或循环一起被使用。</p>\n<p><strong>举例 1</strong> ： 创建存储过程 “leave_begin()”，声明INT类型的IN参数num。给BEGIN…END加标记名，并在BEGIN…END中使用IF语句判断num参数的值。</p>\n<ul>\n<li>如果num&lt;&#x3D;0，则使用LEAVE语句退出BEGIN…END；</li>\n<li>如果num&#x3D;1，则查询“employees”表的平均薪资；</li>\n<li>如果num&#x3D;2，则查询“employees”表的最低薪资；</li>\n<li>如果num&gt;2，则查询“employees”表的最高薪资。</li>\n</ul>\n<p>IF语句结束后查询“employees”表的总人数。</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">DELIMITER </span><span style=\"color: #89DDFF\">//</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">CREATE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">PROCEDURE</span><span style=\"color: #BABED8\"> leave_begin(</span><span style=\"color: #F78C6C\">IN</span><span style=\"color: #BABED8\"> num </span><span style=\"color: #C792EA\">INT</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">begin_label: </span><span style=\"color: #F78C6C\">BEGIN</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">IF</span><span style=\"color: #BABED8\"> num</span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #F78C6C\">0</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">THEN</span><span style=\"color: #BABED8\"> LEAVE begin_label;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">ELSEIF num</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">1</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">THEN</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">AVG</span><span style=\"color: #BABED8\">(salary) </span><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> employees;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">ELSEIF num</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">2</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">THEN</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">MIN</span><span style=\"color: #BABED8\">(salary) </span><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> employees;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">ELSE</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">MAX</span><span style=\"color: #BABED8\">(salary) </span><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> employees;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">END</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">IF</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">COUNT</span><span style=\"color: #BABED8\">(</span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\">) </span><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> employees;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">END</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">//</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">DELIMITER ;</span></span></code></pre></div><p><strong>举例 2</strong> ：</p>\n<p>当市场环境不好时，公司为了渡过难关，决定暂时降低大家的薪资。声明存储过程“leave_while()”，声明OUT参数num，输出循环次数，存储过程中使用WHILE循环给大家降低薪资为原来薪资的90%，直到全公司的平均薪资小于等于 10000 ，并统计循环次数。</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">DELIMITER </span><span style=\"color: #89DDFF\">//</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">CREATE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">PROCEDURE</span><span style=\"color: #BABED8\"> leave_while(</span><span style=\"color: #F78C6C\">OUT</span><span style=\"color: #BABED8\"> num </span><span style=\"color: #C792EA\">INT</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">BEGIN</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">#</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> avg_sal DOUBLE;#记录平均工资</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> while_count </span><span style=\"color: #C792EA\">INT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">DEFAULT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">; #记录循环次数</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">AVG</span><span style=\"color: #BABED8\">(salary) </span><span style=\"color: #F78C6C\">INTO</span><span style=\"color: #BABED8\"> avg_sal </span><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> employees; #① 初始化条件</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">while_label:</span><span style=\"color: #F78C6C\">WHILE</span><span style=\"color: #BABED8\"> TRUE DO #② 循环条件</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">#③ 循环体</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">IF</span><span style=\"color: #BABED8\"> avg_sal </span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">10000</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">THEN</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">LEAVE while_label;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">END</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">IF</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">UPDATE</span><span style=\"color: #BABED8\"> employees </span><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> salary </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> salary </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">9</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> while_count </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> while_count </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">#④ 迭代条件</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">AVG</span><span style=\"color: #BABED8\">(salary) </span><span style=\"color: #F78C6C\">INTO</span><span style=\"color: #BABED8\"> avg_sal </span><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> employees;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">END</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">WHILE</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">#赋值</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> num </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> while_count;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">END</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">//</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">DELIMITER ;</span></span></code></pre></div><h3 id=\"3-7-跳转语句之ITERATE语句\"><a href=\"#3-7-跳转语句之ITERATE语句\" class=\"headerlink\" title=\"3. 7 跳转语句之ITERATE语句\"></a>3. 7 跳转语句之ITERATE语句</h3><p>ITERATE语句：只能用在循环语句（LOOP、REPEAT和WHILE语句）内，表示重新开始循环，将执行顺序转到语句段开头处。如果你有面向过程的编程语言的使用经验，你可以把 ITERATE 理解为 continue，意思为“再次循环”。</p>\n<p>语句基本格式如下：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">ITERATE label</span></span></code></pre></div><p>label参数表示循环的标志。ITERATE语句必须跟在循环标志前面。</p>\n<p><strong>举例</strong>： 定义局部变量num，初始值为 0 。循环结构中执行num + 1操作。</p>\n<ul>\n<li><p>如果num &lt; 10，则继续执行循环；</p>\n</li>\n<li><p>如果num &gt; 15，则退出循环结构；</p>\n</li>\n</ul>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">DELIMITER </span><span style=\"color: #89DDFF\">//</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">CREATE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">PROCEDURE</span><span style=\"color: #BABED8\"> test_iterate</span><span style=\"color: #89DDFF\">()</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">BEGIN</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> num </span><span style=\"color: #C792EA\">INT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">DEFAULT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">my_loop:</span><span style=\"color: #F78C6C\">LOOP</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> num </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> num </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">IF</span><span style=\"color: #BABED8\"> num </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">10</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">THEN</span><span style=\"color: #BABED8\"> ITERATE my_loop;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">ELSEIF num </span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">15</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">THEN</span><span style=\"color: #BABED8\"> LEAVE my_loop;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">END</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">IF</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">尚硅谷：让天下没有难学的技术</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">END</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">LOOP</span><span style=\"color: #BABED8\"> my_loop;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">END</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">//</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">DELIMITER ;</span></span></code></pre></div><h2 id=\"4-游标\"><a href=\"#4-游标\" class=\"headerlink\" title=\"4. 游标\"></a>4. 游标</h2><h3 id=\"4-1-什么是游标（或光标）\"><a href=\"#4-1-什么是游标（或光标）\" class=\"headerlink\" title=\"4. 1 什么是游标（或光标）\"></a>4. 1 什么是游标（或光标）</h3><p>虽然我们也可以通过筛选条件 WHERE 和 HAVING，或者是限定返回记录的关键字 LIMIT 返回一条记录，但是，却无法在结果集中像指针一样，向前定位一条记录、向后定位一条记录，或者是<strong>随意定位到某一条记录</strong>，并对记录的数据进行处理。</p>\n<p>这个时候，就可以用到游标。游标，提供了一种灵活的操作方式，让我们能够对结果集中的每一条记录进行定位，并对指向的记录中的数据进行操作的数据结构。 <strong>游标让 SQL 这种面向集合的语言有了面向过程开发的能力</strong>。</p>\n<p>在 SQL 中，游标是一种临时的数据库对象，可以指向存储在数据库表中的数据行指针。这里游标<strong>充当了指针的作用</strong>，我们可以通过操作游标来对数据行进行操作。</p>\n<p>MySQL中游标可以在存储过程和函数中使用。</p>\n<p>比如，我们查询了 employees 数据表中工资高于 15000 的员工都有哪些：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> employee_id,last_name,salary </span><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> employees</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">WHERE</span><span style=\"color: #BABED8\"> salary </span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">15000</span><span style=\"color: #BABED8\">;</span></span></code></pre></div><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221026195825863.png\" alt=\"image-20221026195825863\"></p>\n<p>这里我们就可以通过游标来操作数据行，如图所示此时游标所在的行是“108”的记录，我们也可以在结果集上滚动游标，指向结果集中的任意一行。</p>\n<h3 id=\"4-2-使用游标步骤\"><a href=\"#4-2-使用游标步骤\" class=\"headerlink\" title=\"4. 2 使用游标步骤\"></a>4. 2 使用游标步骤</h3><p>游标必须在声明处理程序之前被声明，并且变量和条件还必须在声明游标或处理程序之前被声明。</p>\n<p>如果我们想要使用游标，一般需要经历四个步骤。不同的 DBMS 中，使用游标的语法可能略有不同。</p>\n<p><strong>第一步，声明游标</strong></p>\n<p>在MySQL中，使用DECLARE关键字来声明游标，其语法的基本形式如下：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> cursor_name </span><span style=\"color: #F78C6C\">CURSOR</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">FOR</span><span style=\"color: #BABED8\"> select_statement;</span></span></code></pre></div><p>这个语法适用于 MySQL，SQL Server，DB2 和 MariaDB。如果是用 Oracle 或者 PostgreSQL，需要写成：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> cursor_name </span><span style=\"color: #F78C6C\">CURSOR</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">IS</span><span style=\"color: #BABED8\"> select_statement;</span></span></code></pre></div><p>要使用 SELECT 语句来获取数据结果集，而此时还没有开始遍历数据，这里 select_statement 代表的是SELECT 语句，返回一个用于创建游标的结果集。</p>\n<p>比如：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> cur_emp </span><span style=\"color: #F78C6C\">CURSOR</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">FOR</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> employee_id,salary </span><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> employees;</span></span></code></pre></div><div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> cursor_fruit </span><span style=\"color: #F78C6C\">CURSOR</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">FOR</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> f_name, f_price </span><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> fruits ;</span></span></code></pre></div><p><strong>第二步，打开游标</strong></p>\n<p>打开游标的语法如下：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">OPEN</span><span style=\"color: #BABED8\"> cursor_name</span></span></code></pre></div><p>当我们定义好游标之后，如果想要使用游标，必须先打开游标。打开游标的时候 SELECT 语句的查询结果集就会送到游标工作区，为后面游标的<strong>逐条读取</strong>结果集中的记录做准备。</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">OPEN</span><span style=\"color: #BABED8\"> cur_emp ;</span></span></code></pre></div><p><strong>第三步，使用游标（从游标中取得数据）</strong></p>\n<p>语法如下：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">FETCH</span><span style=\"color: #BABED8\"> cursor_name </span><span style=\"color: #F78C6C\">INTO</span><span style=\"color: #BABED8\"> var_name [, var_name] ...</span></span></code></pre></div><p>这句的作用是使用 cursor_name 这个游标来读取当前行，并且将数据保存到 var_name 这个变量中，游标指针指到下一行。如果游标读取的数据行有多个列名，则在 INTO 关键字后面赋值给多个变量名即可。</p>\n<p>注意：var_name必须在声明游标之前就定义好。</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">FETCH</span><span style=\"color: #BABED8\"> cur_emp </span><span style=\"color: #F78C6C\">INTO</span><span style=\"color: #BABED8\"> emp_id, emp_sal ;</span></span></code></pre></div><p>注意： <strong>游标的查询结果集中的字段数，必须跟 INTO 后面的变量数一致</strong> ，否则，在存储过程执行的时候，MySQL 会提示错误。</p>\n<p><strong>第四步，关闭游标</strong></p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">CLOSE</span><span style=\"color: #BABED8\"> cursor_name</span></span></code></pre></div><p>有 OPEN 就会有 CLOSE，也就是打开和关闭游标。当我们使用完游标后需要关闭掉该游标。因为游标会<strong>占用系统资源</strong>，如果不及时关闭， <strong>游标会一直保持到存储过程结束</strong> ，影响系统运行的效率。而关闭游标的操作，会释放游标占用的系统资源。</p>\n<p>关闭游标之后，我们就不能再检索查询结果中的数据行，如果需要检索只能再次打开游标。</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">CLOSE</span><span style=\"color: #BABED8\"> cur_emp;</span></span></code></pre></div><h3 id=\"4-3-举例\"><a href=\"#4-3-举例\" class=\"headerlink\" title=\"4. 3 举例\"></a>4. 3 举例</h3><p>创建存储过程“get_count_by_limit_total_salary()”，声明IN参数 limit_total_salary，DOUBLE类型；声明OUT参数total_count，INT类型。函数的功能可以实现累加薪资最高的几个员工的薪资值，直到薪资总和达到limit_total_salary参数的值，返回累加的人数给total_count。</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">DELIMITER </span><span style=\"color: #89DDFF\">//</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">CREATE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">PROCEDURE</span><span style=\"color: #BABED8\"> get_count_by_limit_total_salary(</span><span style=\"color: #F78C6C\">IN</span><span style=\"color: #BABED8\"> limit_total_salary DOUBLE,</span><span style=\"color: #F78C6C\">OUT</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">total_count </span><span style=\"color: #C792EA\">INT</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">BEGIN</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> sum_salary DOUBLE </span><span style=\"color: #C792EA\">DEFAULT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">; #记录累加的总工资</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> cursor_salary DOUBLE </span><span style=\"color: #C792EA\">DEFAULT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">; #记录某一个工资值</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> emp_count </span><span style=\"color: #C792EA\">INT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">DEFAULT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">; #记录循环个数</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">#定义游标</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">DECLARE</span><span style=\"color: #BABED8\"> emp_cursor </span><span style=\"color: #F78C6C\">CURSOR</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">FOR</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> salary </span><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> employees </span><span style=\"color: #F78C6C\">ORDER BY</span><span style=\"color: #BABED8\"> salary </span><span style=\"color: #F78C6C\">DESC</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">#打开游标</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">OPEN</span><span style=\"color: #BABED8\"> emp_cursor;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">REPEAT</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">#使用游标（从游标中获取数据）</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">FETCH</span><span style=\"color: #BABED8\"> emp_cursor </span><span style=\"color: #F78C6C\">INTO</span><span style=\"color: #BABED8\"> cursor_salary;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> sum_salary </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> sum_salary </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> cursor_salary;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> emp_count </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> emp_count </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">UNTIL sum_salary </span><span style=\"color: #89DDFF\">&gt;=</span><span style=\"color: #BABED8\"> limit_total_salary</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">END</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">REPEAT</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> total_count </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> emp_count;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">#关闭游标</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">CLOSE</span><span style=\"color: #BABED8\"> emp_cursor;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">END</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">//</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">DELIMITER ;</span></span></code></pre></div><h3 id=\"4-5-小结\"><a href=\"#4-5-小结\" class=\"headerlink\" title=\"4. 5 小结\"></a>4. 5 小结</h3><p>游标是 MySQL 的一个重要的功能，为<strong>逐条读取</strong>结果集中的数据，提供了完美的解决方案。跟在应用层面实现相同的功能相比，游标可以在存储程序中使用，效率高，程序也更加简洁。</p>\n<p>但同时也会带来一些性能问题，比如在使用游标的过程中，会对数据行进行<strong>加锁</strong>，这样在业务并发量大的时候，不仅会影响业务之间的效率，还会<strong>消耗系统资源</strong>，造成内存不足，这是因为游标是在内存中进行的处理。</p>\n<p>建议：养成用完之后就关闭的习惯，这样才能提高系统的整体效率。</p>\n<h2 id=\"补充：MySQL-8-0-的新特性—全局变量的持久化\"><a href=\"#补充：MySQL-8-0-的新特性—全局变量的持久化\" class=\"headerlink\" title=\"补充：MySQL 8. 0 的新特性—全局变量的持久化\"></a>补充：MySQL 8. 0 的新特性—全局变量的持久化</h2><p>在MySQL数据库中，全局变量可以通过SET GLOBAL语句来设置。例如，设置服务器语句超时的限制，可以通过设置系统变量max_execution_time来实现：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">GLOBAL</span><span style=\"color: #BABED8\"> MAX_EXECUTION_TIME</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">2000</span><span style=\"color: #BABED8\">;</span></span></code></pre></div><p>使用SET GLOBAL语句设置的变量值只会<strong>临时生效</strong>。<strong>数据库重启</strong>后，服务器又会从MySQL配置文件中读取变量的默认值。 MySQL 8.0版本新增了<strong>SET PERSIST</strong>命令。例如，设置服务器的最大连接数为 1000 ：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">SET</span><span style=\"color: #BABED8\"> PERSIST </span><span style=\"color: #F78C6C\">global</span><span style=\"color: #BABED8\"> max_connections </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1000</span><span style=\"color: #BABED8\">;</span></span></code></pre></div><p>MySQL会将该命令的配置保存到数据目录下的<strong>mysqld-auto.cnf</strong>文件中，下次启动时会读取该文件，用其中的配置来覆盖默认的配置文件。</p>\n<p>举例：</p>\n<p>查看全局变量max_connections的值，结果如下：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">mysql</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> show variables </span><span style=\"color: #F78C6C\">like</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">%max_connections%</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">+</span><span style=\"color: #676E95; font-style: italic\">------------------------+-------+</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| Variable_name | </span><span style=\"color: #F78C6C\">Value</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">+</span><span style=\"color: #676E95; font-style: italic\">------------------------+-------+</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| max_connections | </span><span style=\"color: #F78C6C\">151</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| mysqlx_max_connections | </span><span style=\"color: #F78C6C\">100</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">+</span><span style=\"color: #676E95; font-style: italic\">------------------------+-------+</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">rows</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">in</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">set</span><span style=\"color: #BABED8\">, </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\"> warning (</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">00</span><span style=\"color: #BABED8\"> sec)</span></span></code></pre></div><p>设置全局变量max_connections的值：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">mysql</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">set</span><span style=\"color: #BABED8\"> persist max_connections</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">1000</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">Query OK, </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">rows</span><span style=\"color: #BABED8\"> affected (</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">00</span><span style=\"color: #BABED8\"> sec)</span></span></code></pre></div><p><strong>重启MySQL服务器</strong>，再次查询max_connections的值：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">mysql</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> show variables </span><span style=\"color: #F78C6C\">like</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">%max_connections%</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">+</span><span style=\"color: #676E95; font-style: italic\">------------------------+-------+</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| Variable_name | </span><span style=\"color: #F78C6C\">Value</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">+</span><span style=\"color: #676E95; font-style: italic\">------------------------+-------+</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| max_connections | </span><span style=\"color: #F78C6C\">1000</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| mysqlx_max_connections | </span><span style=\"color: #F78C6C\">100</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">+</span><span style=\"color: #676E95; font-style: italic\">------------------------+-------+</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">rows</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">in</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">set</span><span style=\"color: #BABED8\">, </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\"> warning (</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">00</span><span style=\"color: #BABED8\"> sec)</span></span></code></pre></div><hr>\n<h1 id=\"第-17-章-触发器\"><a href=\"#第-17-章-触发器\" class=\"headerlink\" title=\"第 17 章_触发器\"></a>第 17 章_触发器</h1><p>在实际开发中，我们经常会遇到这样的情况：有 2 个或者多个相互关联的表，如<strong>商品信息</strong>和<strong>库存信息</strong>分别存放在 2 个不同的数据表中，我们在添加一条新商品记录的时候，为了保证数据的完整性，必须同时在库存表中添加一条库存记录。</p>\n<p>这样一来，我们就必须把这两个关联的操作步骤写到程序里面，而且要用<strong>事务</strong>包裹起来，确保这两个操作成为一个<strong>原子操作</strong>，要么全部执行，要么全部不执行。要是遇到特殊情况，可能还需要对数据进行手动维护，这样就<strong>很容易忘记其中的一步</strong>，导致数据缺失。</p>\n<p>这个时候，咱们可以使用触发器。 <strong>你可以创建一个触发器，让商品信息数据的插入操作自动触发库存数据的插入操作。</strong> 这样一来，就不用担心因为忘记添加库存数据而导致的数据缺失了。</p>\n<h2 id=\"1-触发器概述\"><a href=\"#1-触发器概述\" class=\"headerlink\" title=\"1. 触发器概述\"></a>1. 触发器概述</h2><p>MySQL从<strong>5.0.2</strong>版本开始支持触发器。MySQL的触发器和存储过程一样，都是嵌入到MySQL服务器的一段程序。</p>\n<p>触发器是由<strong>事件来触发</strong>某个操作，这些事件包括<strong>INSERT、UPDATE、DELETE</strong>事件。所谓事件就是指用户的动作或者触发某项行为。如果定义了触发程序，当数据库执行这些语句时候，就相当于事件发生了，就会<strong>自动</strong>激发触发器执行相应的操作。</p>\n<p>当对数据表中的数据执行插入、更新和删除操作，需要自动执行一些数据库逻辑时，可以使用触发器来实现。</p>\n<h2 id=\"2-触发器的创建\"><a href=\"#2-触发器的创建\" class=\"headerlink\" title=\"2. 触发器的创建\"></a>2. 触发器的创建</h2><h3 id=\"2-1-创建触发器语法\"><a href=\"#2-1-创建触发器语法\" class=\"headerlink\" title=\"2. 1 创建触发器语法\"></a>2. 1 创建触发器语法</h3><p>创建触发器的语法结构是：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221026202258345.png\" alt=\"image-20221026202258345\"></p>\n<p>说明：</p>\n<ul>\n<li><p><code>表名</code>：表示触发器监控的对象。</p>\n</li>\n<li><p><code>BEFORE|AFTER</code>：表示触发的时间。BEFORE 表示在事件之前触发；AFTER 表示在事件之后触发。</p>\n</li>\n<li><p><code>INSERT|UPDATE|DELETE</code>：表示触发的事件。</p>\n<ul>\n<li>INSERT 表示插入记录时触发；</li>\n<li>UPDATE 表示更新记录时触发；</li>\n<li>DELETE 表示删除记录时触发。</li>\n</ul>\n</li>\n<li><p><code>触发器执行的语句块</code>：可以是单条SQL语句，也可以是由BEGIN…END结构组成的复合语句块。</p>\n</li>\n</ul>\n<h3 id=\"2-2-代码举例-1\"><a href=\"#2-2-代码举例-1\" class=\"headerlink\" title=\"2. 2 代码举例\"></a>2. 2 代码举例</h3><p><strong>举例 1</strong> ：</p>\n<p>1 、创建数据表：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221026202351761.png\" alt=\"image-20221026202351761\"></p>\n<p>2 、创建触发器：创建名称为before_insert的触发器，向test_trigger数据表插入数据之前，向test_trigger_log数据表中插入before_insert的日志信息。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221026202412638.png\" alt=\"image-20221026202412638\"></p>\n<p>3 、向test_trigger数据表中插入数据</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221026202427613.png\" alt=\"image-20221026202427613\"></p>\n<p>4 、查看test_trigger_log数据表中的数据</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221026202438551.png\" alt=\"image-20221026202438551\"></p>\n<p><strong>举例 2</strong> ：</p>\n<p>1 、创建名称为after_insert的触发器，向test_trigger数据表插入数据之后，向test_trigger_log数据表中插入after_insert的日志信息。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221026202500365.png\" alt=\"image-20221026202500365\"></p>\n<p>2 、向test_trigger数据表中插入数据。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221026202515513.png\" alt=\"image-20221026202515513\"></p>\n<p>3 、查看test_trigger_log数据表中的数据</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221026202528716.png\" alt=\"image-20221026202528716\"></p>\n<p><strong>举例 3 ：</strong> 定义触发器“salary_check_trigger”，基于员表“employees”的INSERT事件，在INSERT之前检查将要添加的新员工薪资是否大于他领导的薪资，如果大于领导薪资，则报sqlstate_value为’HY000’的错误，从而使得添加失败。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221026202549188.png\" alt=\"image-20221026202549188\"></p>\n<p>上面触发器声明过程中的NEW关键字代表INSERT添加语句的新记录。</p>\n<h2 id=\"3-查看、删除触发器\"><a href=\"#3-查看、删除触发器\" class=\"headerlink\" title=\"3. 查看、删除触发器\"></a>3. 查看、删除触发器</h2><h3 id=\"3-1-查看触发器\"><a href=\"#3-1-查看触发器\" class=\"headerlink\" title=\"3. 1 查看触发器\"></a>3. 1 查看触发器</h3><p>查看触发器是查看数据库中已经存在的触发器的定义、状态和语法信息等。</p>\n<p>方式 1 ：查看当前数据库的所有触发器的定义</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">SHOW TRIGGERS\\G</span></span></code></pre></div><p>方式 2 ：查看当前数据库中某个触发器的定义</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">SHOW </span><span style=\"color: #F78C6C\">CREATE</span><span style=\"color: #BABED8\"> TRIGGER 触发器名</span></span></code></pre></div><p>方式 3 ：从系统库information_schema的TRIGGERS表中询“salary_check_trigger”触发器的信息。</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> information_schema.TRIGGERS;</span></span></code></pre></div><h3 id=\"3-2-删除触发器\"><a href=\"#3-2-删除触发器\" class=\"headerlink\" title=\"3. 2 删除触发器\"></a>3. 2 删除触发器</h3><p>触发器也是数据库对象，删除触发器也用DROP语句，语法格式如下：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">DROP</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">TRIGGER</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">IF</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">EXISTS</span><span style=\"color: #BABED8\"> 触发器名称;</span></span></code></pre></div><h2 id=\"4-触发器的优缺点\"><a href=\"#4-触发器的优缺点\" class=\"headerlink\" title=\"4. 触发器的优缺点\"></a>4. 触发器的优缺点</h2><h3 id=\"4-1-优点\"><a href=\"#4-1-优点\" class=\"headerlink\" title=\"4. 1 优点\"></a>4. 1 优点</h3><p><strong>1 、触发器可以确保数据的完整性</strong> 。</p>\n<p>假设我们用<strong>进货单头表</strong>（demo.importhead）来保存进货单的总体信息，包括进货单编号、供货商编号、仓库编号、总计进货数量、总计进货金额和验收日期。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221026202744728.png\" alt=\"image-20221026202744728\"></p>\n<p>用<strong>进货单明细表</strong>（demo.importdetails）来保存进货商品的明细，包括进货单编号、商品编号、进货数量、进货价格和进货金额。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221026202804843.png\" alt=\"image-20221026202804843\"></p>\n<p>每当我们录入、删除和修改一条进货单明细数据的时候，进货单明细表里的数据就会发生变动。这个时候，在进货单头表中的总计数量和总计金额就必须重新计算，否则，进货单头表中的总计数量和总计金额就不等于进货单明细表中数量合计和金额合计了，这就是数据不一致。</p>\n<p>为了解决这个问题，我们就可以使用触发器， <strong>规定每当进货单明细表有数据插入、修改和删除的操作时，自动触发 2 步操作</strong>：</p>\n<p>1 ）重新计算进货单明细表中的数量合计和金额合计；</p>\n<p>2 ）用第一步中计算出来的值更新进货单头表中的合计数量与合计金额。</p>\n<p>这样一来，进货单头表中的合计数量与合计金额的值，就始终与进货单明细表中计算出来的合计数量与合计金额的值相同，数据就是一致的，不会互相矛盾。</p>\n<p><strong>2 、触发器可以帮助我们记录操作日志</strong>。</p>\n<p>利用触发器，可以具体记录什么时间发生了什么。比如，记录修改会员储值金额的触发器，就是一个很好的例子。这对我们还原操作执行时的具体场景，更好地定位问题原因很有帮助。</p>\n<p><strong>3 、触发器还可以用在操作数据前，对数据进行合法性检查</strong>。</p>\n<p>比如，超市进货的时候，需要库管录入进货价格。但是，人为操作很容易犯错误，比如说在录入数量的时候，把条形码扫进去了；录入金额的时候，看串了行，录入的价格远超售价，导致账面上的巨亏……这些都可以通过触发器，在实际插入或者更新操作之前，对相应的数据进行检查，及时提示错误，防止错误数据进入系统。</p>\n<h3 id=\"4-2-缺点\"><a href=\"#4-2-缺点\" class=\"headerlink\" title=\"4. 2 缺点\"></a>4. 2 缺点</h3><p><strong>1 、触发器最大的一个问题就是可读性差</strong>。</p>\n<p>因为触发器存储在数据库中，并且由事件驱动，这就意味着触发器有可能不受应用层的控制。这对系统维护是非常有挑战的。</p>\n<p>比如，创建触发器用于修改会员储值操作。如果触发器中的操作出了问题，会导致会员储值金额更新失败。我用下面的代码演示一下：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221026202938685.png\" alt=\"image-20221026202938685\"></p>\n<p>结果显示，系统提示错误，字段“aa”不存在。</p>\n<p>这是因为，触发器中的数据插入操作多了一个字段，系统提示错误。可是，如果你不了解这个触发器，很可能会认为是更新语句本身的问题，或者是会员信息表的结构出了问题。说不定你还会给会员信息表添加一个叫“aa”的字段，试图解决这个问题，结果只能是白费力。</p>\n<p><strong>2 、相关数据的变更，可能会导致触发器出错。</strong></p>\n<p>特别是数据表结构的变更，都可能会导致触发器出错，进而影响数据操作的正常运行。这些都会由于触发器本身的隐蔽性，影响到应用中错误原因排查的效率。</p>\n<h3 id=\"4-3-注意点\"><a href=\"#4-3-注意点\" class=\"headerlink\" title=\"4. 3 注意点\"></a>4. 3 注意点</h3><p>注意，如果在子表中定义了外键约束，并且外键指定了ON UPDATE&#x2F;DELETE CASCADE&#x2F;SET NULL子句，此时修改父表被引用的键值或删除父表被引用的记录行时，也会引起子表的修改和删除操作，此时基于子表的UPDATE和DELETE语句定义的触发器并不会被激活。</p>\n<p>例如：基于子表员工表（t_employee）的DELETE语句定义了触发器t1，而子表的部门编号（did）字段定义了外键约束引用了父表部门表（t_department）的主键列部门编号（did），并且该外键加了“ON<br>DELETE SET NULL”子句，那么如果此时删除父表部门表（t_department）在子表员工表（t_employee）有匹配记录的部门记录时，会引起子表员工表（t_employee）匹配记录的部门编号（did）修改为NULL，</p>\n<p>但是此时不会激活触发器t1。只有直接对子表员工表（t_employee）执行DELETE语句时才会激活触发器t1。</p>\n<hr>\n<h1 id=\"第-18-章-MySQL-8-其它新特性\"><a href=\"#第-18-章-MySQL-8-其它新特性\" class=\"headerlink\" title=\"第 18 章_MySQL 8 其它新特性\"></a>第 18 章_MySQL 8 其它新特性</h1><h2 id=\"1-MySQL-8-新特性概述\"><a href=\"#1-MySQL-8-新特性概述\" class=\"headerlink\" title=\"1. MySQL 8 新特性概述\"></a>1. MySQL 8 新特性概述</h2><p><strong>MySQL从5.7版本直接跳跃发布了8.0版本</strong>，可见这是一个令人兴奋的里程碑版本。MySQL 8版本在功能上做了显著的改进与增强，开发者对MySQL的源代码进行了重构，最突出的一点是多MySQL Optimizer优化器进行了改进。不仅在速度上得到了改善，还为用户带来了更好的性能和更棒的体验。</p>\n<h3 id=\"1-1-MySQL-8-0-新增特性\"><a href=\"#1-1-MySQL-8-0-新增特性\" class=\"headerlink\" title=\"1. 1 MySQL 8. 0 新增特性\"></a>1. 1 MySQL 8. 0 新增特性</h3><p><strong>1. 更简便的NoSQL支持</strong> NoSQL泛指非关系型数据库和数据存储。随着互联网平台的规模飞速发展，传统的关系型数据库已经越来越不能满足需求。从5.6版本开始，MySQL就开始支持简单的NoSQL存储功能。MySQL 8对这一功能做了优化，以更灵活的方式实现NoSQL功能，不再依赖模式（schema）。</p>\n<p><strong>2. 更好的索引</strong> 在查询中，正确地使用索引可以提高查询的效率。MySQL 8中新增了<strong>隐藏索引</strong>和<strong>降序索引</strong>。隐藏索引可以用来测试去掉索引对查询性能的影响。在查询中混合存在多列索引时，使用降序索引可以提高查询的性能。</p>\n<p><strong>3 .更完善的JSON支持</strong> MySQL从5.7开始支持原生JSON数据的存储，MySQL 8对这一功能做了优化，增加了聚合函数**JSON_ARRAYAGG()<strong>和</strong>JSON_OBJECTAGG()**，将参数聚合为JSON数组或对象，新增了行内操作符 -&gt;&gt;，是列路径运算符 -&gt;的增强，对JSON排序做了提升，并优化了JSON的更新操作。</p>\n<p><strong>4 .安全和账户管理</strong> MySQL 8中新增了<strong>caching_sha2_password</strong> 授权插件、角色、密码历史记录和FIPS模式支持，这些特性提高了数据库的安全性和性能，使数据库管理员能够更灵活地进行账户管理工作。</p>\n<p><strong>5 .InnoDB的变化</strong> <strong>InnoDB是MySQL默认的存储引擎</strong>，是事务型数据库的首选引擎，支持事务安全表（ACID），支持行锁定和外键。在MySQL 8 版本中，InnoDB在自增、索引、加密、死锁、共享锁等方面做了大量的<strong>改进和优化</strong>，并且支持原子数据定义语言（DDL），提高了数据安全性，对事务提供更好的支持。</p>\n<p><strong>6 .数据字典</strong> 在之前的MySQL版本中，字典数据都存储在元数据文件和非事务表中。从MySQL 8开始新增了事务数据字典，在这个字典里存储着数据库对象信息，这些数据字典存储在内部事务表中。</p>\n<p><strong>7. 原子数据定义语句</strong> MySQL 8开始支持原子数据定义语句（Automic DDL），即原子DDL。目前，只有InnoDB存储引擎支持<strong>原子DDL</strong>。原子数据定义语句（DDL）将与DDL操作相关的数据字典更新、存储引擎操作、二进制日志写入结合到一个单独的原子事务中，这使得即使服务器崩溃，事务也会提交或回滚。使用支持原子操作的存储引擎所创建的表，在执行DROP TABLE、CREATE TABLE、ALTER TABLE、RENAME TABLE、TRUNCATE TABLE、CREATE TABLESPACE、DROP TABLESPACE等操作时，都支持原子操作，即事务要么完全操作成功，要么失败后回滚，不再进行部分提交。 对于从MySQL 5.7复制到MySQL 8版本中的语句，可以添加<strong>IF EXISTS</strong>或<strong>IF NOT EXISTS</strong>语句来避免发生错误。</p>\n<p><strong>8 .资源管理</strong> MySQL 8开始支持创建和管理资源组，允许将服务器内运行的线程分配给特定的分组，以便线程根据组内可用资源执行。组属性能够控制组内资源，启用或限制组内资源消耗。数据库管理员能够根据不同的工作负载适当地更改这些属性。 目前，CPU时间是可控资源，由“虚拟CPU”这个概念来表示，此术语包含CPU的核心数，超线程，硬件线程等等。服务器在启动时确定可用的虚拟CPU数量。拥有对应权限的数据库管理员可以将这些CPU与资源组关联，并为资源组分配线程。 资源组组件为MySQL中的资源组管理提供了SQL接口。资源组的属性用于定义资源组。MySQL中存在两个默认组，系统组和用户组，默认的组不能被删除，其属性也不能被更改。对于用户自定义的组，资源组创建时可初始化所有的属性，除去名字和类型，其他属性都可在创建之后进行更改。 在一些平台下，或进行了某些MySQL的配置时，资源管理的功能将受到限制，甚至不可用。例如，如果安装了线程池插件，或者使用的是macOS系统，资源管理将处于不可用状态。在FreeBSD和Solaris系统中，资源线程优先级将失效。在Linux系统中，只有配置了CAP_SYS_NICE属性，资源管理优先级才能发挥作用。</p>\n<p><strong>9 .字符集支持</strong> MySQL 8中默认的字符集由<strong>latin1</strong>更改为<strong>utf8mb4</strong>，并首次增加了日语所特定使用的集合，utf8mb4_ja_0900_as_cs。</p>\n<p><strong>10 .优化器增强</strong> MySQL优化器开始支持隐藏索引和降序索引。隐藏索引不会被优化器使用，验证索引的必要性时不需要删除索引，先将索引隐藏，如果优化器性能无影响就可以真正地删除索引。降序索引允许优化器对多个列进行排序，并且允许排序顺序不一致。</p>\n<p><strong>11 .公用表表达式</strong> 公用表表达式（Common Table Expressions）简称为CTE，MySQL现在支持递归和非递归两种形式的CTE。CTE通过在SELECT语句或其他特定语句前<strong>使用WITH语句对临时结果集</strong>进行命名。</p>\n<p>基础语法如下：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">WITH</span><span style=\"color: #BABED8\"> cte_name (col_name1,col_name2 ...) </span><span style=\"color: #F78C6C\">AS</span><span style=\"color: #BABED8\"> (Subquery)</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> cte_name;</span></span></code></pre></div><p>Subquery代表子查询，子查询前使用WITH语句将结果集命名为cte_name，在后续的查询中即可使用cte_name进行查询。</p>\n<p><strong>12 .窗口函数</strong> MySQL 8开始支持窗口函数。在之前的版本中已存在的大部分<strong>聚合函数</strong>在MySQL 8中也可以作为窗口函数来使用。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221026203453730.png\" alt=\"image-20221026203453730\"></p>\n<p><strong>13 .正则表达式支持</strong> MySQL在8.0.4以后的版本中采用支持Unicode的国际化组件库实现正则表达式操作，这种方式不仅能提供完全的Unicode支持，而且是多字节安全编码。MySQL增加了REGEXP_LIKE()、EGEXP_INSTR()、REGEXP_REPLACE()和 REGEXP_SUBSTR()等函数来提升性能。另外，regexp_stack_limit和regexp_time_limit 系统变量能够通过匹配引擎来控制资源消耗。</p>\n<p><strong>14 .内部临时表</strong>   <strong>TempTable存储引擎取代MEMORY存储引擎成为内部临时表的默认存储引擎</strong>。TempTable存储引擎为VARCHAR和VARBINARY列提供高效存储。internal_tmp_mem_storage_engine会话变量定义了内部临时表的存储引擎，可选的值有两个，TempTable和MEMORY，其中TempTable为默认的存储引擎。temptable_max_ram系统配置项定义了TempTable存储引擎可使用的最大内存数量。</p>\n<p><strong>15 .日志记录</strong> 在MySQL 8中错误日志子系统由一系列MySQL组件构成。这些组件的构成由系统变量log_error_services来配置，能够实现日志事件的过滤和写入。</p>\n<p><strong>16 .备份锁</strong> 新的备份锁允许在线备份期间执行数据操作语句，同时阻止可能造成快照不一致的操作。新备份锁由 LOCK INSTANCE FOR BACKUP 和 UNLOCK INSTANCE 语法提供支持，执行这些操作需要备份管理员特权。</p>\n<p><strong>17 .增强的MySQL复制</strong> MySQL 8复制支持对<strong>JSON文档</strong>进行部分更新的<strong>二进制日志记录</strong>，该记录<strong>使用紧凑的二进制格式</strong>，从而节省记录完整JSON文档的空间。当使用基于语句的日志记录时，这种紧凑的日志记录会自动完成，并且可以通过将新的binlog_row_value_options系统变量值设置为PARTIAL_JSON来启用。</p>\n<h3 id=\"1-2-MySQL-8-0-移除的旧特性\"><a href=\"#1-2-MySQL-8-0-移除的旧特性\" class=\"headerlink\" title=\"1. 2 MySQL 8. 0 移除的旧特性\"></a>1. 2 MySQL 8. 0 移除的旧特性</h3><p>在MySQL 5.7版本上开发的应用程序如果使用了MySQL8.0 移除的特性，语句可能会失败，或者产生不同的执行结果。为了避免这些问题，对于使用了移除特性的应用，应当尽力修正避免使用这些特性，并尽可能使用替代方法。</p>\n<p><strong>1. 查询缓存</strong>    <strong>查询缓存已被移除</strong>，删除的项有： </p>\n<p><strong>（ 1 ）语句：</strong> FLUSH QUERY CACHE和RESET QUERYCACHE。 </p>\n<p><strong>（ 2 ）系统变量：</strong> query_cache_limit、query_cache_min_res_unit、query_cache_size、query_cache_type、query_cache_wlock_invalidate。 </p>\n<p><strong>（ 3 ）状态变量：</strong> Qcache_free_blocks、Qcache_free_memory、Qcache_hits、Qcache_inserts、Qcache_lowmem_prunes、Qcache_not_cached、Qcache_queries_in_cache、Qcache_total_blocks。 </p>\n<p><strong>（ 4 ）线程状态：</strong> checking privileges on cached  query、checking query cache for query、invalidating query cache entries、sending cached result to client、storing result in query cache、waiting for query cache lock。</p>\n<p><strong>2 .加密相关</strong> 删除的加密相关的内容有：ENCODE()、DECODE()、ENCRYPT()、DES_ENCRYPT()和DES_DECRYPT()函数，配置项des-key-file，系统变量have_crypt，FLUSH语句的DES_KEY_FILE选项，HAVE_CRYPT CMake选项。 对于移除的ENCRYPT()函数，考虑使用SHA2()替代，对于其他移除的函数，使用AES_ENCRYPT()和AES_DECRYPT()替代。</p>\n<p><strong>3 .空间函数相关</strong> 在MySQL 5.7版本中，多个空间函数已被标记为过时。这些过时函数在MySQL 8中都已被移除，只保留了对应的ST_和MBR函数。</p>\n<p><strong>4 .\\N和NULL</strong> 在SQL语句中，解析器不再将\\N视为NULL，所以在SQL语句中应使用NULL代替\\N。这项变化不会影响使用LOAD DATA INFILE或者SELECT…INTO OUTFILE操作文件的导入和导出。在这类操作中，NULL仍等同于\\N。</p>\n<p><strong>5. mysql_install_db</strong> 在MySQL分布中，已移除了mysql_install_db程序，数据字典初始化需要调用带着–initialize或者–initialize-insecure选项的mysqld来代替实现。另外，–bootstrap和INSTALL_SCRIPTDIR CMake也已被删除。</p>\n<p><strong>6 .通用分区处理程序</strong> 通用分区处理程序已从MySQL服务中被移除。为了实现给定表分区，表所使用的存储引擎需要自有的分区处理程序。 提供本地分区支持的MySQL存储引擎有两个，即InnoDB和NDB，而在MySQL 8中只支持InnoDB。</p>\n<p><strong>7 .系统和状态变量信息</strong> 在INFORMATION_SCHEMA数据库中，对系统和状态变量信息不再进行维护。GLOBAL_VARIABLES、SESSION_VARIABLES、GLOBAL_STATUS、SESSION_STATUS表都已被删除。另外，系统变量show_compatibility_56也已被删除。被删除的状态变量有Slave_heartbeat_period、Slave_last_heartbeat,Slave_received_heartbeats、Slave_retried_transactions、Slave_running。以上被删除的内容都可使用性能模式中对应的内容进行替代。</p>\n<p><strong>8 .mysql_plugin工具</strong> mysql_plugin工具用来配置MySQL服务器插件，现已被删除，可使用–plugin-load或–plugin-load-add选项在服务器启动时加载插件或者在运行时使用INSTALL PLUGIN语句加载插件来替代该工具。</p>\n<h2 id=\"2-新特性-1-：窗口函数\"><a href=\"#2-新特性-1-：窗口函数\" class=\"headerlink\" title=\"2. 新特性 1 ：窗口函数\"></a>2. 新特性 1 ：窗口函数</h2><h3 id=\"2-1-使用窗口函数前后对比\"><a href=\"#2-1-使用窗口函数前后对比\" class=\"headerlink\" title=\"2. 1 使用窗口函数前后对比\"></a>2. 1 使用窗口函数前后对比</h3><p>假设我现在有这样一个数据表，它显示了某购物网站在每个城市每个区的销售额：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221026203944231.png\" alt=\"image-20221026203944231\"></p>\n<p>查询：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221026203954685.png\" alt=\"image-20221026203954685\"></p>\n<p><strong>需求</strong>： 现在计算这个网站在每个城市的销售总额、在全国的销售总额、每个区的销售额占所在城市销售额中的比率，以及占总销售额中的比率。</p>\n<p>如果用分组和聚合函数，就需要分好几步来计算。</p>\n<p>第一步，计算总销售金额，并存入临时表 a：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221026204016015.png\" alt=\"image-20221026204016015\"></p>\n<p>查看一下临时表 a ：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221026204059575.png\" alt=\"image-20221026204059575\"></p>\n<p>第二步，计算每个城市的销售总额并存入临时表 b：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221026204043050.png\" alt=\"image-20221026204043050\"></p>\n<p>查看临时表 b ：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221026204112468.png\" alt=\"image-20221026204112468\"></p>\n<p>第三步，计算各区的销售占所在城市的总计金额的比例，和占全部销售总计金额的比例。我们可以通过下面的连接查询获得需要的结果：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221026204128043.png\" alt=\"image-20221026204128043\"></p>\n<p>结果显示：市销售金额、市销售占比、总销售金额、总销售占比都计算出来了。</p>\n<p>同样的查询，如果用窗口函数，就简单多了。我们可以用下面的代码来实现：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221026204143735.png\" alt=\"image-20221026204143735\"></p>\n<p>结果显示，我们得到了与上面那种查询同样的结果。</p>\n<p>使用窗口函数，只用了一步就完成了查询。而且，由于没有用到临时表，执行的效率也更高了。很显然， <strong>在这种需要用到分组统计的结果对每一条记录进行计算的场景下，使用窗口函数更好</strong> 。</p>\n<h3 id=\"2-2-窗口函数分类\"><a href=\"#2-2-窗口函数分类\" class=\"headerlink\" title=\"2. 2 窗口函数分类\"></a>2. 2 窗口函数分类</h3><p>MySQL从 8. 0 版本开始支持窗口函数。窗口函数的作用类似于在查询中对数据进行分组，不同的是，分组操作会把分组的结果聚合成一条记录，而窗口函数是将结果置于每一条数据记录中。</p>\n<p>窗口函数可以分为<strong>静态窗口函数</strong>和<strong>动态窗口函数</strong>。</p>\n<ul>\n<li><p>静态窗口函数的窗口大小是固定的，不会因为记录的不同而不同；</p>\n</li>\n<li><p>动态窗口函数的窗口大小会随着记录的不同而变化。</p>\n</li>\n</ul>\n<p>MySQL官方网站窗口函数的网址为 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/window-function-descriptions.html#function_row-number\">https://dev.mysql.com/doc/refman/8.0/en/window-function-descriptions.html#function_row-number</a> 。</p>\n<p>窗口函数总体上可以分为序号函数、分布函数、前后函数、首尾函数和其他函数，如下表：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221026204256339.png\" alt=\"image-20221026204256339\"></p>\n<h3 id=\"2-3-语法结构\"><a href=\"#2-3-语法结构\" class=\"headerlink\" title=\"2. 3 语法结构\"></a>2. 3 语法结构</h3><p>窗口函数的语法结构是：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">函数 </span><span style=\"color: #F78C6C\">OVER</span><span style=\"color: #BABED8\">（[PARTITION BY 字段名 ORDER BY 字段名 ASC|DESC]）</span></span></code></pre></div><p>或者是：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">函数 </span><span style=\"color: #F78C6C\">OVER</span><span style=\"color: #BABED8\"> 窗口名 … </span><span style=\"color: #F78C6C\">WINDOW</span><span style=\"color: #BABED8\"> 窗口名 </span><span style=\"color: #F78C6C\">AS</span><span style=\"color: #BABED8\"> （[PARTITION BY 字段名 ORDER BY 字段名 ASC|DESC]）</span></span></code></pre></div><ul>\n<li><p>OVER 关键字指定函数窗口的范围。</p>\n<ul>\n<li>如果省略后面括号中的内容，则窗口会包含满足WHERE条件的所有记录，窗口函数会基于所有满足WHERE条件的记录进行计算。</li>\n<li>如果OVER关键字后面的括号不为空，则可以使用如下语法设置窗口。</li>\n</ul>\n</li>\n<li><p>窗口名：为窗口设置一个别名，用来标识窗口。</p>\n</li>\n<li><p>PARTITION BY子句：指定窗口函数按照哪些字段进行分组。分组后，窗口函数可以在每个分组中分别执行。</p>\n</li>\n<li><p>ORDER BY子句：指定窗口函数按照哪些字段进行排序。执行排序操作使窗口函数按照排序后的数据记录的顺序进行编号。</p>\n</li>\n<li><p>FRAME子句：为分区中的某个子集定义规则，可以用来作为滑动窗口使用。</p>\n</li>\n</ul>\n<h3 id=\"2-4-分类讲解\"><a href=\"#2-4-分类讲解\" class=\"headerlink\" title=\"2. 4 分类讲解\"></a>2. 4 分类讲解</h3><p>创建表：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">CREATE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">TABLE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">goods</span><span style=\"color: #BABED8\">(</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">id </span><span style=\"color: #C792EA\">INT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">PRIMARY KEY</span><span style=\"color: #BABED8\"> AUTO_INCREMENT,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">category_id </span><span style=\"color: #C792EA\">INT</span><span style=\"color: #BABED8\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">category </span><span style=\"color: #C792EA\">VARCHAR</span><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">15</span><span style=\"color: #BABED8\">),</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">NAME</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">VARCHAR</span><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">30</span><span style=\"color: #BABED8\">),</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">price </span><span style=\"color: #C792EA\">DECIMAL</span><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">10</span><span style=\"color: #BABED8\">,</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\">),</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">stock </span><span style=\"color: #C792EA\">INT</span><span style=\"color: #BABED8\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">upper_time </span><span style=\"color: #F78C6C\">DATETIME</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">);</span></span></code></pre></div><p>添加数据：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">INSERT INTO</span><span style=\"color: #BABED8\"> goods(category_id,category,</span><span style=\"color: #F78C6C\">NAME</span><span style=\"color: #BABED8\">,price,stock,upper_time)</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">VALUES</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">, </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">女装/女士精品</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">, </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">T恤</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">, </span><span style=\"color: #F78C6C\">39</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\">, </span><span style=\"color: #F78C6C\">1000</span><span style=\"color: #BABED8\">, </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">2020-11-10 00:00:00</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">),</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">, </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">女装/女士精品</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">, </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">连衣裙</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">, </span><span style=\"color: #F78C6C\">79</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\">, </span><span style=\"color: #F78C6C\">2500</span><span style=\"color: #BABED8\">, </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">2020-11-10 00:00:00</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">),</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">, </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">女装/女士精品</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">, </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">卫衣</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">, </span><span style=\"color: #F78C6C\">89</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\">, </span><span style=\"color: #F78C6C\">1500</span><span style=\"color: #BABED8\">, </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">2020-11-10 00:00:00</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">),</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">, </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">女装/女士精品</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">, </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">牛仔裤</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">, </span><span style=\"color: #F78C6C\">89</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\">, </span><span style=\"color: #F78C6C\">3500</span><span style=\"color: #BABED8\">, </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">2020-11-10 00:00:00</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">),</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">, </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">女装/女士精品</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">, </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">百褶裙</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">, </span><span style=\"color: #F78C6C\">29</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\">, </span><span style=\"color: #F78C6C\">500</span><span style=\"color: #BABED8\">, </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">2020-11-10 00:00:00</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">),</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">, </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">女装/女士精品</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">, </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">呢绒外套</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">, </span><span style=\"color: #F78C6C\">399</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\">, </span><span style=\"color: #F78C6C\">1200</span><span style=\"color: #BABED8\">, </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">2020-11-10 00:00:00</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">),</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\">, </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">户外运动</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">, </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">自行车</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">, </span><span style=\"color: #F78C6C\">399</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\">, </span><span style=\"color: #F78C6C\">1000</span><span style=\"color: #BABED8\">, </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">2020-11-10 00:00:00</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">),</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\">, </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">户外运动</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">, </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">山地自行车</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">, </span><span style=\"color: #F78C6C\">1399</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\">, </span><span style=\"color: #F78C6C\">2500</span><span style=\"color: #BABED8\">, </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">2020-11-10 00:00:00</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">),</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\">, </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">户外运动</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">, </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">登山杖</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">, </span><span style=\"color: #F78C6C\">59</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\">, </span><span style=\"color: #F78C6C\">1500</span><span style=\"color: #BABED8\">, </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">2020-11-10 00:00:00</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">),</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\">, </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">户外运动</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">, </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">骑行装备</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">, </span><span style=\"color: #F78C6C\">399</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\">, </span><span style=\"color: #F78C6C\">3500</span><span style=\"color: #BABED8\">, </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">2020-11-10 00:00:00</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">),</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\">, </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">户外运动</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">, </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">运动外套</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">, </span><span style=\"color: #F78C6C\">799</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\">, </span><span style=\"color: #F78C6C\">500</span><span style=\"color: #BABED8\">, </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">2020-11-10 00:00:00</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">),</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\">, </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">户外运动</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">, </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">滑板</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">, </span><span style=\"color: #F78C6C\">499</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\">, </span><span style=\"color: #F78C6C\">1200</span><span style=\"color: #BABED8\">, </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">2020-11-10 00:00:00</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">);</span></span></code></pre></div><p>下面针对goods表中的数据来验证每个窗口函数的功能。</p>\n<h4 id=\"1-序号函数\"><a href=\"#1-序号函数\" class=\"headerlink\" title=\"1. 序号函数\"></a>1. 序号函数</h4><p><strong>1 ．ROW_NUMBER()函数</strong></p>\n<p>ROW_NUMBER()函数能够对数据中的序号进行顺序显示。</p>\n<p>举例：查询 goods 数据表中每个商品分类下价格降序排列的各个商品信息。</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">mysql</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">ROW_NUMBER</span><span style=\"color: #BABED8\">() </span><span style=\"color: #F78C6C\">OVER</span><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">PARTITION</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">BY</span><span style=\"color: #BABED8\"> category_id </span><span style=\"color: #F78C6C\">ORDER BY</span><span style=\"color: #BABED8\"> price </span><span style=\"color: #F78C6C\">DESC</span><span style=\"color: #BABED8\">) </span><span style=\"color: #F78C6C\">AS</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">row_num,</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\"> id, category_id, category, </span><span style=\"color: #F78C6C\">NAME</span><span style=\"color: #BABED8\">, price, stock</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> goods;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">+</span><span style=\"color: #676E95; font-style: italic\">---------+----+-------------+---------------+------------+---------+-------+</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| row_num | id | category_id | category | </span><span style=\"color: #F78C6C\">NAME</span><span style=\"color: #BABED8\"> | price | stock |</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">+</span><span style=\"color: #676E95; font-style: italic\">---------+----+-------------+---------------+------------+---------+-------+</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">6</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\"> | 女装</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">女士精品 | 呢绒外套 | </span><span style=\"color: #F78C6C\">399</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">1200</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\"> | 女装</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">女士精品 | 卫衣 | </span><span style=\"color: #F78C6C\">89</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">1500</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">4</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\"> | 女装</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">女士精品 | 牛仔裤 | </span><span style=\"color: #F78C6C\">89</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">3500</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">4</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\"> | 女装</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">女士精品 | 连衣裙 | </span><span style=\"color: #F78C6C\">79</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">2500</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">5</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\"> | 女装</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">女士精品 | T恤 | </span><span style=\"color: #F78C6C\">39</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">1000</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">6</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">5</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\"> | 女装</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">女士精品 | 百褶裙 | </span><span style=\"color: #F78C6C\">29</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">500</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">8</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\"> | 户外运动 | 山地自行车 | </span><span style=\"color: #F78C6C\">1399</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">2500</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">11</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\"> | 户外运动 | 运动外套 | </span><span style=\"color: #F78C6C\">799</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">500</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">12</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\"> | 户外运动 | 滑板 | </span><span style=\"color: #F78C6C\">499</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">1200</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">4</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">7</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\"> | 户外运动 | 自行车 | </span><span style=\"color: #F78C6C\">399</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">1000</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">5</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">10</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\"> | 户外运动 | 骑行装备 | </span><span style=\"color: #F78C6C\">399</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">3500</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">6</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">9</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\"> | 户外运动 | 登山杖 | </span><span style=\"color: #F78C6C\">59</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">1500</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">+</span><span style=\"color: #676E95; font-style: italic\">---------+----+-------------+---------------+------------+---------+-------+</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">12</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">rows</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">in</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">set</span><span style=\"color: #BABED8\"> (</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">00</span><span style=\"color: #BABED8\"> sec)</span></span></code></pre></div><p>举例：查询 goods 数据表中每个商品分类下价格最高的 3 种商品信息。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221026204550689.png\" alt=\"image-20221026204550689\"></p>\n<p>在名称为“女装&#x2F;女士精品”的商品类别中，有两款商品的价格为 89. 90 元，分别是卫衣和牛仔裤。两款商品的序号都应该为 2 ，而不是一个为 2 ，另一个为 3 。此时，可以使用RANK()函数和DENSE_RANK()函数解决。</p>\n<p><strong>2 ．RANK()函数</strong></p>\n<p>使用RANK()函数能够对序号进行并列排序，并且会跳过重复的序号，比如序号为 1 、 1 、 3 。</p>\n<p>举例：使用RANK()函数获取 goods 数据表中各类别的价格从高到低排序的各商品信息。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221026204622072.png\" alt=\"image-20221026204622072\"></p>\n<p>举例：使用RANK()函数获取 goods 数据表中类别为“女装&#x2F;女士精品”的价格最高的 4 款商品信息。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221026204645292.png\" alt=\"image-20221026204645292\"></p>\n<p>可以看到，使用RANK()函数得出的序号为 1 、 2 、 2 、 4 ，相同价格的商品序号相同，后面的商品序号是不连续的，跳过了重复的序号。</p>\n<p><strong>3 ．DENSE_RANK()函数</strong></p>\n<p>DENSE_RANK()函数对序号进行并列排序，并且不会跳过重复的序号，比如序号为 1 、 1 、 2 。</p>\n<p>举例：使用DENSE_RANK()函数获取 goods 数据表中各类别的价格从高到低排序的各商品信息。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221026204709419.png\" alt=\"image-20221026204709419\"></p>\n<p>举例：使用DENSE_RANK()函数获取 goods 数据表中类别为“女装&#x2F;女士精品”的价格最高的 4 款商品信息。</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">mysql</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">*</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\">(</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">DENSE_RANK</span><span style=\"color: #BABED8\">() </span><span style=\"color: #F78C6C\">OVER</span><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">PARTITION</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">BY</span><span style=\"color: #BABED8\"> category_id </span><span style=\"color: #F78C6C\">ORDER BY</span><span style=\"color: #BABED8\"> price </span><span style=\"color: #F78C6C\">DESC</span><span style=\"color: #BABED8\">) </span><span style=\"color: #F78C6C\">AS</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">row_num,</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\"> id, category_id, category, </span><span style=\"color: #F78C6C\">NAME</span><span style=\"color: #BABED8\">, price, stock</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> goods) t</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">WHERE</span><span style=\"color: #BABED8\"> category_id </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">AND</span><span style=\"color: #BABED8\"> row_num </span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">+</span><span style=\"color: #676E95; font-style: italic\">---------+----+-------------+---------------+----------+--------+-------+</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| row_num | id | category_id | category | </span><span style=\"color: #F78C6C\">NAME</span><span style=\"color: #BABED8\"> | price | stock |</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">+</span><span style=\"color: #676E95; font-style: italic\">---------+----+-------------+---------------+----------+--------+-------+</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">6</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\"> | 女装</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">女士精品 | 呢绒外套 | </span><span style=\"color: #F78C6C\">399</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">1200</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\"> | 女装</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">女士精品 | 卫衣 | </span><span style=\"color: #F78C6C\">89</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">1500</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">4</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\"> | 女装</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">女士精品 | 牛仔裤 | </span><span style=\"color: #F78C6C\">89</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">3500</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\"> | 女装</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">女士精品 | 连衣裙 | </span><span style=\"color: #F78C6C\">79</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">2500</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">+</span><span style=\"color: #676E95; font-style: italic\">---------+----+-------------+---------------+----------+--------+-------+</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">4</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">rows</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">in</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">set</span><span style=\"color: #BABED8\"> (</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">00</span><span style=\"color: #BABED8\"> sec)</span></span></code></pre></div><p>可以看到，使用DENSE_RANK()函数得出的行号为 1 、 2 、 2 、 3 ，相同价格的商品序号相同，后面的商品序号是连续的，并且没有跳过重复的序号。</p>\n<h4 id=\"2-分布函数\"><a href=\"#2-分布函数\" class=\"headerlink\" title=\"2. 分布函数\"></a>2. 分布函数</h4><p><strong>1 ．PERCENT_RANK()函数</strong></p>\n<p>PERCENT_RANK()函数是等级值百分比函数。按照如下方式进行计算。</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">(rank </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">) </span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\"> (</span><span style=\"color: #F78C6C\">rows</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">)</span></span></code></pre></div><p>其中，rank的值为使用RANK()函数产生的序号，rows的值为当前窗口的总记录数。</p>\n<p>举例：计算 goods 数据表中名称为“女装&#x2F;女士精品”的类别下的商品的PERCENT_RANK值。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221026204855744.png\" alt=\"image-20221026204855744\"></p>\n<p><strong>2 ．CUME_DIST()函数</strong></p>\n<p>CUME_DIST()函数主要用于查询小于或等于某个值的比例。</p>\n<p>举sq例：查询goods数据表中小于或等于当前价格的比例。</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">mysql</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">CUME_DIST</span><span style=\"color: #BABED8\">() </span><span style=\"color: #F78C6C\">OVER</span><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">PARTITION</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">BY</span><span style=\"color: #BABED8\"> category_id </span><span style=\"color: #F78C6C\">ORDER BY</span><span style=\"color: #BABED8\"> price </span><span style=\"color: #F78C6C\">ASC</span><span style=\"color: #BABED8\">) </span><span style=\"color: #F78C6C\">AS</span><span style=\"color: #BABED8\"> cd,</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\"> id, category, </span><span style=\"color: #F78C6C\">NAME</span><span style=\"color: #BABED8\">, price</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> goods;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">+</span><span style=\"color: #676E95; font-style: italic\">---------------------+----+---------------+------------+---------+</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| cd | id | category | </span><span style=\"color: #F78C6C\">NAME</span><span style=\"color: #BABED8\"> | price |</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">+</span><span style=\"color: #676E95; font-style: italic\">---------------------+----+---------------+------------+---------+</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">16666666666666666</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">5</span><span style=\"color: #BABED8\"> | 女装</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">女士精品 | 百褶裙 | </span><span style=\"color: #F78C6C\">29</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">3333333333333333</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\"> | 女装</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">女士精品 | T恤 | </span><span style=\"color: #F78C6C\">39</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">5</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\"> | 女装</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">女士精品 | 连衣裙 | </span><span style=\"color: #F78C6C\">79</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">8333333333333334</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #BABED8\"> | 女装</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">女士精品 | 卫衣 | </span><span style=\"color: #F78C6C\">89</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">8333333333333334</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">4</span><span style=\"color: #BABED8\"> | 女装</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">女士精品 | 牛仔裤 | </span><span style=\"color: #F78C6C\">89</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">6</span><span style=\"color: #BABED8\"> | 女装</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">女士精品 | 呢绒外套 | </span><span style=\"color: #F78C6C\">399</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">16666666666666666</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">9</span><span style=\"color: #BABED8\"> | 户外运动 | 登山杖 | </span><span style=\"color: #F78C6C\">59</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">5</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">7</span><span style=\"color: #BABED8\"> | 户外运动 | 自行车 | </span><span style=\"color: #F78C6C\">399</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">5</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">10</span><span style=\"color: #BABED8\"> | 户外运动 | 骑行装备 | </span><span style=\"color: #F78C6C\">399</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">6666666666666666</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">12</span><span style=\"color: #BABED8\"> | 户外运动 | 滑板 | </span><span style=\"color: #F78C6C\">499</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">8333333333333334</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">11</span><span style=\"color: #BABED8\"> | 户外运动 | 运动外套 | </span><span style=\"color: #F78C6C\">799</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">8</span><span style=\"color: #BABED8\"> | 户外运动 | 山地自行车 | </span><span style=\"color: #F78C6C\">1399</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">+</span><span style=\"color: #676E95; font-style: italic\">---------------------+----+---------------+------------+---------+</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">12</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">rows</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">in</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">set</span><span style=\"color: #BABED8\"> (</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">00</span><span style=\"color: #BABED8\"> sec)</span></span></code></pre></div><h4 id=\"3-前后函数\"><a href=\"#3-前后函数\" class=\"headerlink\" title=\"3. 前后函数\"></a>3. 前后函数</h4><p><strong>1 ．LAG(expr,n)函数</strong></p>\n<p>LAG(expr,n)函数返回当前行的前n行的expr的值。</p>\n<p>举例：查询goods数据表中前一个商品价格与当前商品价格的差值。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221026204954506.png\" alt=\"image-20221026204954506\"></p>\n<p><strong>2 ．LEAD(expr,n)函数</strong></p>\n<p>LEAD(expr,n)函数返回当前行的后n行的expr的值。</p>\n<p>举例：查询goods数据表中后一个商品价格与当前商品价格的差值。</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">mysql</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> id, category, </span><span style=\"color: #F78C6C\">NAME</span><span style=\"color: #BABED8\">, behind_price, price,behind_price </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> price </span><span style=\"color: #F78C6C\">AS</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">diff_price</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\">(</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> id, category, </span><span style=\"color: #F78C6C\">NAME</span><span style=\"color: #BABED8\">, price,</span><span style=\"color: #82AAFF\">LEAD</span><span style=\"color: #BABED8\">(price, </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">) </span><span style=\"color: #F78C6C\">OVER</span><span style=\"color: #BABED8\"> w </span><span style=\"color: #F78C6C\">AS</span><span style=\"color: #BABED8\"> behind_price</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> goods </span><span style=\"color: #F78C6C\">WINDOW</span><span style=\"color: #BABED8\"> w </span><span style=\"color: #F78C6C\">AS</span><span style=\"color: #BABED8\"> (</span><span style=\"color: #F78C6C\">PARTITION</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">BY</span><span style=\"color: #BABED8\"> category_id </span><span style=\"color: #F78C6C\">ORDER BY</span><span style=\"color: #BABED8\"> price)) t;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">+</span><span style=\"color: #676E95; font-style: italic\">----+---------------+------------+--------------+---------+------------+</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| id | category | </span><span style=\"color: #F78C6C\">NAME</span><span style=\"color: #BABED8\"> | behind_price | price | diff_price |</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">+</span><span style=\"color: #676E95; font-style: italic\">----+---------------+------------+--------------+---------+------------+</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">5</span><span style=\"color: #BABED8\"> | 女装</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">女士精品 | 百褶裙 | </span><span style=\"color: #F78C6C\">39</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">29</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">10</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">00</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\"> | 女装</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">女士精品 | T恤 | </span><span style=\"color: #F78C6C\">79</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">39</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">40</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">00</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\"> | 女装</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">女士精品 | 连衣裙 | </span><span style=\"color: #F78C6C\">89</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">79</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">10</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">00</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #BABED8\"> | 女装</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">女士精品 | 卫衣 | </span><span style=\"color: #F78C6C\">89</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">89</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">00</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">4</span><span style=\"color: #BABED8\"> | 女装</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">女士精品 | 牛仔裤 | </span><span style=\"color: #F78C6C\">399</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">89</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">310</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">00</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">6</span><span style=\"color: #BABED8\"> | 女装</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">女士精品 | 呢绒外套 | </span><span style=\"color: #F78C6C\">NULL</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">399</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">NULL</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">9</span><span style=\"color: #BABED8\"> | 户外运动 | 登山杖 | </span><span style=\"color: #F78C6C\">399</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">59</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">340</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">00</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">7</span><span style=\"color: #BABED8\"> | 户外运动 | 自行车 | </span><span style=\"color: #F78C6C\">399</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">399</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">00</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">10</span><span style=\"color: #BABED8\"> | 户外运动 | 骑行装备 | </span><span style=\"color: #F78C6C\">499</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">399</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">100</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">00</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">12</span><span style=\"color: #BABED8\"> | 户外运动 | 滑板 | </span><span style=\"color: #F78C6C\">799</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">499</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">300</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">00</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">11</span><span style=\"color: #BABED8\"> | 户外运动 | 运动外套 | </span><span style=\"color: #F78C6C\">1399</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">799</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">600</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">00</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">8</span><span style=\"color: #BABED8\"> | 户外运动 | 山地自行车 | </span><span style=\"color: #F78C6C\">NULL</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">1399</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">NULL</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">+</span><span style=\"color: #676E95; font-style: italic\">----+---------------+------------+--------------+---------+------------+</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">12</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">rows</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">in</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">set</span><span style=\"color: #BABED8\"> (</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">00</span><span style=\"color: #BABED8\"> sec)</span></span></code></pre></div><h4 id=\"4-首尾函数\"><a href=\"#4-首尾函数\" class=\"headerlink\" title=\"4. 首尾函数\"></a>4. 首尾函数</h4><p><strong>1 ．FIRST_VALUE(expr)函数</strong></p>\n<p>FIRST_VALUE(expr)函数返回第一个expr的值。</p>\n<p>举例：按照价格排序，查询第 1 个商品的价格信息。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221026205100197.png\" alt=\"image-20221026205100197\"></p>\n<p><strong>2 ．LAST_VALUE(expr)函数</strong></p>\n<p>LAST_VALUE(expr)函数返回最后一个expr的值。</p>\n<p>举例：按照价格排序，查询最后一个商品的价格信息。</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">mysql</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> id, category, </span><span style=\"color: #F78C6C\">NAME</span><span style=\"color: #BABED8\">, price, stock,</span><span style=\"color: #82AAFF\">LAST_VALUE</span><span style=\"color: #BABED8\">(price) </span><span style=\"color: #F78C6C\">OVER</span><span style=\"color: #BABED8\"> w </span><span style=\"color: #F78C6C\">AS</span><span style=\"color: #BABED8\"> last_price</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> goods </span><span style=\"color: #F78C6C\">WINDOW</span><span style=\"color: #BABED8\"> w </span><span style=\"color: #F78C6C\">AS</span><span style=\"color: #BABED8\"> (</span><span style=\"color: #F78C6C\">PARTITION</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">BY</span><span style=\"color: #BABED8\"> category_id </span><span style=\"color: #F78C6C\">ORDER BY</span><span style=\"color: #BABED8\"> price);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">+</span><span style=\"color: #676E95; font-style: italic\">----+---------------+------------+---------+-------+------------+</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| id | category | </span><span style=\"color: #F78C6C\">NAME</span><span style=\"color: #BABED8\"> | price | stock | last_price |</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">+</span><span style=\"color: #676E95; font-style: italic\">----+---------------+------------+---------+-------+------------+</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">5</span><span style=\"color: #BABED8\"> | 女装</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">女士精品 | 百褶裙 | </span><span style=\"color: #F78C6C\">29</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">500</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">29</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\"> | 女装</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">女士精品 | T恤 | </span><span style=\"color: #F78C6C\">39</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">1000</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">39</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\"> | 女装</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">女士精品 | 连衣裙 | </span><span style=\"color: #F78C6C\">79</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">2500</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">79</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #BABED8\"> | 女装</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">女士精品 | 卫衣 | </span><span style=\"color: #F78C6C\">89</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">1500</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">89</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">4</span><span style=\"color: #BABED8\"> | 女装</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">女士精品 | 牛仔裤 | </span><span style=\"color: #F78C6C\">89</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">3500</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">89</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">6</span><span style=\"color: #BABED8\"> | 女装</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">女士精品 | 呢绒外套 | </span><span style=\"color: #F78C6C\">399</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">1200</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">399</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">9</span><span style=\"color: #BABED8\"> | 户外运动 | 登山杖 | </span><span style=\"color: #F78C6C\">59</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">1500</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">59</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">7</span><span style=\"color: #BABED8\"> | 户外运动 | 自行车 | </span><span style=\"color: #F78C6C\">399</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">1000</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">399</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">10</span><span style=\"color: #BABED8\"> | 户外运动 | 骑行装备 | </span><span style=\"color: #F78C6C\">399</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">3500</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">399</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">12</span><span style=\"color: #BABED8\"> | 户外运动 | 滑板 | </span><span style=\"color: #F78C6C\">499</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">1200</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">499</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">11</span><span style=\"color: #BABED8\"> | 户外运动 | 运动外套 | </span><span style=\"color: #F78C6C\">799</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">500</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">799</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">8</span><span style=\"color: #BABED8\"> | 户外运动 | 山地自行车 | </span><span style=\"color: #F78C6C\">1399</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">2500</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">1399</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">+</span><span style=\"color: #676E95; font-style: italic\">----+---------------+------------+---------+-------+------------+</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">12</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">rows</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">in</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">set</span><span style=\"color: #BABED8\"> (</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">00</span><span style=\"color: #BABED8\"> sec)</span></span></code></pre></div><h4 id=\"5-其他函数\"><a href=\"#5-其他函数\" class=\"headerlink\" title=\"5. 其他函数\"></a>5. 其他函数</h4><p><strong>1 ．NTH_VALUE(expr,n)函数</strong></p>\n<p>NTH_VALUE(expr,n)函数返回第n个expr的值。</p>\n<p>举例：查询goods数据表中排名第 2 和第 3 的价格信息。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221026205200127.png\" alt=\"image-20221026205200127\"></p>\n<p><strong>2 ．NTILE(n)函数</strong></p>\n<p>NTILE(n)函数将分区中的有序数据分为n个桶，记录桶编号。</p>\n<p>举例：将goods表中的商品按照价格分为 3 组。</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">mysql</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">NTILE</span><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">3</span><span style=\"color: #BABED8\">) </span><span style=\"color: #F78C6C\">OVER</span><span style=\"color: #BABED8\"> w </span><span style=\"color: #F78C6C\">AS</span><span style=\"color: #BABED8\"> nt,id, category, </span><span style=\"color: #F78C6C\">NAME</span><span style=\"color: #BABED8\">, price</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">FROM</span><span style=\"color: #BABED8\"> goods </span><span style=\"color: #F78C6C\">WINDOW</span><span style=\"color: #BABED8\"> w </span><span style=\"color: #F78C6C\">AS</span><span style=\"color: #BABED8\"> (</span><span style=\"color: #F78C6C\">PARTITION</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">BY</span><span style=\"color: #BABED8\"> category_id </span><span style=\"color: #F78C6C\">ORDER BY</span><span style=\"color: #BABED8\"> price);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">+</span><span style=\"color: #676E95; font-style: italic\">----+----+---------------+------------+---------+</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| nt | id | category | </span><span style=\"color: #F78C6C\">NAME</span><span style=\"color: #BABED8\"> | price |</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">+</span><span style=\"color: #676E95; font-style: italic\">----+----+---------------+------------+---------+</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">5</span><span style=\"color: #BABED8\"> | 女装</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">女士精品 | 百褶裙 | </span><span style=\"color: #F78C6C\">29</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\"> | 女装</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">女士精品 | T恤 | </span><span style=\"color: #F78C6C\">39</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\"> | 女装</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">女士精品 | 连衣裙 | </span><span style=\"color: #F78C6C\">79</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #BABED8\"> | 女装</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">女士精品 | 卫衣 | </span><span style=\"color: #F78C6C\">89</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">4</span><span style=\"color: #BABED8\"> | 女装</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">女士精品 | 牛仔裤 | </span><span style=\"color: #F78C6C\">89</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">6</span><span style=\"color: #BABED8\"> | 女装</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">女士精品 | 呢绒外套 | </span><span style=\"color: #F78C6C\">399</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">9</span><span style=\"color: #BABED8\"> | 户外运动 | 登山杖 | </span><span style=\"color: #F78C6C\">59</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">7</span><span style=\"color: #BABED8\"> | 户外运动 | 自行车 | </span><span style=\"color: #F78C6C\">399</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">10</span><span style=\"color: #BABED8\"> | 户外运动 | 骑行装备 | </span><span style=\"color: #F78C6C\">399</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">12</span><span style=\"color: #BABED8\"> | 户外运动 | 滑板 | </span><span style=\"color: #F78C6C\">499</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">11</span><span style=\"color: #BABED8\"> | 户外运动 | 运动外套 | </span><span style=\"color: #F78C6C\">799</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">| </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #BABED8\"> | </span><span style=\"color: #F78C6C\">8</span><span style=\"color: #BABED8\"> | 户外运动 | 山地自行车 | </span><span style=\"color: #F78C6C\">1399</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">90</span><span style=\"color: #BABED8\"> |</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">+</span><span style=\"color: #676E95; font-style: italic\">----+----+---------------+------------+---------+</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">12</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">rows</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">in</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">set</span><span style=\"color: #BABED8\"> (</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">.</span><span style=\"color: #F78C6C\">00</span><span style=\"color: #BABED8\"> sec)</span></span></code></pre></div><h3 id=\"2-5-小-结\"><a href=\"#2-5-小-结\" class=\"headerlink\" title=\"2. 5 小 结\"></a>2. 5 小 结</h3><p>窗口函数的特点是可以分组，而且可以在分组内排序。另外，窗口函数不会因为分组而减少原表中的行数，这对我们在原表数据的基础上进行统计和排序非常有用。</p>\n<h2 id=\"3-新特性-2-：公用表表达式\"><a href=\"#3-新特性-2-：公用表表达式\" class=\"headerlink\" title=\"3. 新特性 2 ：公用表表达式\"></a>3. 新特性 2 ：公用表表达式</h2><p>公用表表达式（或通用表表达式）简称为CTE（Common Table Expressions）。CTE是一个命名的临时结果集，作用范围是当前语句。CTE可以理解成一个可以复用的子查询，当然跟子查询还是有点区别的，CTE可以引用其他CTE，但子查询不能引用其他子查询。所以，可以考虑代替子查询。</p>\n<p>依据语法结构和执行方式的不同，公用表表达式分为<strong>普通公用表表达式</strong>和<strong>递归公用表表达式</strong> 2 种。</p>\n<h3 id=\"3-1-普通公用表表达式\"><a href=\"#3-1-普通公用表表达式\" class=\"headerlink\" title=\"3. 1 普通公用表表达式\"></a>3. 1 普通公用表表达式</h3><p>普通公用表表达式的语法结构是：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">WITH</span><span style=\"color: #BABED8\"> CTE名称</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">AS</span><span style=\"color: #BABED8\"> （子查询）</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\">|</span><span style=\"color: #F78C6C\">DELETE</span><span style=\"color: #BABED8\">|</span><span style=\"color: #F78C6C\">UPDATE</span><span style=\"color: #BABED8\"> 语句;</span></span></code></pre></div><p>普通公用表表达式类似于子查询，不过，跟子查询不同的是，它可以被多次引用，而且可以被其他的普通公用表表达式所引用。</p>\n<p>举例：查询员工所在的部门的详细信息。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221026205352689.png\" alt=\"image-20221026205352689\"></p>\n<p>这个查询也可以用普通公用表表达式的方式完成：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221026205415899.png\" alt=\"image-20221026205415899\"></p>\n<p>例子说明，公用表表达式可以起到子查询的作用。以后如果遇到需要使用子查询的场景，你可以在查询之前，先定义公用表表达式，然后在查询中用它来代替子查询。而且，跟子查询相比，公用表表达式有一个优点，就是定义过公用表表达式之后的查询，可以像一个表一样多次引用公用表表达式，而子查询则不能。</p>\n<h3 id=\"3-2-递归公用表表达式\"><a href=\"#3-2-递归公用表表达式\" class=\"headerlink\" title=\"3. 2 递归公用表表达式\"></a>3. 2 递归公用表表达式</h3><p>递归公用表表达式也是一种公用表表达式，只不过，除了普通公用表表达式的特点以外，它还有自己的特点，就是 <strong>可以调用自己</strong> 。它的语法结构是：</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">WITH</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">RECURSIVE</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">CTE名称 </span><span style=\"color: #F78C6C\">AS</span><span style=\"color: #BABED8\"> （子查询）</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">SELECT</span><span style=\"color: #BABED8\">|</span><span style=\"color: #F78C6C\">DELETE</span><span style=\"color: #BABED8\">|</span><span style=\"color: #F78C6C\">UPDATE</span><span style=\"color: #BABED8\"> 语句;</span></span></code></pre></div><p>递归公用表表达式由 2 部分组成，分别是种子查询和递归查询，中间通过关键字 UNION [ALL]进行连接。</p>\n<p>这里的 <strong>种子查询，意思就是获得递归的初始值</strong> 。这个查询只会运行一次，以创建初始数据集，之后递归查询会一直执行，直到没有任何新的查询数据产生，递归返回。</p>\n<p><strong>案例</strong>： 针对于我们常用的employees表，包含employee_id，last_name和manager_id三个字段。如果a是b的管理者，那么，我们可以把b叫做a的下属，如果同时b又是c的管理者，那么c就是b的下属，是a的下下属。</p>\n<p>下面我们尝试用查询语句列出所有具有下下属身份的人员信息。</p>\n<p>如果用我们之前学过的知识来解决，会比较复杂，至少要进行 4 次查询才能搞定：</p>\n<ul>\n<li>第一步，先找出初代管理者，就是不以任何别人为管理者的人，把结果存入临时表；</li>\n<li>第二步，找出所有以初代管理者为管理者的人，得到一个下属集，把结果存入临时表；</li>\n<li>第三步，找出所有以下属为管理者的人，得到一个下下属集，把结果存入临时表。</li>\n<li>第四步，找出所有以下下属为管理者的人，得到一个结果集。</li>\n</ul>\n<p>如果第四步的结果集为空，则计算结束，第三步的结果集就是我们需要的下下属集了，否则就必须继续进行第四步，一直到结果集为空为止。比如上面的这个数据表，就需要到第五步，才能得到空结果集。而且，最后还要进行第六步：把第三步和第四步的结果集合并，这样才能最终获得我们需要的结果集。</p>\n<p>如果用递归公用表表达式，就非常简单了。我介绍下具体的思路。</p>\n<ul>\n<li><p>用递归公用表表达式中的种子查询，找出初代管理者。字段 n 表示代次，初始值为 1 ，表示是第一代管理者。</p>\n</li>\n<li><p>用递归公用表表达式中的递归查询，查出以这个递归公用表表达式中的人为管理者的人，并且代次的值加 1 。直到没有人以这个递归公用表表达式中的人为管理者了，递归返回。</p>\n</li>\n<li><p>在最后的查询中，选出所有代次大于等于 3 的人，他们肯定是第三代及以上代次的下属了，也就是下下属了。这样就得到了我们需要的结果集。</p>\n</li>\n</ul>\n<p>这里看似也是 3 步，实际上是一个查询的 3 个部分，只需要执行一次就可以了。而且也不需要用临时表保存中间结果，比刚刚的方法简单多了。</p>\n<p><strong>代码实现</strong>：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221026205636887.png\" alt=\"image-20221026205636887\"></p>\n<p>总之，递归公用表表达式对于查询一个有共同的根节点的树形结构数据，非常有用。它可以不受层级的限制，轻松查出所有节点的数据。如果用其他的查询方式，就比较复杂了。</p>\n<h3 id=\"3-3-小-结\"><a href=\"#3-3-小-结\" class=\"headerlink\" title=\"3. 3 小 结\"></a>3. 3 小 结</h3><p>公用表表达式的作用是可以替代子查询，而且可以被多次引用。递归公用表表达式对查询有一个共同根节点的树形结构数据非常高效，可以轻松搞定其他查询方式难以处理的查询。</p>\n<hr>\n<h1 id=\"第-19-章-写在最后\"><a href=\"#第-19-章-写在最后\" class=\"headerlink\" title=\"第 19 章 _ 写在最后\"></a>第 19 章 _ 写在最后</h1><p><strong>分享 1</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/image-20221026205815912.png\" alt=\"image-20221026205815912\"></p>\n<p><strong>分享 2</strong><br>如何看待生活上、工作上的冗余、反冗余？<br>又如何看待社会的脆弱性？反脆弱性？<br>个人如何应对？</p>\n","text":"第 00 章_写在前面 讲师：尚硅谷-宋红康（康师傅）官网： http://www.atguigu.comhttp://www.atguigu.com/ ) 一...","permalink":"/post/MySQL","photos":[],"count_time":{"symbolsCount":"159k","symbolsTime":"2:25"},"categories":[{"name":"数据库","slug":"数据库","count":1,"path":"api/categories/数据库.json"}],"tags":[{"name":"MySQL","slug":"MySQL","count":1,"path":"api/tags/MySQL.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%AC%AC-00-%E7%AB%A0-%E5%86%99%E5%9C%A8%E5%89%8D%E9%9D%A2\"><span class=\"toc-text\">第 00 章_写在前面</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80%E7%AF%87%E5%A4%A7%E7%BA%B2\"><span class=\"toc-text\">一、MySQL数据库基础篇大纲</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%A6%82%E8%BF%B0%E4%B8%8EMySQL%E5%AE%89%E8%A3%85%E7%AF%87\"><span class=\"toc-text\">1. 数据库概述与MySQL安装篇</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-SQL%E4%B9%8BSELECT%E4%BD%BF%E7%94%A8%E7%AF%87\"><span class=\"toc-text\">2. SQL之SELECT使用篇</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-SQL%E4%B9%8BDDL%E3%80%81DML%E3%80%81DCL%E4%BD%BF%E7%94%A8%E7%AF%87\"><span class=\"toc-text\">3. SQL之DDL、DML、DCL使用篇</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-%E5%85%B6%E5%AE%83%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AF%B9%E8%B1%A1%E7%AF%87\"><span class=\"toc-text\">4. 其它数据库对象篇</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-MySQL-8-%E6%96%B0%E7%89%B9%E6%80%A7%E7%AF%87\"><span class=\"toc-text\">5. MySQL 8 新特性篇</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81MySQL%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7%E7%AF%87%E5%A4%A7%E7%BA%B2\"><span class=\"toc-text\">二、MySQL高级特性篇大纲</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-MySQL%E6%9E%B6%E6%9E%84%E7%AF%87\"><span class=\"toc-text\">1. MySQL架构篇</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E7%B4%A2%E5%BC%95%E5%8F%8A%E8%B0%83%E4%BC%98%E7%AF%87\"><span class=\"toc-text\">2. 索引及调优篇</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E4%BA%8B%E5%8A%A1%E7%AF%87\"><span class=\"toc-text\">3. 事务篇</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E6%97%A5%E5%BF%97%E4%B8%8E%E5%A4%87%E4%BB%BD%E7%AF%87\"><span class=\"toc-text\">4. 日志与备份篇</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81MySQL%E9%AB%98%E6%89%8B%E6%98%AF%E6%80%8E%E6%A0%B7%E7%82%BC%E6%88%90%E7%9A%84\"><span class=\"toc-text\">三、MySQL高手是怎样炼成的</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9B%9B%E3%80%81%E6%9C%AC%E5%A5%97%E8%AF%BE%E7%A8%8B%E9%80%82%E5%90%88%E4%BA%BA%E7%BE%A4\"><span class=\"toc-text\">四、本套课程适合人群</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%94%E3%80%81%E5%B8%8C%E6%9C%9B%E4%BD%A0%E8%83%BD%E8%8E%B7%E5%8F%96%E7%9A%84\"><span class=\"toc-text\">五、希望你能获取的</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%AC%AC-01-%E7%AB%A0-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%A6%82%E8%BF%B0\"><span class=\"toc-text\">第 01 章_数据库概述</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E4%BD%BF%E7%94%A8%E6%95%B0%E6%8D%AE%E5%BA%93\"><span class=\"toc-text\">1. 为什么要使用数据库</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F\"><span class=\"toc-text\">2. 数据库与数据库管理系统</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-1-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">2. 1 数据库的相关概念</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-2-%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%85%B3%E7%B3%BB\"><span class=\"toc-text\">2. 2 数据库与数据库管理系统的关系</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-3-%E5%B8%B8%E8%A7%81%E7%9A%84%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E6%8E%92%E5%90%8D-DBMS\"><span class=\"toc-text\">2. 3 常见的数据库管理系统排名(DBMS)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-4-%E5%B8%B8%E8%A7%81%E7%9A%84%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">2. 4 常见的数据库介绍</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-MySQL%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">3. MySQL介绍</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-1-%E6%A6%82%E8%BF%B0\"><span class=\"toc-text\">3. 1 概述</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-2-MySQL%E5%8F%91%E5%B1%95%E5%8F%B2%E9%87%8D%E5%A4%A7%E4%BA%8B%E4%BB%B6\"><span class=\"toc-text\">3. 2 MySQL发展史重大事件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-4-%E5%85%B3%E4%BA%8EMySQL-8-0\"><span class=\"toc-text\">1. 4 关于MySQL 8. 0</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-5-Why-choose-MySQL\"><span class=\"toc-text\">1.5 Why choose MySQL?</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-6-Oracle-vs-MySQL\"><span class=\"toc-text\">1.6 Oracle vs MySQL</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-RDBMS-%E4%B8%8E-%E9%9D%9ERDBMS\"><span class=\"toc-text\">4. RDBMS 与 非RDBMS</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-1-%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93-RDBMS\"><span class=\"toc-text\">4.1 关系型数据库(RDBMS)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-1-1-%E5%AE%9E%E8%B4%A8\"><span class=\"toc-text\">4. 1. 1 实质</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-1-2-%E4%BC%98%E5%8A%BF\"><span class=\"toc-text\">4. 1. 2 优势</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-2-%E9%9D%9E%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93-%E9%9D%9ERDBMS\"><span class=\"toc-text\">4. 2 非关系型数据库(非RDBMS)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-2-1-%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">4. 2. 1 介绍</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-2-2-%E6%9C%89%E5%93%AA%E4%BA%9B%E9%9D%9E%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93\"><span class=\"toc-text\">4. 2. 2 有哪些非关系型数据库</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-2-3-NoSQL%E7%9A%84%E6%BC%94%E5%8F%98\"><span class=\"toc-text\">4. 2. 3 NoSQL的演变</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-3-%E5%B0%8F%E7%BB%93\"><span class=\"toc-text\">4. 3 小结</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1%E8%A7%84%E5%88%99\"><span class=\"toc-text\">5. 关系型数据库设计规则</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-1-%E8%A1%A8%E3%80%81%E8%AE%B0%E5%BD%95%E3%80%81%E5%AD%97%E6%AE%B5\"><span class=\"toc-text\">5. 1 表、记录、字段</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-2%E8%A1%A8%E7%9A%84%E5%85%B3%E8%81%94%E5%85%B3%E7%B3%BB\"><span class=\"toc-text\">5.2表的关联关系</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-2-1-%E4%B8%80%E5%AF%B9%E4%B8%80%E5%85%B3%E8%81%94%EF%BC%88one-to-one%EF%BC%89\"><span class=\"toc-text\">5.2.1 一对一关联（one-to-one）</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-2-2-%E4%B8%80%E5%AF%B9%E5%A4%9A%E5%85%B3%E7%B3%BB%EF%BC%88one-to-many%EF%BC%89\"><span class=\"toc-text\">5.2.2 一对多关系（one-to-many）</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-2-3-%E5%A4%9A%E5%AF%B9%E5%A4%9A%EF%BC%88many-to-many%EF%BC%89\"><span class=\"toc-text\">5. 2. 3 多对多（many-to-many）</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-2-4-%E8%87%AA%E6%88%91%E5%BC%95%E7%94%A8-Self-reference\"><span class=\"toc-text\">5.2.4 自我引用(Self reference)</span></a></li></ol></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%AC%AC-02-%E7%AB%A0-MySQL%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA\"><span class=\"toc-text\">第 02 章_MySQL环境搭建</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-MySQL%E7%9A%84%E5%8D%B8%E8%BD%BD\"><span class=\"toc-text\">1. MySQL的卸载</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%AD%A5%E9%AA%A4-1-%EF%BC%9A%E5%81%9C%E6%AD%A2MySQL%E6%9C%8D%E5%8A%A1\"><span class=\"toc-text\">步骤 1 ：停止MySQL服务</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%AD%A5%E9%AA%A4-2-%EF%BC%9A%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%8D%B8%E8%BD%BD\"><span class=\"toc-text\">步骤 2 ：软件的卸载</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%AD%A5%E9%AA%A4-3-%EF%BC%9A%E6%AE%8B%E4%BD%99%E6%96%87%E4%BB%B6%E7%9A%84%E6%B8%85%E7%90%86\"><span class=\"toc-text\">步骤 3 ：残余文件的清理</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%AD%A5%E9%AA%A4-4-%EF%BC%9A%E6%B8%85%E7%90%86%E6%B3%A8%E5%86%8C%E8%A1%A8%EF%BC%88%E9%80%89%E5%81%9A%EF%BC%89\"><span class=\"toc-text\">步骤 4 ：清理注册表（选做）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%AD%A5%E9%AA%A4-5-%EF%BC%9A%E5%88%A0%E9%99%A4%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">步骤 5 ：删除环境变量配置</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-MySQL%E7%9A%84%E4%B8%8B%E8%BD%BD%E3%80%81%E5%AE%89%E8%A3%85%E3%80%81%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">2. MySQL的下载、安装、配置</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-1-MySQL%E7%9A%84-4-%E5%A4%A7%E7%89%88%E6%9C%AC\"><span class=\"toc-text\">2. 1 MySQL的 4 大版本</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-2-%E8%BD%AF%E4%BB%B6%E7%9A%84%E4%B8%8B%E8%BD%BD\"><span class=\"toc-text\">2. 2 软件的下载</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-3-MySQL-8-0-%E7%89%88%E6%9C%AC%E7%9A%84%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">2. 3 MySQL 8. 0 版本的安装</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-4-%E9%85%8D%E7%BD%AEMySQL-8-0\"><span class=\"toc-text\">2. 4 配置MySQL 8. 0</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-5-%E9%85%8D%E7%BD%AEMySQL-8-0-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">2. 5 配置MySQL 8. 0 环境变量</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-6-MySQL-5-7-%E7%89%88%E6%9C%AC%E7%9A%84%E5%AE%89%E8%A3%85%E3%80%81%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">2. 6 MySQL 5. 7 版本的安装、配置</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-7-%E5%AE%89%E8%A3%85%E5%A4%B1%E8%B4%A5%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">2. 7 安装失败问题</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-MySQL%E7%9A%84%E7%99%BB%E5%BD%95\"><span class=\"toc-text\">3. MySQL的登录</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-1-%E6%9C%8D%E5%8A%A1%E7%9A%84%E5%90%AF%E5%8A%A8%E4%B8%8E%E5%81%9C%E6%AD%A2\"><span class=\"toc-text\">3. 1 服务的启动与停止</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%96%B9%E5%BC%8F-1-%EF%BC%9A%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BD%A2%E7%95%8C%E9%9D%A2%E5%B7%A5%E5%85%B7\"><span class=\"toc-text\">方式 1 ：使用图形界面工具</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%96%B9%E5%BC%8F-2-%EF%BC%9A%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7\"><span class=\"toc-text\">方式 2 ：使用命令行工具</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-2-%E8%87%AA%E5%B8%A6%E5%AE%A2%E6%88%B7%E7%AB%AF%E7%9A%84%E7%99%BB%E5%BD%95%E4%B8%8E%E9%80%80%E5%87%BA\"><span class=\"toc-text\">3. 2 自带客户端的登录与退出</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%99%BB%E5%BD%95%E6%96%B9%E5%BC%8F-1-%EF%BC%9AMySQL%E8%87%AA%E5%B8%A6%E5%AE%A2%E6%88%B7%E7%AB%AF\"><span class=\"toc-text\">登录方式 1 ：MySQL自带客户端</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%99%BB%E5%BD%95%E6%96%B9%E5%BC%8F-2-%EF%BC%9Awindows%E5%91%BD%E4%BB%A4%E8%A1%8C\"><span class=\"toc-text\">登录方式 2 ：windows命令行</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%80%80%E5%87%BA%E7%99%BB%E5%BD%95\"><span class=\"toc-text\">退出登录</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-MySQL%E6%BC%94%E7%A4%BA%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">4. MySQL演示使用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-1-MySQL%E7%9A%84%E4%BD%BF%E7%94%A8%E6%BC%94%E7%A4%BA\"><span class=\"toc-text\">4. 1 MySQL的使用演示</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-2-MySQL%E7%9A%84%E7%BC%96%E7%A0%81%E8%AE%BE%E7%BD%AE\"><span class=\"toc-text\">4. 2 MySQL的编码设置</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#MySQL-5-7-%E4%B8%AD\"><span class=\"toc-text\">MySQL 5. 7 中</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#MySQL-8-0-%E4%B8%AD\"><span class=\"toc-text\">MySQL 8. 0 中</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-MySQL%E5%9B%BE%E5%BD%A2%E5%8C%96%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7\"><span class=\"toc-text\">5. MySQL图形化管理工具</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B7%A5%E5%85%B71-MySQL-Workbench\"><span class=\"toc-text\">工具1. MySQL Workbench</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B7%A5%E5%85%B72-Navicat\"><span class=\"toc-text\">工具2. Navicat</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B7%A5%E5%85%B73-SQLyog\"><span class=\"toc-text\">工具3. SQLyog</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B7%A5%E5%85%B7-4-%EF%BC%9Adbeaver\"><span class=\"toc-text\">工具 4 ：dbeaver</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%AF%E8%83%BD%E5%87%BA%E7%8E%B0%E8%BF%9E%E6%8E%A5%E9%97%AE%E9%A2%98%EF%BC%9A\"><span class=\"toc-text\">可能出现连接问题：</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#6-MySQL%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84%E4%B8%8E%E6%BA%90%E7%A0%81\"><span class=\"toc-text\">6. MySQL目录结构与源码</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-1-%E4%B8%BB%E8%A6%81%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">6. 1 主要目录结构</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-2-MySQL-%E6%BA%90%E4%BB%A3%E7%A0%81%E8%8E%B7%E5%8F%96\"><span class=\"toc-text\">6. 2 MySQL 源代码获取</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#7-%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3-%E8%AF%BE%E5%A4%96%E5%86%85%E5%AE%B9\"><span class=\"toc-text\">7. 常见问题的解决(课外内容)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%97%AE%E9%A2%98-1-%EF%BC%9Aroot%E7%94%A8%E6%88%B7%E5%AF%86%E7%A0%81%E5%BF%98%E8%AE%B0%EF%BC%8C%E9%87%8D%E7%BD%AE%E7%9A%84%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">问题 1 ：root用户密码忘记，重置的操作</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%97%AE%E9%A2%98-2-%EF%BC%9Amysql%E5%91%BD%E4%BB%A4%E6%8A%A5%E2%80%9C%E4%B8%8D%E6%98%AF%E5%86%85%E9%83%A8%E6%88%96%E5%A4%96%E9%83%A8%E5%91%BD%E4%BB%A4%E2%80%9D\"><span class=\"toc-text\">问题 2 ：mysql命令报“不是内部或外部命令”</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%97%AE%E9%A2%98-3-%EF%BC%9A%E9%94%99%E8%AF%AFERROR-%EF%BC%9A%E6%B2%A1%E6%9C%89%E9%80%89%E6%8B%A9%E6%95%B0%E6%8D%AE%E5%BA%93%E5%B0%B1%E6%93%8D%E4%BD%9C%E8%A1%A8%E6%A0%BC%E5%92%8C%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">问题 3 ：错误ERROR ：没有选择数据库就操作表格和数据</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%97%AE%E9%A2%98-4-%EF%BC%9A%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%AE%A2%E6%88%B7%E7%AB%AF%E7%9A%84%E5%AD%97%E7%AC%A6%E9%9B%86%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">问题 4 ：命令行客户端的字符集问题</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%97%AE%E9%A2%98-5-%EF%BC%9A%E4%BF%AE%E6%94%B9%E6%95%B0%E6%8D%AE%E5%BA%93%E5%92%8C%E8%A1%A8%E7%9A%84%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81\"><span class=\"toc-text\">问题 5 ：修改数据库和表的字符编码</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%AC%AC-03-%E7%AB%A0-%E5%9F%BA%E6%9C%AC%E7%9A%84SELECT%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">第 03 章_基本的SELECT语句</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-SQL%E6%A6%82%E8%BF%B0\"><span class=\"toc-text\">1. SQL概述</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-1-SQL%E8%83%8C%E6%99%AF%E7%9F%A5%E8%AF%86\"><span class=\"toc-text\">1. 1 SQL背景知识</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-2-SQL%E8%AF%AD%E8%A8%80%E6%8E%92%E8%A1%8C%E6%A6%9C\"><span class=\"toc-text\">1. 2 SQL语言排行榜</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-3-SQL-%E5%88%86%E7%B1%BB\"><span class=\"toc-text\">1. 3 &#x3D;&#x3D;SQL 分类&#x3D;&#x3D;</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-SQL%E8%AF%AD%E8%A8%80%E7%9A%84%E8%A7%84%E5%88%99%E4%B8%8E%E8%A7%84%E8%8C%83\"><span class=\"toc-text\">2. SQL语言的规则与规范</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-1-%E5%9F%BA%E6%9C%AC%E8%A7%84%E5%88%99\"><span class=\"toc-text\">2. 1 基本规则</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-2-SQL%E5%A4%A7%E5%B0%8F%E5%86%99%E8%A7%84%E8%8C%83-%EF%BC%88%E5%BB%BA%E8%AE%AE%E9%81%B5%E5%AE%88%EF%BC%89\"><span class=\"toc-text\">2. 2 SQL大小写规范 （建议遵守）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-3-%E6%B3%A8-%E9%87%8A\"><span class=\"toc-text\">2. 3 注 释</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-4-%E5%91%BD%E5%90%8D%E8%A7%84%E5%88%99%EF%BC%88%E6%9A%82%E6%97%B6%E4%BA%86%E8%A7%A3%EF%BC%89\"><span class=\"toc-text\">2. 4 命名规则（暂时了解）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-5-%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E6%8C%87%E4%BB%A4\"><span class=\"toc-text\">2. 5 数据导入指令</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-%E5%9F%BA%E6%9C%AC%E7%9A%84SELECT%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">3. 基本的SELECT语句</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-0-SELECT%E2%80%A6\"><span class=\"toc-text\">3. 0 SELECT…</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-1-SELECT-%E2%80%A6-FROM\"><span class=\"toc-text\">3. 1 SELECT … FROM</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-2-%E5%88%97%E7%9A%84%E5%88%AB%E5%90%8D\"><span class=\"toc-text\">3. 2 列的别名</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-3-%E5%8E%BB%E9%99%A4%E9%87%8D%E5%A4%8D%E8%A1%8C\"><span class=\"toc-text\">3. 3 去除重复行</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-4-%E7%A9%BA%E5%80%BC%E5%8F%82%E4%B8%8E%E8%BF%90%E7%AE%97\"><span class=\"toc-text\">3. 4 空值参与运算</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-5-%E7%9D%80%E9%87%8D%E5%8F%B7\"><span class=\"toc-text\">3. 5 着重号</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-6-%E6%9F%A5%E8%AF%A2%E5%B8%B8%E6%95%B0\"><span class=\"toc-text\">3. 6  查询常数</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-%E6%98%BE%E7%A4%BA%E8%A1%A8%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">4. 显示表结构</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-%E8%BF%87%E6%BB%A4%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">5. 过滤数据</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%AC%AC-04-%E7%AB%A0-%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">第 04 章_运算符</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E7%AE%97%E6%9C%AF%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">1. 算术运算符</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%EF%BC%8E%E5%8A%A0%E6%B3%95%E4%B8%8E%E5%87%8F%E6%B3%95%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">1 ．加法与减法运算符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%EF%BC%8E%E4%B9%98%E6%B3%95%E4%B8%8E%E9%99%A4%E6%B3%95%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">2 ．乘法与除法运算符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%EF%BC%8E%E6%B1%82%E6%A8%A1%EF%BC%88%E6%B1%82%E4%BD%99%EF%BC%89%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">3 ．求模（求余）运算符</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E6%AF%94%E8%BE%83%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">2. 比较运算符</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E7%AD%89%E5%8F%B7%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">1 .等号运算符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E5%AE%89%E5%85%A8%E7%AD%89%E4%BA%8E%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">2 .安全等于运算符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E4%B8%8D%E7%AD%89%E4%BA%8E%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">3 .不等于运算符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E7%A9%BA%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">4. 空运算符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-%E9%9D%9E%E7%A9%BA%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">5. 非空运算符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-%E6%9C%80%E5%B0%8F%E5%80%BC%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">6. 最小值运算符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7-%E6%9C%80%E5%A4%A7%E5%80%BC%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">7. 最大值运算符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#8-BETWEEN-AND%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">8. BETWEEN AND运算符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#9-IN%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">9. IN运算符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#10-NOT-IN%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">10. NOT IN运算符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#11-LIKE%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">11. LIKE运算符</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#ESCAPE\"><span class=\"toc-text\">ESCAPE</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#12-REGEXP%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">12. REGEXP运算符</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">3. 逻辑运算符</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%EF%BC%8E%E9%80%BB%E8%BE%91%E9%9D%9E%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">1 ．逻辑非运算符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%EF%BC%8E%E9%80%BB%E8%BE%91%E4%B8%8E%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">2 ．逻辑与运算符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%EF%BC%8E%E9%80%BB%E8%BE%91%E6%88%96%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">3 ．逻辑或运算符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%EF%BC%8E%E9%80%BB%E8%BE%91%E5%BC%82%E6%88%96%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">4 ．逻辑异或运算符</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-%E4%BD%8D%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">4. 位运算符</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E6%8C%89%E4%BD%8D%E4%B8%8E%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">1 .按位与运算符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E6%8C%89%E4%BD%8D%E6%88%96%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">2. 按位或运算符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E6%8C%89%E4%BD%8D%E5%BC%82%E6%88%96%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">3. 按位异或运算符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E6%8C%89%E4%BD%8D%E5%8F%96%E5%8F%8D%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">4. 按位取反运算符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-%E6%8C%89%E4%BD%8D%E5%8F%B3%E7%A7%BB%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">5. 按位右移运算符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-%E6%8C%89%E4%BD%8D%E5%B7%A6%E7%A7%BB%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">6. 按位左移运算符</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-%E8%BF%90%E7%AE%97%E7%AC%A6%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7\"><span class=\"toc-text\">5. 运算符的优先级</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%8B%93%E5%B1%95%EF%BC%9A%E4%BD%BF%E7%94%A8%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%9F%A5%E8%AF%A2\"><span class=\"toc-text\">拓展：使用正则表达式查询</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%AC%AC-05-%E7%AB%A0-%E6%8E%92%E5%BA%8F%E4%B8%8E%E5%88%86%E9%A1%B5\"><span class=\"toc-text\">第 05 章_排序与分页</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E6%8E%92%E5%BA%8F%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">1. 排序数据</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-1-%E6%8E%92%E5%BA%8F%E8%A7%84%E5%88%99\"><span class=\"toc-text\">1. 1 排序规则</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-2-%E5%8D%95%E5%88%97%E6%8E%92%E5%BA%8F\"><span class=\"toc-text\">1. 2 单列排序</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-3-%E5%A4%9A%E5%88%97%E6%8E%92%E5%BA%8F\"><span class=\"toc-text\">1. 3 多列排序</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E5%88%86%E9%A1%B5\"><span class=\"toc-text\">2. 分页</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-1-%E8%83%8C%E6%99%AF\"><span class=\"toc-text\">2. 1 背景</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-2-%E5%AE%9E%E7%8E%B0%E8%A7%84%E5%88%99\"><span class=\"toc-text\">2. 2 实现规则</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-3-%E6%8B%93%E5%B1%95\"><span class=\"toc-text\">2. 3 拓展</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%AC%AC-06-%E7%AB%A0-%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2\"><span class=\"toc-text\">第 06 章_多表查询</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E4%B8%80%E4%B8%AA%E6%A1%88%E4%BE%8B%E5%BC%95%E5%8F%91%E7%9A%84%E5%A4%9A%E8%A1%A8%E8%BF%9E%E6%8E%A5\"><span class=\"toc-text\">1. 一个案例引发的多表连接</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-1-%E6%A1%88%E4%BE%8B%E8%AF%B4%E6%98%8E\"><span class=\"toc-text\">1. 1 案例说明</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-2-%E7%AC%9B%E5%8D%A1%E5%B0%94%E7%A7%AF%EF%BC%88%E6%88%96%E4%BA%A4%E5%8F%89%E8%BF%9E%E6%8E%A5%EF%BC%89%E7%9A%84%E7%90%86%E8%A7%A3\"><span class=\"toc-text\">1. 2 笛卡尔积（或交叉连接）的理解</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-3-%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90%E4%B8%8E%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3\"><span class=\"toc-text\">1.3 案例分析与问题解决</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2%E5%88%86%E7%B1%BB%E8%AE%B2%E8%A7%A3\"><span class=\"toc-text\">2. 多表查询分类讲解</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%86%E7%B1%BB-1-%EF%BC%9A%E7%AD%89%E5%80%BC%E8%BF%9E%E6%8E%A5-vs-%E9%9D%9E%E7%AD%89%E5%80%BC%E8%BF%9E%E6%8E%A5\"><span class=\"toc-text\">分类 1 ：等值连接 vs 非等值连接</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E7%AD%89%E5%80%BC%E8%BF%9E%E6%8E%A5\"><span class=\"toc-text\">等值连接</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E9%9D%9E%E7%AD%89%E5%80%BC%E8%BF%9E%E6%8E%A5\"><span class=\"toc-text\">非等值连接</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%86%E7%B1%BB-2-%EF%BC%9A%E8%87%AA%E8%BF%9E%E6%8E%A5-vs-%E9%9D%9E%E8%87%AA%E8%BF%9E%E6%8E%A5\"><span class=\"toc-text\">分类 2 ：自连接 vs 非自连接</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%86%E7%B1%BB-3-%EF%BC%9A%E5%86%85%E8%BF%9E%E6%8E%A5-vs-%E5%A4%96%E8%BF%9E%E6%8E%A5\"><span class=\"toc-text\">分类 3 ：内连接 vs 外连接</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#SQL-92-%EF%BC%9A%E4%BD%BF%E7%94%A8-%E5%88%9B%E5%BB%BA%E8%BF%9E%E6%8E%A5\"><span class=\"toc-text\">SQL 92 ：使用(+)创建连接</span></a></li></ol></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-SQL-99-%E8%AF%AD%E6%B3%95%E5%AE%9E%E7%8E%B0%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2\"><span class=\"toc-text\">3. SQL 99 语法实现多表查询</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-1-%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\">3. 1 基本语法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-2-%E5%86%85%E8%BF%9E%E6%8E%A5-INNER-JOIN-%E7%9A%84%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">3. 2 内连接(INNER JOIN)的实现</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-3-%E5%A4%96%E8%BF%9E%E6%8E%A5-OUTER-JOIN-%E7%9A%84%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">3. 3 外连接(OUTER JOIN)的实现</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-3-1-%E5%B7%A6%E5%A4%96%E8%BF%9E%E6%8E%A5-LEFT-OUTER-JOIN\"><span class=\"toc-text\">3. 3. 1 左外连接(LEFT OUTER JOIN)</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-3-2-%E5%8F%B3%E5%A4%96%E8%BF%9E%E6%8E%A5-RIGHT-OUTER-JOIN\"><span class=\"toc-text\">3. 3. 2 右外连接(RIGHT OUTER JOIN)</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-3-3-%E6%BB%A1%E5%A4%96%E8%BF%9E%E6%8E%A5-FULL-OUTER-JOIN\"><span class=\"toc-text\">3. 3. 3 满外连接(FULL OUTER JOIN)</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-UNION%E7%9A%84%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">4. UNION的使用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#UNION%E6%93%8D%E4%BD%9C%E7%AC%A6\"><span class=\"toc-text\">UNION操作符</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#UNION-ALL%E6%93%8D%E4%BD%9C%E7%AC%A6\"><span class=\"toc-text\">UNION ALL操作符</span></a></li></ol></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-7-%E7%A7%8DSQL-JOINS%E7%9A%84%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">5. &#x3D;&#x3D;7 种SQL JOINS的实现&#x3D;&#x3D;</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-1-%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">5. 1 代码实现</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-2-%E8%AF%AD%E6%B3%95%E6%A0%BC%E5%BC%8F%E5%B0%8F%E7%BB%93\"><span class=\"toc-text\">5. 2 语法格式小结</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#6-SQL-99-%E8%AF%AD%E6%B3%95%E6%96%B0%E7%89%B9%E6%80%A7\"><span class=\"toc-text\">6. SQL 99 语法新特性</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-1-%E8%87%AA%E7%84%B6%E8%BF%9E%E6%8E%A5\"><span class=\"toc-text\">6. 1 自然连接</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-2-USING%E8%BF%9E%E6%8E%A5\"><span class=\"toc-text\">6. 2 USING连接</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#7-%E7%AB%A0%E8%8A%82%E5%B0%8F%E7%BB%93\"><span class=\"toc-text\">7. 章节小结</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%99%84%E5%BD%95%EF%BC%9A%E5%B8%B8%E7%94%A8%E7%9A%84-SQL-%E6%A0%87%E5%87%86%E6%9C%89%E5%93%AA%E4%BA%9B\"><span class=\"toc-text\">附录：常用的 SQL 标准有哪些</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%AC%AC-07-%E7%AB%A0-%E5%8D%95%E8%A1%8C%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">第 07 章_单行函数</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E5%87%BD%E6%95%B0%E7%9A%84%E7%90%86%E8%A7%A3\"><span class=\"toc-text\">1. 函数的理解</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-1-%E4%BB%80%E4%B9%88%E6%98%AF%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">1. 1 什么是函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-2-%E4%B8%8D%E5%90%8CDBMS%E5%87%BD%E6%95%B0%E7%9A%84%E5%B7%AE%E5%BC%82\"><span class=\"toc-text\">1. 2 不同DBMS函数的差异</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-3-MySQL%E7%9A%84%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0%E5%8F%8A%E5%88%86%E7%B1%BB\"><span class=\"toc-text\">1. 3 MySQL的内置函数及分类</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E6%95%B0%E5%80%BC%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">2. &#x3D;&#x3D;数值函数&#x3D;&#x3D;</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-1-%E5%9F%BA%E6%9C%AC%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">2. 1 基本函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-2-%E8%A7%92%E5%BA%A6%E4%B8%8E%E5%BC%A7%E5%BA%A6%E4%BA%92%E6%8D%A2%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">2. 2 角度与弧度互换函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-3-%E4%B8%89%E8%A7%92%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">2. 3 三角函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-4-%E6%8C%87%E6%95%B0%E4%B8%8E%E5%AF%B9%E6%95%B0\"><span class=\"toc-text\">2. 4 指数与对数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-5-%E8%BF%9B%E5%88%B6%E9%97%B4%E7%9A%84%E8%BD%AC%E6%8D%A2\"><span class=\"toc-text\">2. 5 进制间的转换</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">3. &#x3D;&#x3D;字符串函数&#x3D;&#x3D;</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-%E6%97%A5%E6%9C%9F%E5%92%8C%E6%97%B6%E9%97%B4%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">4. &#x3D;&#x3D;日期和时间函数&#x3D;&#x3D;</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-1-%E8%8E%B7%E5%8F%96%E6%97%A5%E6%9C%9F%E3%80%81%E6%97%B6%E9%97%B4\"><span class=\"toc-text\">4. 1 &#x3D;&#x3D;获取日期、时间&#x3D;&#x3D;</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-2-%E6%97%A5%E6%9C%9F%E4%B8%8E-%E6%97%B6%E9%97%B4%E6%88%B3-%E7%9A%84%E8%BD%AC%E6%8D%A2\"><span class=\"toc-text\">4. 2 日期与&#x3D;&#x3D;时间戳&#x3D;&#x3D;的转换</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-3-%E8%8E%B7%E5%8F%96%E6%9C%88%E4%BB%BD%E3%80%81%E6%98%9F%E6%9C%9F%E3%80%81%E6%98%9F%E6%9C%9F%E6%95%B0%E3%80%81%E5%A4%A9%E6%95%B0%E7%AD%89%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">4. 3 获取月份、星期、星期数、天数等函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-4-%E6%97%A5%E6%9C%9F%E7%9A%84%E6%93%8D%E4%BD%9C%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">4. 4 日期的操作函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-5-%E6%97%B6%E9%97%B4-%E5%92%8C%E7%A7%92%E9%92%9F%E8%BD%AC%E6%8D%A2%E7%9A%84%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">4. 5 &#x3D;&#x3D;时间&#x3D;&#x3D;和秒钟转换的函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-6-%E8%AE%A1%E7%AE%97%E6%97%A5%E6%9C%9F%E5%92%8C%E6%97%B6%E9%97%B4%E7%9A%84%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">4. 6 &#x3D;&#x3D;计算日期和时间的函数&#x3D;&#x3D;</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-7-%E6%97%A5%E6%9C%9F%E7%9A%84%E6%A0%BC%E5%BC%8F%E5%8C%96%E4%B8%8E%E8%A7%A3%E6%9E%90\"><span class=\"toc-text\">4. 7 &#x3D;&#x3D;日期的格式化与解析&#x3D;&#x3D;</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">5. &#x3D;&#x3D;流程控制函数&#x3D;&#x3D;</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#6-%E5%8A%A0%E5%AF%86%E4%B8%8E%E8%A7%A3%E5%AF%86%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">6. 加密与解密函数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#7-MySQL%E4%BF%A1%E6%81%AF%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">7. MySQL信息函数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#8-%E5%85%B6%E4%BB%96%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">8. 其他函数</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%AC%AC-08-%E7%AB%A0-%E8%81%9A%E5%90%88%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">第 08 章_聚合函数</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E8%81%9A%E5%90%88%E5%87%BD%E6%95%B0%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">1. 聚合函数介绍</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-1-AVG%E5%92%8CSUM%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">1. 1 AVG和SUM函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-2-MIN%E5%92%8CMAX%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">1. 2 MIN和MAX函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-3-COUNT%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">1. 3 COUNT函数</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-GROUP-BY\"><span class=\"toc-text\">2. GROUP BY</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-1-%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">2. 1 基本使用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-2-%E4%BD%BF%E7%94%A8%E5%A4%9A%E4%B8%AA%E5%88%97%E5%88%86%E7%BB%84\"><span class=\"toc-text\">2. 2 使用多个列分组</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-3-GROUP-BY%E4%B8%AD%E4%BD%BF%E7%94%A8WITH-ROLLUP\"><span class=\"toc-text\">2. 3 GROUP BY中使用WITH ROLLUP</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-HAVING\"><span class=\"toc-text\">3. HAVING</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-1-%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">3. 1 基本使用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-2-WHERE%E5%92%8CHAVING%E7%9A%84%E5%AF%B9%E6%AF%94\"><span class=\"toc-text\">3. 2 WHERE和HAVING的对比</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-SELECT%E7%9A%84%E6%89%A7%E8%A1%8C%E8%BF%87%E7%A8%8B\"><span class=\"toc-text\">4. SELECT的执行过程</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-1-%E6%9F%A5%E8%AF%A2%E7%9A%84%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">4. 1 查询的结构</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-2-SELECT%E6%89%A7%E8%A1%8C%E9%A1%BA%E5%BA%8F\"><span class=\"toc-text\">4. 2 SELECT执行顺序</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-3-SQL-%E7%9A%84%E6%89%A7%E8%A1%8C%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">4. 3 SQL 的执行原理</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%AC%AC-09-%E7%AB%A0-%E5%AD%90%E6%9F%A5%E8%AF%A2\"><span class=\"toc-text\">第 09 章_子查询</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E4%B8%8E%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3\"><span class=\"toc-text\">1. 需求分析与问题解决</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-1%E5%AE%9E%E9%99%85%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">1.1实际问题</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-2-%E5%AD%90%E6%9F%A5%E8%AF%A2%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">1. 2 子查询的基本使用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-3-%E5%AD%90%E6%9F%A5%E8%AF%A2%E7%9A%84%E5%88%86%E7%B1%BB\"><span class=\"toc-text\">1. 3 子查询的分类</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E5%8D%95%E8%A1%8C%E5%AD%90%E6%9F%A5%E8%AF%A2\"><span class=\"toc-text\">2. 单行子查询</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-1-%E5%8D%95%E8%A1%8C%E6%AF%94%E8%BE%83%E6%93%8D%E4%BD%9C%E7%AC%A6\"><span class=\"toc-text\">2. 1 单行比较操作符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-2-%E4%BB%A3%E7%A0%81%E7%A4%BA%E4%BE%8B\"><span class=\"toc-text\">2. 2 代码示例</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-3-HAVING-%E4%B8%AD%E7%9A%84%E5%AD%90%E6%9F%A5%E8%AF%A2\"><span class=\"toc-text\">2. 3 HAVING 中的子查询</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-4-CASE%E4%B8%AD%E7%9A%84%E5%AD%90%E6%9F%A5%E8%AF%A2\"><span class=\"toc-text\">2. 4 CASE中的子查询</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-5-%E5%AD%90%E6%9F%A5%E8%AF%A2%E4%B8%AD%E7%9A%84%E7%A9%BA%E5%80%BC%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">2. 5 子查询中的空值问题</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-5-%E9%9D%9E%E6%B3%95%E4%BD%BF%E7%94%A8%E5%AD%90%E6%9F%A5%E8%AF%A2\"><span class=\"toc-text\">2. 5 非法使用子查询</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-%E5%A4%9A%E8%A1%8C%E5%AD%90%E6%9F%A5%E8%AF%A2\"><span class=\"toc-text\">3. 多行子查询</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-1-%E5%A4%9A%E8%A1%8C%E6%AF%94%E8%BE%83%E6%93%8D%E4%BD%9C%E7%AC%A6\"><span class=\"toc-text\">3. 1 多行比较操作符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-2-%E4%BB%A3%E7%A0%81%E7%A4%BA%E4%BE%8B\"><span class=\"toc-text\">3. 2 代码示例</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-3-%E7%A9%BA%E5%80%BC%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">3. 3 空值问题</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-%E7%9B%B8%E5%85%B3%E5%AD%90%E6%9F%A5%E8%AF%A2\"><span class=\"toc-text\">4. 相关子查询</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-1-%E7%9B%B8%E5%85%B3%E5%AD%90%E6%9F%A5%E8%AF%A2%E6%89%A7%E8%A1%8C%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">4. 1 相关子查询执行流程</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-2-%E4%BB%A3%E7%A0%81%E7%A4%BA%E4%BE%8B\"><span class=\"toc-text\">4. 2 代码示例</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-3-EXISTS-%E4%B8%8E-NOT-EXISTS%E5%85%B3%E9%94%AE%E5%AD%97\"><span class=\"toc-text\">4. 3 EXISTS 与 NOT EXISTS关键字</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-4-%E7%9B%B8%E5%85%B3%E6%9B%B4%E6%96%B0\"><span class=\"toc-text\">4. 4 相关更新</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-4-%E7%9B%B8%E5%85%B3%E5%88%A0%E9%99%A4\"><span class=\"toc-text\">4. 4 相关删除</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-%E6%8A%9B%E4%B8%80%E4%B8%AA%E6%80%9D%E8%80%83%E9%A2%98\"><span class=\"toc-text\">5. 抛一个思考题</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%AC%AC-10-%E7%AB%A0-%E5%88%9B%E5%BB%BA%E5%92%8C%E7%AE%A1%E7%90%86%E8%A1%A8\"><span class=\"toc-text\">第 10 章_创建和管理表</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86\"><span class=\"toc-text\">1. 基础知识</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-1-%E4%B8%80%E6%9D%A1%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E7%9A%84%E8%BF%87%E7%A8%8B\"><span class=\"toc-text\">1. 1 一条数据存储的过程</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-2-%E6%A0%87%E8%AF%86%E7%AC%A6%E5%91%BD%E5%90%8D%E8%A7%84%E5%88%99\"><span class=\"toc-text\">1. 2 标识符命名规则</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-3-MySQL%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">1. 3 MySQL中的数据类型</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E5%88%9B%E5%BB%BA%E5%92%8C%E7%AE%A1%E7%90%86%E6%95%B0%E6%8D%AE%E5%BA%93\"><span class=\"toc-text\">2. 创建和管理数据库</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-1-%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E5%BA%93\"><span class=\"toc-text\">2. 1 创建数据库</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-2-%E4%BD%BF%E7%94%A8%E6%95%B0%E6%8D%AE%E5%BA%93\"><span class=\"toc-text\">2. 2 使用数据库</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-3-%E4%BF%AE%E6%94%B9%E6%95%B0%E6%8D%AE%E5%BA%93\"><span class=\"toc-text\">2. 3 修改数据库</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-4-%E5%88%A0%E9%99%A4%E6%95%B0%E6%8D%AE%E5%BA%93\"><span class=\"toc-text\">2. 4 删除数据库</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-%E5%88%9B%E5%BB%BA%E8%A1%A8\"><span class=\"toc-text\">3. 创建表</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-1-%E5%88%9B%E5%BB%BA%E6%96%B9%E5%BC%8F-1\"><span class=\"toc-text\">3. 1 创建方式 1</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-2-%E5%88%9B%E5%BB%BA%E6%96%B9%E5%BC%8F-2\"><span class=\"toc-text\">3. 2 创建方式 2</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-3-%E6%9F%A5%E7%9C%8B%E6%95%B0%E6%8D%AE%E8%A1%A8%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">3. 3 查看数据表结构</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-%E4%BF%AE%E6%94%B9%E8%A1%A8\"><span class=\"toc-text\">4. 修改表</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-1-%E8%BF%BD%E5%8A%A0%E4%B8%80%E4%B8%AA%E5%88%97\"><span class=\"toc-text\">4. 1 追加一个列</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-2-%E4%BF%AE%E6%94%B9%E4%B8%80%E4%B8%AA%E5%88%97\"><span class=\"toc-text\">4. 2 修改一个列</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-3-%E9%87%8D%E5%91%BD%E5%90%8D%E4%B8%80%E4%B8%AA%E5%88%97\"><span class=\"toc-text\">4. 3 重命名一个列</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-4-%E5%88%A0%E9%99%A4%E4%B8%80%E4%B8%AA%E5%88%97\"><span class=\"toc-text\">4. 4 删除一个列</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-%E9%87%8D%E5%91%BD%E5%90%8D%E8%A1%A8\"><span class=\"toc-text\">5. 重命名表</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#6-%E5%88%A0%E9%99%A4%E8%A1%A8\"><span class=\"toc-text\">6. 删除表</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#7-%E6%B8%85%E7%A9%BA%E8%A1%A8\"><span class=\"toc-text\">7. 清空表</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#8-%E5%86%85%E5%AE%B9%E6%8B%93%E5%B1%95\"><span class=\"toc-text\">8. 内容拓展</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8B%93%E5%B1%95-1-%EF%BC%9A%E9%98%BF%E9%87%8C%E5%B7%B4%E5%B7%B4%E3%80%8AJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C%E3%80%8B%E4%B9%8BMySQL%E5%AD%97%E6%AE%B5%E5%91%BD%E5%90%8D\"><span class=\"toc-text\">拓展 1 ：阿里巴巴《Java开发手册》之MySQL字段命名</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8B%93%E5%B1%95-2-%EF%BC%9A%E5%A6%82%E4%BD%95%E7%90%86%E8%A7%A3%E6%B8%85%E7%A9%BA%E8%A1%A8%E3%80%81%E5%88%A0%E9%99%A4%E8%A1%A8%E7%AD%89%E6%93%8D%E4%BD%9C%E9%9C%80%E8%B0%A8%E6%85%8E%EF%BC%9F%EF%BC%81\"><span class=\"toc-text\">拓展 2 ：如何理解清空表、删除表等操作需谨慎？！</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8B%93%E5%B1%95-3-%EF%BC%9AMySQL-8-%E6%96%B0%E7%89%B9%E6%80%A7%E2%80%94DDL%E7%9A%84%E5%8E%9F%E5%AD%90%E5%8C%96\"><span class=\"toc-text\">拓展 3 ：MySQL 8 新特性—DDL的原子化</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%AC%AC-11-%E7%AB%A0-%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E4%B9%8B%E5%A2%9E%E5%88%A0%E6%94%B9\"><span class=\"toc-text\">第 11 章_数据处理之增删改</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E6%8F%92%E5%85%A5%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">1. 插入数据</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-1-%E5%AE%9E%E9%99%85%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">1. 1 实际问题</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-2-%E6%96%B9%E5%BC%8F-1-%EF%BC%9AVALUES%E7%9A%84%E6%96%B9%E5%BC%8F%E6%B7%BB%E5%8A%A0\"><span class=\"toc-text\">1. 2 方式 1 ：VALUES的方式添加</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-3-%E6%96%B9%E5%BC%8F-2-%EF%BC%9A%E5%B0%86%E6%9F%A5%E8%AF%A2%E7%BB%93%E6%9E%9C%E6%8F%92%E5%85%A5%E5%88%B0%E8%A1%A8%E4%B8%AD\"><span class=\"toc-text\">1. 3 方式 2 ：将查询结果插入到表中</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E6%9B%B4%E6%96%B0%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">2. 更新数据</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-%E5%88%A0%E9%99%A4%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">3. 删除数据</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-MySQL-8-%E6%96%B0%E7%89%B9%E6%80%A7%EF%BC%9A%E8%AE%A1%E7%AE%97%E5%88%97\"><span class=\"toc-text\">4. MySQL 8 新特性：计算列</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B\"><span class=\"toc-text\">5. 综合案例</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%AC%AC-12-%E7%AB%A0-MySQL%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E7%B2%BE%E8%AE%B2\"><span class=\"toc-text\">第 12 章_MySQL数据类型精讲</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-MySQL%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">1. MySQL中的数据类型</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E6%95%B4%E6%95%B0%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">2. 整数类型</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-1-%E7%B1%BB%E5%9E%8B%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">2. 1 类型介绍</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-2-%E5%8F%AF%E9%80%89%E5%B1%9E%E6%80%A7\"><span class=\"toc-text\">2. 2 可选属性</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-2-1-M\"><span class=\"toc-text\">2. 2. 1 M</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-2-2-UNSIGNED\"><span class=\"toc-text\">2. 2. 2 UNSIGNED</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-2-3-ZEROFILL\"><span class=\"toc-text\">2. 2. 3 ZEROFILL</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-3-%E9%80%82%E7%94%A8%E5%9C%BA%E6%99%AF\"><span class=\"toc-text\">2. 3 适用场景</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-4-%E5%A6%82%E4%BD%95%E9%80%89%E6%8B%A9%EF%BC%9F\"><span class=\"toc-text\">2. 4 如何选择？</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-%E6%B5%AE%E7%82%B9%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">3. 浮点类型</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-1-%E7%B1%BB%E5%9E%8B%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">3. 1 类型介绍</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-2-%E6%95%B0%E6%8D%AE%E7%B2%BE%E5%BA%A6%E8%AF%B4%E6%98%8E\"><span class=\"toc-text\">3. 2 数据精度说明</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-3-%E7%B2%BE%E5%BA%A6%E8%AF%AF%E5%B7%AE%E8%AF%B4%E6%98%8E\"><span class=\"toc-text\">3. 3 精度误差说明</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-%E5%AE%9A%E7%82%B9%E6%95%B0%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">4. 定点数类型</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-1-%E7%B1%BB%E5%9E%8B%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">4. 1 类型介绍</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-2-%E5%BC%80%E5%8F%91%E4%B8%AD%E7%BB%8F%E9%AA%8C\"><span class=\"toc-text\">4. 2 开发中经验</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-%E4%BD%8D%E7%B1%BB%E5%9E%8B%EF%BC%9ABIT\"><span class=\"toc-text\">5. 位类型：BIT</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#6-%E6%97%A5%E6%9C%9F%E4%B8%8E%E6%97%B6%E9%97%B4%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">6. 日期与时间类型</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-1-YEAR%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">6. 1 YEAR类型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-2-DATE%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">6. 2 DATE类型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-3-TIME%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">6. 3 TIME类型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-4-DATETIME%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">6. 4 DATETIME类型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-5-TIMESTAMP%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">6. 5 TIMESTAMP类型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-6-%E5%BC%80%E5%8F%91%E4%B8%AD%E7%BB%8F%E9%AA%8C\"><span class=\"toc-text\">6. 6 开发中经验</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#7-%E6%96%87%E6%9C%AC%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">7. 文本字符串类型</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7-1-CHAR%E4%B8%8EVARCHAR%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">7. 1 CHAR与VARCHAR类型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7-2-TEXT%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">7. 2 TEXT类型</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#8-ENUM%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">8. ENUM类型</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#9-SET%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">9. SET类型</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#10-%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">10. 二进制字符串类型</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#BINARY%E4%B8%8EVARBINARY%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">BINARY与VARBINARY类型</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#BLOB%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">BLOB类型</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#11-JSON-%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">11. JSON 类型</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#12-%E7%A9%BA%E9%97%B4%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">12. 空间类型</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#13-%E5%B0%8F%E7%BB%93%E5%8F%8A%E9%80%89%E6%8B%A9%E5%BB%BA%E8%AE%AE\"><span class=\"toc-text\">13. 小结及选择建议</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%AC%AC-13-%E7%AB%A0-%E7%BA%A6%E6%9D%9F\"><span class=\"toc-text\">第 13 章_约束</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E7%BA%A6%E6%9D%9F-constraint-%E6%A6%82%E8%BF%B0\"><span class=\"toc-text\">1. 约束(constraint)概述</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-1-%E4%B8%BA%E4%BB%80%E4%B9%88%E9%9C%80%E8%A6%81%E7%BA%A6%E6%9D%9F\"><span class=\"toc-text\">1. 1 为什么需要约束</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-2-%E4%BB%80%E4%B9%88%E6%98%AF%E7%BA%A6%E6%9D%9F\"><span class=\"toc-text\">1. 2 什么是约束</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-3-%E7%BA%A6%E6%9D%9F%E7%9A%84%E5%88%86%E7%B1%BB\"><span class=\"toc-text\">1. 3 约束的分类</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E9%9D%9E%E7%A9%BA%E7%BA%A6%E6%9D%9F\"><span class=\"toc-text\">2. 非空约束</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-1-%E4%BD%9C%E7%94%A8\"><span class=\"toc-text\">2. 1 作用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-2-%E5%85%B3%E9%94%AE%E5%AD%97\"><span class=\"toc-text\">2. 2 关键字</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-3-%E7%89%B9%E7%82%B9\"><span class=\"toc-text\">2. 3 特点</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-4-%E6%B7%BB%E5%8A%A0%E9%9D%9E%E7%A9%BA%E7%BA%A6%E6%9D%9F\"><span class=\"toc-text\">2. 4 添加非空约束</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-5-%E5%88%A0%E9%99%A4%E9%9D%9E%E7%A9%BA%E7%BA%A6%E6%9D%9F\"><span class=\"toc-text\">2. 5 删除非空约束</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-%E5%94%AF%E4%B8%80%E6%80%A7%E7%BA%A6%E6%9D%9F\"><span class=\"toc-text\">3. 唯一性约束</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-1-%E4%BD%9C%E7%94%A8\"><span class=\"toc-text\">3. 1 作用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-2-%E5%85%B3%E9%94%AE%E5%AD%97\"><span class=\"toc-text\">3. 2 关键字</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-3-%E7%89%B9%E7%82%B9\"><span class=\"toc-text\">3. 3 特点</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-4-%E6%B7%BB%E5%8A%A0%E5%94%AF%E4%B8%80%E7%BA%A6%E6%9D%9F\"><span class=\"toc-text\">3. 4 添加唯一约束</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-5-%E5%85%B3%E4%BA%8E%E5%A4%8D%E5%90%88%E5%94%AF%E4%B8%80%E7%BA%A6%E6%9D%9F\"><span class=\"toc-text\">3. 5 关于复合唯一约束</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-6-%E5%88%A0%E9%99%A4%E5%94%AF%E4%B8%80%E7%BA%A6%E6%9D%9F\"><span class=\"toc-text\">3. 6 删除唯一约束</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-PRIMARY-KEY-%E7%BA%A6%E6%9D%9F\"><span class=\"toc-text\">4. PRIMARY KEY 约束</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-1-%E4%BD%9C%E7%94%A8\"><span class=\"toc-text\">4. 1 作用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-2-%E5%85%B3%E9%94%AE%E5%AD%97\"><span class=\"toc-text\">4. 2 关键字</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-3-%E7%89%B9%E7%82%B9\"><span class=\"toc-text\">4. 3 特点</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-4-%E6%B7%BB%E5%8A%A0%E4%B8%BB%E9%94%AE%E7%BA%A6%E6%9D%9F\"><span class=\"toc-text\">4. 4 添加主键约束</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-5-%E5%85%B3%E4%BA%8E%E5%A4%8D%E5%90%88%E4%B8%BB%E9%94%AE\"><span class=\"toc-text\">4. 5 关于复合主键</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-6-%E5%88%A0%E9%99%A4%E4%B8%BB%E9%94%AE%E7%BA%A6%E6%9D%9F\"><span class=\"toc-text\">4. 6 删除主键约束</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-%E8%87%AA%E5%A2%9E%E5%88%97%EF%BC%9AAUTO-INCREMENT\"><span class=\"toc-text\">5. 自增列：AUTO_INCREMENT</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-1-%E4%BD%9C%E7%94%A8\"><span class=\"toc-text\">5. 1 作用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-2-%E5%85%B3%E9%94%AE%E5%AD%97\"><span class=\"toc-text\">5. 2 关键字</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-3-%E7%89%B9%E7%82%B9%E5%92%8C%E8%A6%81%E6%B1%82\"><span class=\"toc-text\">5. 3 特点和要求</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-4-%E5%A6%82%E4%BD%95%E6%8C%87%E5%AE%9A%E8%87%AA%E5%A2%9E%E7%BA%A6%E6%9D%9F\"><span class=\"toc-text\">5. 4 如何指定自增约束</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-5-%E5%A6%82%E4%BD%95%E5%88%A0%E9%99%A4%E8%87%AA%E5%A2%9E%E7%BA%A6%E6%9D%9F\"><span class=\"toc-text\">5. 5 如何删除自增约束</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-6-MySQL-8-0-%E6%96%B0%E7%89%B9%E6%80%A7%E2%80%94%E8%87%AA%E5%A2%9E%E5%8F%98%E9%87%8F%E7%9A%84%E6%8C%81%E4%B9%85%E5%8C%96\"><span class=\"toc-text\">5. 6 MySQL 8. 0 新特性—自增变量的持久化</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#6-FOREIGN-KEY-%E7%BA%A6%E6%9D%9F\"><span class=\"toc-text\">6. FOREIGN KEY 约束</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-1-%E4%BD%9C%E7%94%A8\"><span class=\"toc-text\">6. 1 作用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-2-%E5%85%B3%E9%94%AE%E5%AD%97\"><span class=\"toc-text\">6. 2 关键字</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-3-%E4%B8%BB%E8%A1%A8%E5%92%8C%E4%BB%8E%E8%A1%A8-%E7%88%B6%E8%A1%A8%E5%92%8C%E5%AD%90%E8%A1%A8\"><span class=\"toc-text\">6. 3 主表和从表&#x2F;父表和子表</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-4-%E7%89%B9%E7%82%B9\"><span class=\"toc-text\">6. 4 特点</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-5-%E6%B7%BB%E5%8A%A0%E5%A4%96%E9%94%AE%E7%BA%A6%E6%9D%9F\"><span class=\"toc-text\">6. 5 添加外键约束</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-6-%E6%BC%94%E7%A4%BA%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">6. 6 演示问题</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-7-%E7%BA%A6%E6%9D%9F%E7%AD%89%E7%BA%A7\"><span class=\"toc-text\">6. 7 约束等级</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-8-%E5%88%A0%E9%99%A4%E5%A4%96%E9%94%AE%E7%BA%A6%E6%9D%9F\"><span class=\"toc-text\">6. 8 删除外键约束</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-9-%E5%BC%80%E5%8F%91%E5%9C%BA%E6%99%AF\"><span class=\"toc-text\">6. 9 开发场景</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-10-%E9%98%BF%E9%87%8C%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83\"><span class=\"toc-text\">6. 10 阿里开发规范</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#7-CHECK-%E7%BA%A6%E6%9D%9F\"><span class=\"toc-text\">7. CHECK 约束</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7-1-%E4%BD%9C%E7%94%A8\"><span class=\"toc-text\">7. 1 作用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E3%80%81%E5%85%B3%E9%94%AE%E5%AD%97\"><span class=\"toc-text\">2 、关键字</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E3%80%81%E8%AF%B4%E6%98%8E%EF%BC%9AMySQL-5-7-%E4%B8%8D%E6%94%AF%E6%8C%81\"><span class=\"toc-text\">3 、说明：MySQL 5. 7 不支持</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#8-DEFAULT%E7%BA%A6%E6%9D%9F\"><span class=\"toc-text\">8. DEFAULT约束</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#8-1-%E4%BD%9C%E7%94%A8\"><span class=\"toc-text\">8. 1 作用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#8-2-%E5%85%B3%E9%94%AE%E5%AD%97\"><span class=\"toc-text\">8. 2 关键字</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#8-3-%E5%A6%82%E4%BD%95%E7%BB%99%E5%AD%97%E6%AE%B5%E5%8A%A0%E9%BB%98%E8%AE%A4%E5%80%BC\"><span class=\"toc-text\">8. 3 如何给字段加默认值</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#8-4-%E5%A6%82%E4%BD%95%E5%88%A0%E9%99%A4%E9%BB%98%E8%AE%A4%E5%80%BC%E7%BA%A6%E6%9D%9F\"><span class=\"toc-text\">8. 4 如何删除默认值约束</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#9-%E9%9D%A2%E8%AF%95\"><span class=\"toc-text\">9. 面试</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%AC%AC-14-%E7%AB%A0-%E8%A7%86%E5%9B%BE\"><span class=\"toc-text\">第 14 章_视图</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E5%B8%B8%E8%A7%81%E7%9A%84%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AF%B9%E8%B1%A1\"><span class=\"toc-text\">1. 常见的数据库对象</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E8%A7%86%E5%9B%BE%E6%A6%82%E8%BF%B0\"><span class=\"toc-text\">2. 视图概述</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-1-%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BD%BF%E7%94%A8%E8%A7%86%E5%9B%BE%EF%BC%9F\"><span class=\"toc-text\">2. 1 为什么使用视图？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-2-%E8%A7%86%E5%9B%BE%E7%9A%84%E7%90%86%E8%A7%A3\"><span class=\"toc-text\">2. 2 视图的理解</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-%E5%88%9B%E5%BB%BA%E8%A7%86%E5%9B%BE\"><span class=\"toc-text\">3. 创建视图</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-1-%E5%88%9B%E5%BB%BA%E5%8D%95%E8%A1%A8%E8%A7%86%E5%9B%BE\"><span class=\"toc-text\">3. 1 创建单表视图</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-2-%E5%88%9B%E5%BB%BA%E5%A4%9A%E8%A1%A8%E8%81%94%E5%90%88%E8%A7%86%E5%9B%BE\"><span class=\"toc-text\">3. 2 创建多表联合视图</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-3-%E5%9F%BA%E4%BA%8E%E8%A7%86%E5%9B%BE%E5%88%9B%E5%BB%BA%E8%A7%86%E5%9B%BE\"><span class=\"toc-text\">3. 3 基于视图创建视图</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-%E6%9F%A5%E7%9C%8B%E8%A7%86%E5%9B%BE\"><span class=\"toc-text\">4. 查看视图</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-%E6%9B%B4%E6%96%B0%E8%A7%86%E5%9B%BE%E7%9A%84%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">5. 更新视图的数据</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-1-%E4%B8%80%E8%88%AC%E6%83%85%E5%86%B5\"><span class=\"toc-text\">5. 1 一般情况</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-2-%E4%B8%8D%E5%8F%AF%E6%9B%B4%E6%96%B0%E7%9A%84%E8%A7%86%E5%9B%BE\"><span class=\"toc-text\">5. 2 不可更新的视图</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#6-%E4%BF%AE%E6%94%B9%E3%80%81%E5%88%A0%E9%99%A4%E8%A7%86%E5%9B%BE\"><span class=\"toc-text\">6. 修改、删除视图</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-1-%E4%BF%AE%E6%94%B9%E8%A7%86%E5%9B%BE\"><span class=\"toc-text\">6. 1 修改视图</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-2-%E5%88%A0%E9%99%A4%E8%A7%86%E5%9B%BE\"><span class=\"toc-text\">6. 2 删除视图</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#7-%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">7. 总结</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7-1-%E8%A7%86%E5%9B%BE%E4%BC%98%E7%82%B9\"><span class=\"toc-text\">7. 1 视图优点</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7-2-%E8%A7%86%E5%9B%BE%E4%B8%8D%E8%B6%B3\"><span class=\"toc-text\">7. 2 视图不足</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%AC%AC-15-%E7%AB%A0-%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E4%B8%8E%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">第 15 章_存储过程与函数</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E6%A6%82%E8%BF%B0\"><span class=\"toc-text\">1. 存储过程概述</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-1-%E7%90%86%E8%A7%A3\"><span class=\"toc-text\">1. 1 理解</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-2-%E5%88%86%E7%B1%BB\"><span class=\"toc-text\">1. 2 分类</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E5%88%9B%E5%BB%BA%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B\"><span class=\"toc-text\">2. 创建存储过程</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-1-%E8%AF%AD%E6%B3%95%E5%88%86%E6%9E%90\"><span class=\"toc-text\">2. 1 语法分析</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-2-%E4%BB%A3%E7%A0%81%E4%B8%BE%E4%BE%8B\"><span class=\"toc-text\">2. 2 代码举例</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-%E8%B0%83%E7%94%A8%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B\"><span class=\"toc-text\">3. 调用存储过程</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-1-%E8%B0%83%E7%94%A8%E6%A0%BC%E5%BC%8F\"><span class=\"toc-text\">3. 1 调用格式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-2-%E4%BB%A3%E7%A0%81%E4%B8%BE%E4%BE%8B\"><span class=\"toc-text\">3. 2 代码举例</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-3-%E5%A6%82%E4%BD%95%E8%B0%83%E8%AF%95\"><span class=\"toc-text\">3. 3 如何调试</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-%E5%AD%98%E5%82%A8%E5%87%BD%E6%95%B0%E7%9A%84%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">4. 存储函数的使用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-1-%E8%AF%AD%E6%B3%95%E5%88%86%E6%9E%90\"><span class=\"toc-text\">4. 1 语法分析</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-2-%E8%B0%83%E7%94%A8%E5%AD%98%E5%82%A8%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">4. 2 调用存储函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-3-%E4%BB%A3%E7%A0%81%E4%B8%BE%E4%BE%8B\"><span class=\"toc-text\">4. 3 代码举例</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-4-%E5%AF%B9%E6%AF%94%E5%AD%98%E5%82%A8%E5%87%BD%E6%95%B0%E5%92%8C%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B\"><span class=\"toc-text\">4. 4 对比存储函数和存储过程</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0%E7%9A%84%E6%9F%A5%E7%9C%8B%E3%80%81%E4%BF%AE%E6%94%B9%E3%80%81%E5%88%A0%E9%99%A4\"><span class=\"toc-text\">5. 存储过程和函数的查看、修改、删除</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-1-%E6%9F%A5%E7%9C%8B\"><span class=\"toc-text\">5. 1 查看</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-2-%E4%BF%AE%E6%94%B9\"><span class=\"toc-text\">5. 2 修改</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-3-%E5%88%A0%E9%99%A4\"><span class=\"toc-text\">5. 3 删除</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#6-%E5%85%B3%E4%BA%8E%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E4%BD%BF%E7%94%A8%E7%9A%84%E4%BA%89%E8%AE%AE\"><span class=\"toc-text\">6. 关于存储过程使用的争议</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-1-%E4%BC%98%E7%82%B9\"><span class=\"toc-text\">6. 1 优点</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-2-%E7%BC%BA%E7%82%B9\"><span class=\"toc-text\">6. 2 缺点</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%AC%AC-16-%E7%AB%A0-%E5%8F%98%E9%87%8F%E3%80%81%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E4%B8%8E%E6%B8%B8%E6%A0%87\"><span class=\"toc-text\">第 16 章_变量、流程控制与游标</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">1. 变量</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-1-%E7%B3%BB%E7%BB%9F%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">1. 1 系统变量</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-1-1-%E7%B3%BB%E7%BB%9F%E5%8F%98%E9%87%8F%E5%88%86%E7%B1%BB\"><span class=\"toc-text\">1. 1. 1 系统变量分类</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-1-2-%E6%9F%A5%E7%9C%8B%E7%B3%BB%E7%BB%9F%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">1. 1. 2 查看系统变量</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-2-%E7%94%A8%E6%88%B7%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">1. 2 用户变量</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-2-1-%E7%94%A8%E6%88%B7%E5%8F%98%E9%87%8F%E5%88%86%E7%B1%BB\"><span class=\"toc-text\">1. 2. 1 用户变量分类</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-2-2-%E4%BC%9A%E8%AF%9D%E7%94%A8%E6%88%B7%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">1. 2. 2 会话用户变量</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-2-3-%E5%B1%80%E9%83%A8%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">1. 2. 3 局部变量</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-2-4-%E5%AF%B9%E6%AF%94%E4%BC%9A%E8%AF%9D%E7%94%A8%E6%88%B7%E5%8F%98%E9%87%8F%E4%B8%8E%E5%B1%80%E9%83%A8%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">1. 2. 4 对比会话用户变量与局部变量</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E5%AE%9A%E4%B9%89%E6%9D%A1%E4%BB%B6%E4%B8%8E%E5%A4%84%E7%90%86%E7%A8%8B%E5%BA%8F\"><span class=\"toc-text\">2. 定义条件与处理程序</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-1-%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90\"><span class=\"toc-text\">2. 1 案例分析</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-2-%E5%AE%9A%E4%B9%89%E6%9D%A1%E4%BB%B6\"><span class=\"toc-text\">2. 2 定义条件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-3-%E5%AE%9A%E4%B9%89%E5%A4%84%E7%90%86%E7%A8%8B%E5%BA%8F\"><span class=\"toc-text\">2. 3 定义处理程序</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-4-%E6%A1%88%E4%BE%8B%E8%A7%A3%E5%86%B3\"><span class=\"toc-text\">2. 4 案例解决</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6\"><span class=\"toc-text\">3. 流程控制</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-1-%E5%88%86%E6%94%AF%E7%BB%93%E6%9E%84%E4%B9%8B-IF\"><span class=\"toc-text\">3. 1 分支结构之 IF</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-2-%E5%88%86%E6%94%AF%E7%BB%93%E6%9E%84%E4%B9%8B-CASE\"><span class=\"toc-text\">3. 2 分支结构之 CASE</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-3-%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84%E4%B9%8BLOOP\"><span class=\"toc-text\">3. 3 循环结构之LOOP</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-4-%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84%E4%B9%8BWHILE\"><span class=\"toc-text\">3. 4 循环结构之WHILE</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-5-%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84%E4%B9%8BREPEAT\"><span class=\"toc-text\">3. 5 循环结构之REPEAT</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-6-%E8%B7%B3%E8%BD%AC%E8%AF%AD%E5%8F%A5%E4%B9%8BLEAVE%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">3. 6 跳转语句之LEAVE语句</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-7-%E8%B7%B3%E8%BD%AC%E8%AF%AD%E5%8F%A5%E4%B9%8BITERATE%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">3. 7 跳转语句之ITERATE语句</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-%E6%B8%B8%E6%A0%87\"><span class=\"toc-text\">4. 游标</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-1-%E4%BB%80%E4%B9%88%E6%98%AF%E6%B8%B8%E6%A0%87%EF%BC%88%E6%88%96%E5%85%89%E6%A0%87%EF%BC%89\"><span class=\"toc-text\">4. 1 什么是游标（或光标）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-2-%E4%BD%BF%E7%94%A8%E6%B8%B8%E6%A0%87%E6%AD%A5%E9%AA%A4\"><span class=\"toc-text\">4. 2 使用游标步骤</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-3-%E4%B8%BE%E4%BE%8B\"><span class=\"toc-text\">4. 3 举例</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-5-%E5%B0%8F%E7%BB%93\"><span class=\"toc-text\">4. 5 小结</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%A1%A5%E5%85%85%EF%BC%9AMySQL-8-0-%E7%9A%84%E6%96%B0%E7%89%B9%E6%80%A7%E2%80%94%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F%E7%9A%84%E6%8C%81%E4%B9%85%E5%8C%96\"><span class=\"toc-text\">补充：MySQL 8. 0 的新特性—全局变量的持久化</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%AC%AC-17-%E7%AB%A0-%E8%A7%A6%E5%8F%91%E5%99%A8\"><span class=\"toc-text\">第 17 章_触发器</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E8%A7%A6%E5%8F%91%E5%99%A8%E6%A6%82%E8%BF%B0\"><span class=\"toc-text\">1. 触发器概述</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E8%A7%A6%E5%8F%91%E5%99%A8%E7%9A%84%E5%88%9B%E5%BB%BA\"><span class=\"toc-text\">2. 触发器的创建</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-1-%E5%88%9B%E5%BB%BA%E8%A7%A6%E5%8F%91%E5%99%A8%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\">2. 1 创建触发器语法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-2-%E4%BB%A3%E7%A0%81%E4%B8%BE%E4%BE%8B-1\"><span class=\"toc-text\">2. 2 代码举例</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-%E6%9F%A5%E7%9C%8B%E3%80%81%E5%88%A0%E9%99%A4%E8%A7%A6%E5%8F%91%E5%99%A8\"><span class=\"toc-text\">3. 查看、删除触发器</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-1-%E6%9F%A5%E7%9C%8B%E8%A7%A6%E5%8F%91%E5%99%A8\"><span class=\"toc-text\">3. 1 查看触发器</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-2-%E5%88%A0%E9%99%A4%E8%A7%A6%E5%8F%91%E5%99%A8\"><span class=\"toc-text\">3. 2 删除触发器</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-%E8%A7%A6%E5%8F%91%E5%99%A8%E7%9A%84%E4%BC%98%E7%BC%BA%E7%82%B9\"><span class=\"toc-text\">4. 触发器的优缺点</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-1-%E4%BC%98%E7%82%B9\"><span class=\"toc-text\">4. 1 优点</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-2-%E7%BC%BA%E7%82%B9\"><span class=\"toc-text\">4. 2 缺点</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-3-%E6%B3%A8%E6%84%8F%E7%82%B9\"><span class=\"toc-text\">4. 3 注意点</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%AC%AC-18-%E7%AB%A0-MySQL-8-%E5%85%B6%E5%AE%83%E6%96%B0%E7%89%B9%E6%80%A7\"><span class=\"toc-text\">第 18 章_MySQL 8 其它新特性</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-MySQL-8-%E6%96%B0%E7%89%B9%E6%80%A7%E6%A6%82%E8%BF%B0\"><span class=\"toc-text\">1. MySQL 8 新特性概述</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-1-MySQL-8-0-%E6%96%B0%E5%A2%9E%E7%89%B9%E6%80%A7\"><span class=\"toc-text\">1. 1 MySQL 8. 0 新增特性</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-2-MySQL-8-0-%E7%A7%BB%E9%99%A4%E7%9A%84%E6%97%A7%E7%89%B9%E6%80%A7\"><span class=\"toc-text\">1. 2 MySQL 8. 0 移除的旧特性</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E6%96%B0%E7%89%B9%E6%80%A7-1-%EF%BC%9A%E7%AA%97%E5%8F%A3%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">2. 新特性 1 ：窗口函数</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-1-%E4%BD%BF%E7%94%A8%E7%AA%97%E5%8F%A3%E5%87%BD%E6%95%B0%E5%89%8D%E5%90%8E%E5%AF%B9%E6%AF%94\"><span class=\"toc-text\">2. 1 使用窗口函数前后对比</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-2-%E7%AA%97%E5%8F%A3%E5%87%BD%E6%95%B0%E5%88%86%E7%B1%BB\"><span class=\"toc-text\">2. 2 窗口函数分类</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-3-%E8%AF%AD%E6%B3%95%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">2. 3 语法结构</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-4-%E5%88%86%E7%B1%BB%E8%AE%B2%E8%A7%A3\"><span class=\"toc-text\">2. 4 分类讲解</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-%E5%BA%8F%E5%8F%B7%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">1. 序号函数</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-%E5%88%86%E5%B8%83%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">2. 分布函数</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-%E5%89%8D%E5%90%8E%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">3. 前后函数</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-%E9%A6%96%E5%B0%BE%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">4. 首尾函数</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-%E5%85%B6%E4%BB%96%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">5. 其他函数</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-5-%E5%B0%8F-%E7%BB%93\"><span class=\"toc-text\">2. 5 小 结</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-%E6%96%B0%E7%89%B9%E6%80%A7-2-%EF%BC%9A%E5%85%AC%E7%94%A8%E8%A1%A8%E8%A1%A8%E8%BE%BE%E5%BC%8F\"><span class=\"toc-text\">3. 新特性 2 ：公用表表达式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-1-%E6%99%AE%E9%80%9A%E5%85%AC%E7%94%A8%E8%A1%A8%E8%A1%A8%E8%BE%BE%E5%BC%8F\"><span class=\"toc-text\">3. 1 普通公用表表达式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-2-%E9%80%92%E5%BD%92%E5%85%AC%E7%94%A8%E8%A1%A8%E8%A1%A8%E8%BE%BE%E5%BC%8F\"><span class=\"toc-text\">3. 2 递归公用表表达式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-3-%E5%B0%8F-%E7%BB%93\"><span class=\"toc-text\">3. 3 小 结</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%AC%AC-19-%E7%AB%A0-%E5%86%99%E5%9C%A8%E6%9C%80%E5%90%8E\"><span class=\"toc-text\">第 19 章 _ 写在最后</span></a></li></ol>","author":{"name":"ChenZheng","slug":"chenzheng","avatar":"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/avatar.jpg","link":"https://github.com/sjwusj","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/sjwusj","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Hello World","uid":"b9663f58f18133b35bfe243f3e916a80","slug":"hello-world","date":"2023-11-05T09:36:01.296Z","updated":"2023-11-05T09:35:12.131Z","comments":true,"path":"api/articles/hello-world.json","keywords":null,"cover":null,"text":"Welcome to Hexo! This is your very first post. Check documentation for more info...","permalink":"/post/hello-world","photos":[],"count_time":{"symbolsCount":448,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"ChenZheng","slug":"blog-author","avatar":"/image/avatar.jpg","link":"/","description":"幼稚园的小朋友の快乐小屋","socials":{"github":"https://github.com/sjwusj","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"facebook":{"icon":"/svg/facebook.svg","link":"https://facebook.com"}}}},"feature":true},"next_post":{"title":"Article Title","uid":"a6b82868af4785482b869dc5d958966b","slug":"test","date":"2020-08-15T10:49:36.000Z","updated":"2023-11-08T13:05:56.581Z","comments":true,"path":"api/articles/test.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/avatar.jpg","text":" ","permalink":"/post/test","photos":[],"count_time":{"symbolsCount":1,"symbolsTime":"1 mins."},"categories":[{"name":"Cate","slug":"Cate","count":1,"path":"api/categories/Cate.json"}],"tags":[{"name":"Tag","slug":"Tag","count":1,"path":"api/tags/Tag.json"}],"author":{"name":"ChenZheng","slug":"chenzheng","avatar":"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/avatar.jpg","link":"https://github.com/sjwusj","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/sjwusj","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}