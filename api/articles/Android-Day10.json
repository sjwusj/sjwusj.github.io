{"title":"Android_Day10","uid":"5f1ca7b02ab026fddaef0eab3789a5e5","slug":"Android-Day10","date":"2024-04-29T00:04:20.000Z","updated":"2024-04-30T00:00:08.292Z","comments":true,"path":"api/articles/Android-Day10.json","keywords":null,"cover":"image/cover3.jpg","content":"<h1 id=\"内存泄露\"><a href=\"#内存泄露\" class=\"headerlink\" title=\"内存泄露\"></a>内存泄露</h1><p><a href=\"https://blog.csdn.net/hhitom/article/details/51313163\">关于静态内部类结合WeakReference避免内存泄露，同时可访问外部类的成员</a></p>\n<p><a href=\"https://blog.csdn.net/hehaiminginadth/article/details/53906072\">Android中使用Thread造成内存泄露的分析和解决</a></p>\n<p><a href=\"https://blog.csdn.net/aaLiweipeng/article/details/105340247\">Android卡顿优化 | ANR分析与实战（附ANR-WatchDog源码分析及实战、与AndroidPerformanceMonitor的区别）…</a></p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/595493494\">Android性能优化——内存泄漏的根本原因</a></p>\n<p><a href=\"https://blog.csdn.net/qq_30379689/article/details/129056033\">ANR系列（二）——ANR监听方案之WatchDog</a></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>长生命周期引用短生命周期</p></blockquote>\n<h2 id=\"课程目标\"><a href=\"#课程目标\" class=\"headerlink\" title=\"课程目标\"></a>课程目标</h2><ul>\n<li>掌握Java垃圾回收机制</li>\n<li>掌握内存泄露发生的原理</li>\n<li>掌握使用工具检测内存泄漏</li>\n<li>掌握如何进行内存泄漏优化</li>\n</ul>\n<h2 id=\"一、Java垃圾回收机制\"><a href=\"#一、Java垃圾回收机制\" class=\"headerlink\" title=\"一、Java垃圾回收机制\"></a>一、Java垃圾回收机制</h2><h3 id=\"JVM内存模型\"><a href=\"#JVM内存模型\" class=\"headerlink\" title=\"JVM内存模型\"></a>JVM内存模型</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429082014040.png\" alt=\"image-20240429082014040\"></p>\n<p>Java通过JVM的内存回收机制<strong>自动的</strong>对内存进行回收</p>\n<p>常见时机：空闲状态或者内存占用过高的时候对<strong>无用的对象</strong>（没有被引用）进行回收</p>\n<h3 id=\"JVM内存回收算法\"><a href=\"#JVM内存回收算法\" class=\"headerlink\" title=\"JVM内存回收算法\"></a>JVM内存回收算法</h3><h4 id=\"引用计数算法\"><a href=\"#引用计数算法\" class=\"headerlink\" title=\"引用计数算法\"></a>引用计数算法</h4><p>一个对象被创建之后，系统会给这个对象初始化一个引用计数器，当这个对象被引用了，则计数器+1，而当该引用失效后，计数器便-1，直到计数器为0，意味着该对象不再被使用了，则可以将其进行回收了。</p>\n<ul>\n<li><p>优点：判定比较简单，效率也很高</p>\n</li>\n<li><p>缺点：无法避免循环引用，即两个对象之间循环引用的时候，各各自的计数器始终不会变成0</p>\n</li>\n</ul>\n<img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429082746860.png\" alt=\"image-20240429082746860\" style=\"zoom:67%;\" />\n\n\n\n<h4 id=\"可达性分析法\"><a href=\"#可达性分析法\" class=\"headerlink\" title=\"可达性分析法\"></a>可达性分析法</h4><p>中心思想，就是从某一根对象（GCRoots）出发，一步步遍历找到和这个根对象具有引I用关系的对象，从而形成一个个的<strong>引用链</strong>，不在任意引用链上的对象是不可达对象，也就是我们说的“<strong>垃圾</strong>”，这些对象可以回收</p>\n<img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429082842696.png\" alt=\"image-20240429082842696\" style=\"zoom:80%;\" />\n\n<p><strong>根对象包含</strong></p>\n<ul>\n<li><p>1.虚拟机栈中引用的对象</p>\n</li>\n<li><p>2.方法区中类静态属性引用的对象</p>\n</li>\n<li><p>3.方法区中常量引用的对象</p>\n</li>\n<li><p>4.本地方法栈中JNI引用的对象</p>\n</li>\n</ul>\n<p>共同点：存活周期长</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>如果一个对象是可达性对象就一定不能被回收么？</p></blockquote>\n<p>不一定，弱引用可回收</p>\n<h3 id=\"Java四种引用类型\"><a href=\"#Java四种引用类型\" class=\"headerlink\" title=\"Java四种引用类型\"></a>Java四种引用类型</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429083722089.png\" alt=\"image-20240429083722089\"></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Java的四种引用的级别由高到低依次为：<strong>强引用-&gt;软引用-&gt;弱引用-&gt;虚引用</strong></p></blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429084158646.png\" alt=\"image-20240429084158646\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429084433579.png\" alt=\"image-20240429084433579\"></p>\n<h3 id=\"Java内存回收机制-小结\"><a href=\"#Java内存回收机制-小结\" class=\"headerlink\" title=\"Java内存回收机制-小结\"></a>Java内存回收机制-小结</h3><p>问题</p>\n<ul>\n<li>多个循环引用的对象可以被回收吗？</li>\n<li>可以，看类型和算法</li>\n</ul>\n<p>总结</p>\n<ul>\n<li><p>1.Java内存回收算法：引用计数器，可达性分析</p>\n</li>\n<li><p>2.Java应用类型：强&gt;软&gt;弱&gt;虚</p>\n</li>\n</ul>\n<h3 id=\"垃圾回收器输出\"><a href=\"#垃圾回收器输出\" class=\"headerlink\" title=\"垃圾回收器输出\"></a>垃圾回收器输出</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429084809381.png\" alt=\"image-20240429084809381\"></p>\n<h2 id=\"二、内存泄漏介绍和检测工具\"><a href=\"#二、内存泄漏介绍和检测工具\" class=\"headerlink\" title=\"二、内存泄漏介绍和检测工具\"></a>二、内存泄漏介绍和检测工具</h2><h3 id=\"内存泄露介绍\"><a href=\"#内存泄露介绍\" class=\"headerlink\" title=\"内存泄露介绍\"></a>内存泄露介绍</h3><p><strong>什么是内存泄露</strong></p>\n<p>内存泄漏是指程序中的堆内存由于某种原因程序<strong>未释放</strong>或<strong>无法释放</strong>造成系统内存的浪费</p>\n<p><strong>内存泄漏特征</strong></p>\n<p>隐蔽性、积累性遗漏型缺陷，不是过错型缺陷</p>\n<p>Android为不同类型的进程分配了不同的内存使用上限，如果程序发生了内存泄漏就有可能超出这个上限，从而会被系统视为内存溢出（OOM），从而被系统强制杀死，用户体验上就是<strong>崩溃</strong></p>\n<h3 id=\"内存泄露的危害\"><a href=\"#内存泄露的危害\" class=\"headerlink\" title=\"内存泄露的危害\"></a>内存泄露的危害</h3><p>内存泄漏的危害</p>\n<p>1.内存回收和gc回收垃圾资源之间高频率交替的执行，就会产生<strong>内存抖动</strong>。</p>\n<p>2.用户对单次的内存泄漏并没有什么感知，但是当泄漏积累到内存都被消耗完，就会导致<strong>卡顿</strong>，甚至<strong>崩溃</strong>；</p>\n<p>3.当内存不足的时候，GC会主动回收没用的内存，但是<strong>内存回收也是需要时间</strong>的，GC操作完成后，其他操作才能够继续运行，所以垃圾回收运行的次数越少，对性能的影响就越少</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429090027260.png\" alt=\"image-20240429090027260\"></p>\n<h3 id=\"内存泄漏的原因\"><a href=\"#内存泄漏的原因\" class=\"headerlink\" title=\"内存泄漏的原因\"></a>内存泄漏的原因</h3><p><strong>短生命周期</strong>的对象被<strong>长生命周期</strong>的对象持有，导致其无法被回收，造成了内存泄漏。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Android中哪些对象被长生命周期对象持有会导致内存泄漏？</p></blockquote>\n<ol>\n<li><p>Activity</p>\n</li>\n<li><p>Fragment</p>\n</li>\n<li><p>View</p>\n</li>\n<li><p>Service</p>\n</li>\n<li><p>Handler</p>\n</li>\n</ol>\n<h3 id=\"Profiler内存检测工具\"><a href=\"#Profiler内存检测工具\" class=\"headerlink\" title=\"Profiler内存检测工具\"></a>Profiler内存检测工具</h3><p>打开Android Studio-&gt;运行demo-&gt;打开Profiler工具-&gt;选择 memory卡片</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429092004578.png\" alt=\"image-20240429092004578\"></p>\n<p>多次重复进入同一个页面，关闭页面后多次主动触发GC观察内存是否回到初始水平</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>问题：如果发生了内存泄露，会发生什么情况</p></blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429092654279.png\" alt=\"image-20240429092654279\"></p>\n<h3 id=\"内存泄露在profiler中的状态\"><a href=\"#内存泄露在profiler中的状态\" class=\"headerlink\" title=\"内存泄露在profiler中的状态\"></a>内存泄露在profiler中的状态</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429092915270.png\" alt=\"image-20240429092915270\"></p>\n<h3 id=\"Profiler有什么缺点\"><a href=\"#Profiler有什么缺点\" class=\"headerlink\" title=\"Profiler有什么缺点\"></a>Profiler有什么缺点</h3><p>没法自动发现问题</p>\n<h3 id=\"内存泄露检测工具-LeakCanary\"><a href=\"#内存泄露检测工具-LeakCanary\" class=\"headerlink\" title=\"内存泄露检测工具-LeakCanary\"></a>内存泄露检测工具-LeakCanary</h3><p>LeakCanary是Square公司为Android开发者提供的自动检测内存泄漏的工具，我们可以通过集成jar包到自己的工程中，一旦检测到内存泄漏，LeakCanary就会dumpMemory信息，展示内存泄漏的对象和引用路径</p>\n<p><strong>引用方式：</strong></p>\n<div class=\"language-kotlin\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">kotlin</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">debuglmplementation</span><span style=\"color: #C3E88D\">&#39;com.squareup.leakcanary:leakcanary-android:2.12&#39;</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">implementation</span><span style=\"color: #BABED8\">(</span><span style=\"color: #C3E88D\">&quot;com.squareup.leakcanary:leakcanary-android:2.12&quot;</span><span style=\"color: #BABED8\">)</span></span></code></pre></div><h3 id=\"LeakCanary使用\"><a href=\"#LeakCanary使用\" class=\"headerlink\" title=\"LeakCanary使用\"></a>LeakCanary使用</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429093701099.png\" alt=\"image-20240429093701099\"></p>\n<h2 id=\"三、内存泄漏案例分析\"><a href=\"#三、内存泄漏案例分析\" class=\"headerlink\" title=\"三、内存泄漏案例分析\"></a>三、内存泄漏案例分析</h2><h3 id=\"1-单例模式持有Activity、FragmentContext\"><a href=\"#1-单例模式持有Activity、FragmentContext\" class=\"headerlink\" title=\"1.单例模式持有Activity、FragmentContext\"></a>1.单例模式持有Activity、FragmentContext</h3><div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">package</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">class_0429</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">android</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">content</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">Context</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">class</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Singleton</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">private</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">static</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">volatile</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">Singleton</span><span style=\"color: #BABED8\"> instance</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">private</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">Context</span><span style=\"color: #BABED8\"> context</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Singleton</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">Context</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">context</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">this.</span><span style=\"color: #BABED8\">context </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> context</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">static</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">Singleton</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">getInstance</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">Context</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">context</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">instance</span><span style=\"color: #89DDFF\">==null)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #C792EA\">synchronized</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">Singleton</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">class</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">instance</span><span style=\"color: #89DDFF\">==null)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                    instance </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Singleton</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">context</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> instance</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">String</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">getText</span><span style=\"color: #89DDFF\">()&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">单例模式</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429093900345.png\" alt=\"image-20240429093900345\"></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>解决方法：</strong>单例中必须要使用Context,可以传入Application的Context</p></blockquote>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF\">@</span><span style=\"color: #C792EA\">Override</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">protected</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">onCreate</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">Bundle</span><span style=\"color: #BABED8\"> savedInstanceState</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  super</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">onCreate</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">savedInstanceState</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #82AAFF\">setContentView</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">R</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">layout</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">single_ton_activity</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  mTextView </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">findViewById</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">R</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">id</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">singleton_tv</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">  </span><span style=\"color: #676E95; font-style: italic\">//会内存泄漏</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  mTextView</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">setText</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">Singleton</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getInstance</span><span style=\"color: #89DDFF\">(this).</span><span style=\"color: #82AAFF\">getText</span><span style=\"color: #89DDFF\">());</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">  </span><span style=\"color: #676E95; font-style: italic\">//不会泄漏</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">  </span><span style=\"color: #676E95; font-style: italic\">//        mTextView.setText(Singleton.getInstance(getApplicationContext()).getText());</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><p>点击跳转返回在跳转在返回直到出现小鸟</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429101452192.png\" alt=\"image-20240429101452192\"></p>\n<p>profiler显示出现内存泄漏</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429100901073.png\" alt=\"image-20240429100901073\"></p>\n<p>查看小鸟app查看问题</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429100557880.png\" alt=\"image-20240429100557880\"></p>\n<h3 id=\"2-匿名内部类显式持有外部类的引用\"><a href=\"#2-匿名内部类显式持有外部类的引用\" class=\"headerlink\" title=\"2.匿名内部类显式持有外部类的引用\"></a>2.匿名内部类显式持有外部类的引用</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429101651313.png\" alt=\"image-20240429101651313\"></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>解决方法</strong>：将匿名内部类转换为直接实现该方法</p></blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429101933709.png\" alt=\"image-20240429101933709\"></p>\n<h3 id=\"3-内部类隐性持有外部类引用，导致内存泄漏\"><a href=\"#3-内部类隐性持有外部类引用，导致内存泄漏\" class=\"headerlink\" title=\"3.内部类隐性持有外部类引用，导致内存泄漏\"></a>3.内部类隐性持有外部类引用，导致内存泄漏</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429102324492.png\" alt=\"image-20240429102324492\"></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">package</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">class_0429</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">android</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">os</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">Bundle</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">android</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">util</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">Log</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">android</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">view</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">View</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">androidx</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">appcompat</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">app</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">AppCompatActivity</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">com</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">example</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">xiaomiapplication</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">R</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">class</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">InnerClassActivity</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">extends</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">AppCompatActivity</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">private</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">final</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">String</span><span style=\"color: #BABED8\"> TAG </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">InnerClassActivity</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">@</span><span style=\"color: #C792EA\">Override</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">protected</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">onCreate</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">Bundle</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">savedInstanceState</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        super</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">onCreate</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">savedInstanceState</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #82AAFF\">setContentView</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">R</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">layout</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">class_0429_inner_class_activity</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #82AAFF\">findViewById</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">R</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">id</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">btn_inner_class</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #82AAFF\">setOnClickListener</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> View</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">OnClickListener</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF\">@</span><span style=\"color: #C792EA\">Override</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">onClick</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">View</span><span style=\"color: #BABED8\"> v</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                </span><span style=\"color: #C792EA\">InnerClass</span><span style=\"color: #BABED8\"> innerClass </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">InnerClass</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                innerClass</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">test</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                </span><span style=\"color: #82AAFF\">finish</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">String</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">getActivityString</span><span style=\"color: #89DDFF\">()&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">内部类</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">private</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">class</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">InnerClass</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">test</span><span style=\"color: #89DDFF\">()&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Thread</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Runnable</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                </span><span style=\"color: #89DDFF\">@</span><span style=\"color: #C792EA\">Override</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">run</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                    </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #89DDFF\">(true)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                        Log</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">i</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">TAG</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">内部类持有：</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #82AAFF\">getActivityString</span><span style=\"color: #89DDFF\">());</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                        </span><span style=\"color: #89DDFF; font-style: italic\">try</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                            Thread</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">sleep</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">1000</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                        </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">catch</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">InterruptedException</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">e</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                            </span><span style=\"color: #89DDFF; font-style: italic\">throw</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">RuntimeException</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">e</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF\">&#125;).</span><span style=\"color: #82AAFF\">start</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429104609424.png\" alt=\"image-20240429104609424\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429104432887.png\" alt=\"image-20240429104432887\"></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p> <strong>解决方法</strong>：将内部类改为静态内部类，如果需要使用Activity或者Fragment配合WeakReference解决内存泄漏,不使用WeakReference，出现短生命周期变为长生命周期，再次出现问题</p></blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429102336719.png\" alt=\"image-20240429102336719\"></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">package</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">class_0429</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">android</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">os</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">Bundle</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">android</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">util</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">Log</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">android</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">view</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">View</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">androidx</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">appcompat</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">app</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">AppCompatActivity</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">com</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">example</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">xiaomiapplication</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">R</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">java</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">lang</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">ref</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">WeakReference</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">class</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">InnerClassActivity</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">extends</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">AppCompatActivity</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">private</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">final</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">static</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">String</span><span style=\"color: #BABED8\"> TAG </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">InnerClassActivity</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">@</span><span style=\"color: #C792EA\">Override</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">protected</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">onCreate</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">Bundle</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">savedInstanceState</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        super</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">onCreate</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">savedInstanceState</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #82AAFF\">setContentView</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">R</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">layout</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">class_0429_inner_class_activity</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #82AAFF\">findViewById</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">R</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">id</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">btn_inner_class</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #82AAFF\">setOnClickListener</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> View</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">OnClickListener</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF\">@</span><span style=\"color: #C792EA\">Override</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">onClick</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">View</span><span style=\"color: #BABED8\"> v</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//                InnerClass innerClass = new InnerClass();</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//                innerClass.test();</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//                finish();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                </span><span style=\"color: #C792EA\">StaticInnerClass</span><span style=\"color: #BABED8\"> staticInnerClass </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">StaticInnerClass</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">InnerClassActivity</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">this</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                staticInnerClass</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">test</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                </span><span style=\"color: #82AAFF\">finish</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">static</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">String</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">getActivityString</span><span style=\"color: #89DDFF\">()&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">内部类</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">private</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">static</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">class</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">StaticInnerClass</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">WeakReference</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">InnerClassActivity</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> act</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">StaticInnerClass</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">InnerClassActivity</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">activity</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            act </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">WeakReference</span><span style=\"color: #89DDFF\">&lt;&gt;(</span><span style=\"color: #BABED8\">activity</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">test</span><span style=\"color: #89DDFF\">()&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Thread</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Runnable</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                </span><span style=\"color: #89DDFF\">@</span><span style=\"color: #C792EA\">Override</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">run</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                    </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #89DDFF\">(true)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">act</span><span style=\"color: #89DDFF\">!=null&amp;&amp;</span><span style=\"color: #BABED8\">act</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">get</span><span style=\"color: #89DDFF\">()!=null)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                            Log</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">i</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">TAG</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">内部类持有：</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #82AAFF\">getActivityString</span><span style=\"color: #89DDFF\">());</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                        </span><span style=\"color: #89DDFF; font-style: italic\">try</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                            Thread</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">sleep</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">1000</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                        </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">catch</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">InterruptedException</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">e</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                            </span><span style=\"color: #89DDFF; font-style: italic\">throw</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">RuntimeException</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">e</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF\">&#125;).</span><span style=\"color: #82AAFF\">start</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">private</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">class</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">InnerClass</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">test</span><span style=\"color: #89DDFF\">()&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Thread</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Runnable</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                </span><span style=\"color: #89DDFF\">@</span><span style=\"color: #C792EA\">Override</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">run</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                    </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #89DDFF\">(true)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                        Log</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">i</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">TAG</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">内部类持有：</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #82AAFF\">getActivityString</span><span style=\"color: #89DDFF\">());</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                        </span><span style=\"color: #89DDFF; font-style: italic\">try</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                            Thread</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">sleep</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">1000</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                        </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">catch</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">InterruptedException</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">e</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                            </span><span style=\"color: #89DDFF; font-style: italic\">throw</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">RuntimeException</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">e</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF\">&#125;).</span><span style=\"color: #82AAFF\">start</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429105418345.png\" alt=\"image-20240429105418345\"></p>\n<h3 id=\"4-Timer、EventBus、Broadcast等需要反注册或者cancel\"><a href=\"#4-Timer、EventBus、Broadcast等需要反注册或者cancel\" class=\"headerlink\" title=\"4.Timer、EventBus、Broadcast等需要反注册或者cancel()\"></a>4.Timer、EventBus、Broadcast等需要反注册或者cancel()</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429105449757.png\" alt=\"image-20240429105449757\"></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>解决方法</strong>：必须在Activity的onDestroy(和Fragment的onDestroyView()中反注册或者cancel()</p></blockquote>\n<h3 id=\"5-Handler内存泄漏\"><a href=\"#5-Handler内存泄漏\" class=\"headerlink\" title=\"5.Handler内存泄漏\"></a>5.Handler内存泄漏</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429105733616.png\" alt=\"image-20240429105733616\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429110509452.png\" alt=\"image-20240429110509452\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429110520719.png\" alt=\"image-20240429110520719\"></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>解决方法：静态内部类+WeakReference，同时onDestroy(中removeCallbacksAndMessages</p></blockquote>\n<h3 id=\"Handler标准范式\"><a href=\"#Handler标准范式\" class=\"headerlink\" title=\"Handler标准范式\"></a>Handler标准范式</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429105932988.png\" alt=\"image-20240429105932988\"></p>\n<h3 id=\"6-WebView导致内存泄漏\"><a href=\"#6-WebView导致内存泄漏\" class=\"headerlink\" title=\"6.WebView导致内存泄漏\"></a>6.WebView导致内存泄漏</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429112252707.png\" alt=\"image-20240429112252707\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429112337971.png\" alt=\"image-20240429112337971\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429112354868.png\" alt=\"image-20240429112354868\"></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>解决方法：</strong>在Activity的onDestroy(移除WebView并进行销毁)</p></blockquote>\n<h3 id=\"练习题\"><a href=\"#练习题\" class=\"headerlink\" title=\"练习题\"></a>练习题</h3><p>1.练习上述的案例，使用LeakCanary进行检测，解决内存泄漏问题</p>\n<p>2.在实际开发中还遇到那些内存泄漏的问题，如何解决？</p>\n<ul>\n<li>okhttp网络请求完要取消</li>\n</ul>\n<h2 id=\"四、LeakCanary原理\"><a href=\"#四、LeakCanary原理\" class=\"headerlink\" title=\"四、LeakCanary原理\"></a>四、LeakCanary原理</h2><h3 id=\"LeakCanary检测流程\"><a href=\"#LeakCanary检测流程\" class=\"headerlink\" title=\"LeakCanary检测流程\"></a>LeakCanary检测流程</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429112937752.png\" alt=\"image-20240429112937752\"></p>\n<h3 id=\"LeakCanary结构图\"><a href=\"#LeakCanary结构图\" class=\"headerlink\" title=\"LeakCanary结构图\"></a>LeakCanary结构图</h3><p>Object-watch：初始化、内存泄漏判断触发时机，判断是否发生内存泄漏</p>\n<p>Leak-android：进行dump生成hprofile文件</p>\n<p>Shark:解析hprofile文件，生成HeapGraph，分析内存泄漏</p>\n<h3 id=\"触发检测时机\"><a href=\"#触发检测时机\" class=\"headerlink\" title=\"触发检测时机\"></a>触发检测时机</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429113653687.png\" alt=\"image-20240429113653687\"></p>\n<h3 id=\"LeakCanary检测内存泄漏流程\"><a href=\"#LeakCanary检测内存泄漏流程\" class=\"headerlink\" title=\"LeakCanary检测内存泄漏流程\"></a>LeakCanary检测内存泄漏流程</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429113840460.png\" alt=\"image-20240429113840460\"></p>\n<h3 id=\"Hprof文件\"><a href=\"#Hprof文件\" class=\"headerlink\" title=\"Hprof文件\"></a>Hprof文件</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429114408891.png\" alt=\"image-20240429114408891\"></p>\n<h3 id=\"Hprof文件分析\"><a href=\"#Hprof文件分析\" class=\"headerlink\" title=\"Hprof文件分析\"></a>Hprof文件分析</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429114518758.png\" alt=\"image-20240429114518758\"></p>\n<h3 id=\"练习题-1\"><a href=\"#练习题-1\" class=\"headerlink\" title=\"练习题\"></a>练习题</h3><p>1.描述LeakCanary检测内存泄漏的流程</p>\n<p>2.触发LeakCanary的检测时机</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>1.Java垃圾回收机制和四种引用类型</p>\n<p>2.使用LeakCanary检测内存泄漏</p>\n<p>3.学习常见的内存泄漏场景和解决方案</p>\n<p>4.深入学习LeakCanary的原理</p>\n<h3 id=\"思考\"><a href=\"#思考\" class=\"headerlink\" title=\"思考\"></a>思考</h3><p>1.在实际开发中还遇到那些内存泄漏的问题，如何解决？</p>\n<p>2.其他检测内存泄漏的工具有哪些？</p>\n<p>3.其他内存泄漏检测工具和LeakCanary的异同</p>\n<h1 id=\"ANR应用程序响应\"><a href=\"#ANR应用程序响应\" class=\"headerlink\" title=\"ANR应用程序响应\"></a>ANR应用程序响应</h1><h2 id=\"课程目标：\"><a href=\"#课程目标：\" class=\"headerlink\" title=\"课程目标：\"></a>课程目标：</h2><ul>\n<li><p>认知ANR，掌握ANR发生的原因；</p>\n</li>\n<li><p>掌握使用工具定位ANR</p>\n</li>\n<li><p>如何进行ANR问题修复</p>\n</li>\n</ul>\n<h2 id=\"一、初识ANR\"><a href=\"#一、初识ANR\" class=\"headerlink\" title=\"一、初识ANR\"></a>一、初识ANR</h2><h3 id=\"什么是ANR\"><a href=\"#什么是ANR\" class=\"headerlink\" title=\"什么是ANR\"></a>什么是ANR</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429133626326.png\" alt=\"image-20240429133626326\"></p>\n<h3 id=\"ANR产生的原因\"><a href=\"#ANR产生的原因\" class=\"headerlink\" title=\"ANR产生的原因\"></a>ANR产生的原因</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>只有当应用程序的<strong>UI线程响应超时</strong>才会引起ANR，超时产生原因一般有两种。</p></blockquote>\n<p>1.当前的事件没有机会得到处理，例如UI线程正在响应另一个事件，当前事件由于某种原因<strong>被阻塞</strong>了。</p>\n<p>2.当前的事件正在处理，但是由于耗时太长没能及时完成。</p>\n<h3 id=\"ANR触发的流程\"><a href=\"#ANR触发的流程\" class=\"headerlink\" title=\"ANR触发的流程\"></a>ANR触发的流程</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429134115204.png\" alt=\"image-20240429134115204\"></p>\n<h3 id=\"ANR不触发的流程\"><a href=\"#ANR不触发的流程\" class=\"headerlink\" title=\"ANR不触发的流程\"></a>ANR不触发的流程<img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429134310571.png\" alt=\"image-20240429134310571\"></h3><h2 id=\"二、ANR类型介绍\"><a href=\"#二、ANR类型介绍\" class=\"headerlink\" title=\"二、ANR类型介绍\"></a>二、ANR类型介绍</h2><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429134600517.png\" alt=\"image-20240429134600517\"></p>\n<h2 id=\"三、ANR案例介绍\"><a href=\"#三、ANR案例介绍\" class=\"headerlink\" title=\"三、ANR案例介绍\"></a>三、ANR案例介绍</h2><h3 id=\"主线程执行耗时\"><a href=\"#主线程执行耗时\" class=\"headerlink\" title=\"主线程执行耗时\"></a>主线程执行耗时</h3><p>执行耗时操作，例如有大量的计算、循环、递归和IO操作等行为，导致ANR</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>解决：创建子线程</p></blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429135105169.png\" alt=\"image-20240429135105169\"></p>\n<img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429135428899.png\" alt=\"image-20240429135428899\" style=\"zoom:67%;\" />\n\n<h3 id=\"主线程死锁\"><a href=\"#主线程死锁\" class=\"headerlink\" title=\"主线程死锁\"></a>主线程死锁</h3><p>当前对象锁被其他线程持有，主线程长时间无法获取当前对象锁，导致ANR；</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429135829283.png\" alt=\"image-20240429135829283\"></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>解决方法：</strong>使用ReentrantLock代替synchronized，同时tryLock()增加最大等待时间，超过最大等待时间，主动释放锁，避免出现ANR；</p></blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429140142431.png\" alt=\"image-20240429140142431\"></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">private</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">ReentrantLock</span><span style=\"color: #BABED8\"> lock </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">ReentrantLock</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">findViewById</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">R</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">id</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">thread_anr</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #82AAFF\">setOnClickListener</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> View</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">OnClickListener</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF\">@</span><span style=\"color: #C792EA\">Override</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">onClick</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">View</span><span style=\"color: #BABED8\"> v</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//                synchronized (object)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//                    Log.i(&quot;TAG&quot;, &quot;死锁导致ANR:&quot;+taskComplete);</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//                &#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">              </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                </span><span style=\"color: #C792EA\">boolean</span><span style=\"color: #BABED8\"> acquired </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">false;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                </span><span style=\"color: #89DDFF; font-style: italic\">try</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                    acquired </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> lock</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">tryLock</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">3</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> TimeUnit</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">SECONDS</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">acquired</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                        Log</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">d</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">TAG</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">获取了锁</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                    </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #89DDFF; font-style: italic\">else</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                        Log</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">d</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">TAG</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">未获取锁</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">catch</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">InterruptedException</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">e</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                    </span><span style=\"color: #89DDFF; font-style: italic\">throw</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">RuntimeException</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">e</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #89DDFF; font-style: italic\">finally</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">acquired</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                        lock</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">unlock</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Thread</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Runnable</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF\">@</span><span style=\"color: #C792EA\">Override</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">run</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">              </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//                synchronized (object)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//                    try &#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//                        Thread.sleep(30*1000);</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//                    &#125; catch (InterruptedException e) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//                        throw new RuntimeException(e);</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//                    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//                    taskComplete = true;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//                &#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">              </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">lock</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">tryLock</span><span style=\"color: #89DDFF\">())&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                    </span><span style=\"color: #89DDFF; font-style: italic\">try</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                        Thread</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">sleep</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">30</span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F78C6C\">1000</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                        taskComplete</span><span style=\"color: #89DDFF\">=true;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                    </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">catch</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">InterruptedException</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">e</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                        </span><span style=\"color: #89DDFF; font-style: italic\">throw</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">RuntimeException</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">e</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                    </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #89DDFF; font-style: italic\">finally</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                        lock</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">unlock</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;).</span><span style=\"color: #82AAFF\">start</span><span style=\"color: #89DDFF\">();</span></span></code></pre></div><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429143650928.png\" alt=\"image-20240429143650928\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429143610347.png\" alt=\"image-20240429143610347\"></p>\n<h3 id=\"主线程进行跨进程通信binder导致ANR\"><a href=\"#主线程进行跨进程通信binder导致ANR\" class=\"headerlink\" title=\"主线程进行跨进程通信binder导致ANR\"></a>主线程进行跨进程通信binder导致ANR</h3><p>主线程获取当前网络状态，判断当前是否有网；</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429144322387.png\" alt=\"image-20240429144322387\"></p>\n<h3 id=\"SharePreference使用commit-保存数据\"><a href=\"#SharePreference使用commit-保存数据\" class=\"headerlink\" title=\"SharePreference使用commit()保存数据\"></a>SharePreference使用commit()保存数据</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429144608801.png\" alt=\"image-20240429144608801\"></p>\n<h2 id=\"四、ANR问题定位\"><a href=\"#四、ANR问题定位\" class=\"headerlink\" title=\"四、ANR问题定位\"></a>四、ANR问题定位</h2><p>traces文件获取</p>\n<p>1.adbbugreport导出压缩文件解压后FS&#x2F;data&#x2F;anr目录下就可以看到traces文件</p>\n<p>2.* #* #284# *# *(小米手机)</p>\n<h3 id=\"1、确定ANR类型和时间点\"><a href=\"#1、确定ANR类型和时间点\" class=\"headerlink\" title=\"1、确定ANR类型和时间点\"></a>1、确定ANR类型和时间点</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429150325322.png\" alt=\"image-20240429150325322\"></p>\n<h3 id=\"2、检查CPU信息\"><a href=\"#2、检查CPU信息\" class=\"headerlink\" title=\"2、检查CPU信息\"></a>2、检查CPU信息</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429151537419.png\" alt=\"image-20240429151537419\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429151228601.png\" alt=\"image-20240429151228601\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429151252093.png\" alt=\"image-20240429151252093\"></p>\n<h3 id=\"3、检查内存信息\"><a href=\"#3、检查内存信息\" class=\"headerlink\" title=\"3、检查内存信息\"></a>3、检查内存信息</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429153717562.png\" alt=\"image-20240429153717562\"></p>\n<h3 id=\"4-检查LowMemoryKiller\"><a href=\"#4-检查LowMemoryKiller\" class=\"headerlink\" title=\"4.检查LowMemoryKiller\"></a>4.检查LowMemoryKiller</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429154549933.png\" alt=\"image-20240429154549933\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429154908771.png\" alt=\"image-20240429154908771\"></p>\n<h3 id=\"主线程死锁导致ANR\"><a href=\"#主线程死锁导致ANR\" class=\"headerlink\" title=\"主线程死锁导致ANR\"></a>主线程死锁导致ANR</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429155413623.png\" alt=\"image-20240429155413623\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429155844129.png\" alt=\"image-20240429155844129\"></p>\n<h3 id=\"练习题-2\"><a href=\"#练习题-2\" class=\"headerlink\" title=\"练习题\"></a>练习题</h3><p>1.根据ANR案例，使用adbbugreport获取traces文件</p>\n<p>2.通过traces文件分析ANR发生的原因</p>\n<h2 id=\"五、检测工具\"><a href=\"#五、检测工具\" class=\"headerlink\" title=\"五、检测工具\"></a>五、检测工具</h2><h3 id=\"ANR-WatchDog\"><a href=\"#ANR-WatchDog\" class=\"headerlink\" title=\"ANR-WatchDog\"></a>ANR-WatchDog</h3><p>WatchDog是个开源的框架，是一个短小精悍的UI卡顿监测框架，只有2个源文件，ANRWatchDog和ANRError</p>\n<p>ANR-WatchDog核心原理启动一个异步线程，在while循环中，使用主线程的Handler发送一个消息，线程休眠指定的时间5s，当线程唤醒之后，如果发送的消息还没被主线程执行，即认为主线程发生了卡顿。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429163536498.png\" alt=\"image-20240429163536498\"></p>\n<div class=\"language-kotlin\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">kotlin</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//ANR-WatchDog</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">implementation</span><span style=\"color: #BABED8\">(</span><span style=\"color: #C3E88D\">&quot;com.github.anrwatchdog:anrwatchdog:1.4.0&quot;</span><span style=\"color: #BABED8\">)</span></span></code></pre></div><h3 id=\"ANR-WatchDog日志\"><a href=\"#ANR-WatchDog日志\" class=\"headerlink\" title=\"ANR-WatchDog日志\"></a>ANR-WatchDog日志</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429164341836.png\" alt=\"image-20240429164341836\"></p>\n<h3 id=\"ANR-WatchDog原理\"><a href=\"#ANR-WatchDog原理\" class=\"headerlink\" title=\"ANR-WatchDog原理\"></a>ANR-WatchDog原理</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429164503027.png\" alt=\"image-20240429164503027\"></p>\n<h3 id=\"WatchDog弊端\"><a href=\"#WatchDog弊端\" class=\"headerlink\" title=\"WatchDog弊端\"></a>WatchDog弊端</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429165111154.png\" alt=\"image-20240429165111154\"></p>\n<h3 id=\"WatchDog总结\"><a href=\"#WatchDog总结\" class=\"headerlink\" title=\"WatchDog总结\"></a>WatchDog总结</h3><p><strong>优点</strong></p>\n<ul>\n<li><p>兼容性好，各个机型版本通用</p>\n</li>\n<li><p>无需修改APP逻辑代码，非侵入式</p>\n</li>\n<li><p>逻辑简单，性能影响不大</p>\n</li>\n</ul>\n<p><strong>缺点</strong></p>\n<ul>\n<li><p>无法保证能捕捉所有ANR，</p>\n</li>\n<li><p>对阈值的设置直接影响捕获概率</p>\n</li>\n</ul>\n<h3 id=\"练习题-3\"><a href=\"#练习题-3\" class=\"headerlink\" title=\"练习题\"></a>练习题</h3><p>1.根据ANR案例，使用ANR-WatchDog检测ANR</p>\n<h3 id=\"思考题\"><a href=\"#思考题\" class=\"headerlink\" title=\"思考题\"></a>思考题</h3><p>ANR-WatchDog弊端如何改进?</p>\n<h3 id=\"总结-1\"><a href=\"#总结-1\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240429165709667.png\" alt=\"image-20240429165709667\"></p>\n<h1 id=\"课后作业\"><a href=\"#课后作业\" class=\"headerlink\" title=\"课后作业\"></a>课后作业</h1><p>1.使用LeakCanary检测网络通信实践与原理课程作业的内存泄漏，进行优化</p>\n<p>2.优化ANR-WatchDog检测ANR机制</p>\n<p>说明：</p>\n<ol>\n<li>涉及到 Handler 的，使用 Static 静态内部类+WeakReference 优化调用方式，知道 onDestroy 反注册、清空callback操作的</li>\n<li>网络部分，如果用到 Thread 或者其他耗时操作，知道使用静态内部类改造，如果不涉及，就新写一个Thread案例，在runnable中做具体的网络操作，并处理内存泄露</li>\n<li>写出相关优化方案，能达到提升监控ANR准确率的目的</li>\n</ol>\n","feature":true,"text":"安卓实训第十天内容笔记 —— 内存泄漏优化与ANR解决方案...","permalink":"/post/Android-Day10","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[{"name":"安卓","slug":"安卓","count":9,"path":"api/categories/安卓.json"}],"tags":[{"name":"Android","slug":"Android","count":9,"path":"api/tags/Android.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%86%85%E5%AD%98%E6%B3%84%E9%9C%B2\"><span class=\"toc-text\">内存泄露</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AF%BE%E7%A8%8B%E7%9B%AE%E6%A0%87\"><span class=\"toc-text\">课程目标</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81Java%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6\"><span class=\"toc-text\">一、Java垃圾回收机制</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#JVM%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B\"><span class=\"toc-text\">JVM内存模型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#JVM%E5%86%85%E5%AD%98%E5%9B%9E%E6%94%B6%E7%AE%97%E6%B3%95\"><span class=\"toc-text\">JVM内存回收算法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%BC%95%E7%94%A8%E8%AE%A1%E6%95%B0%E7%AE%97%E6%B3%95\"><span class=\"toc-text\">引用计数算法</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8F%AF%E8%BE%BE%E6%80%A7%E5%88%86%E6%9E%90%E6%B3%95\"><span class=\"toc-text\">可达性分析法</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Java%E5%9B%9B%E7%A7%8D%E5%BC%95%E7%94%A8%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">Java四种引用类型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Java%E5%86%85%E5%AD%98%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6-%E5%B0%8F%E7%BB%93\"><span class=\"toc-text\">Java内存回收机制-小结</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E5%99%A8%E8%BE%93%E5%87%BA\"><span class=\"toc-text\">垃圾回收器输出</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F%E4%BB%8B%E7%BB%8D%E5%92%8C%E6%A3%80%E6%B5%8B%E5%B7%A5%E5%85%B7\"><span class=\"toc-text\">二、内存泄漏介绍和检测工具</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%86%85%E5%AD%98%E6%B3%84%E9%9C%B2%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">内存泄露介绍</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%86%85%E5%AD%98%E6%B3%84%E9%9C%B2%E7%9A%84%E5%8D%B1%E5%AE%B3\"><span class=\"toc-text\">内存泄露的危害</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F%E7%9A%84%E5%8E%9F%E5%9B%A0\"><span class=\"toc-text\">内存泄漏的原因</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Profiler%E5%86%85%E5%AD%98%E6%A3%80%E6%B5%8B%E5%B7%A5%E5%85%B7\"><span class=\"toc-text\">Profiler内存检测工具</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%86%85%E5%AD%98%E6%B3%84%E9%9C%B2%E5%9C%A8profiler%E4%B8%AD%E7%9A%84%E7%8A%B6%E6%80%81\"><span class=\"toc-text\">内存泄露在profiler中的状态</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Profiler%E6%9C%89%E4%BB%80%E4%B9%88%E7%BC%BA%E7%82%B9\"><span class=\"toc-text\">Profiler有什么缺点</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%86%85%E5%AD%98%E6%B3%84%E9%9C%B2%E6%A3%80%E6%B5%8B%E5%B7%A5%E5%85%B7-LeakCanary\"><span class=\"toc-text\">内存泄露检测工具-LeakCanary</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#LeakCanary%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">LeakCanary使用</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90\"><span class=\"toc-text\">三、内存泄漏案例分析</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F%E6%8C%81%E6%9C%89Activity%E3%80%81FragmentContext\"><span class=\"toc-text\">1.单例模式持有Activity、FragmentContext</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E5%8C%BF%E5%90%8D%E5%86%85%E9%83%A8%E7%B1%BB%E6%98%BE%E5%BC%8F%E6%8C%81%E6%9C%89%E5%A4%96%E9%83%A8%E7%B1%BB%E7%9A%84%E5%BC%95%E7%94%A8\"><span class=\"toc-text\">2.匿名内部类显式持有外部类的引用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E5%86%85%E9%83%A8%E7%B1%BB%E9%9A%90%E6%80%A7%E6%8C%81%E6%9C%89%E5%A4%96%E9%83%A8%E7%B1%BB%E5%BC%95%E7%94%A8%EF%BC%8C%E5%AF%BC%E8%87%B4%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F\"><span class=\"toc-text\">3.内部类隐性持有外部类引用，导致内存泄漏</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-Timer%E3%80%81EventBus%E3%80%81Broadcast%E7%AD%89%E9%9C%80%E8%A6%81%E5%8F%8D%E6%B3%A8%E5%86%8C%E6%88%96%E8%80%85cancel\"><span class=\"toc-text\">4.Timer、EventBus、Broadcast等需要反注册或者cancel()</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-Handler%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F\"><span class=\"toc-text\">5.Handler内存泄漏</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Handler%E6%A0%87%E5%87%86%E8%8C%83%E5%BC%8F\"><span class=\"toc-text\">Handler标准范式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-WebView%E5%AF%BC%E8%87%B4%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F\"><span class=\"toc-text\">6.WebView导致内存泄漏</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BB%83%E4%B9%A0%E9%A2%98\"><span class=\"toc-text\">练习题</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9B%9B%E3%80%81LeakCanary%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">四、LeakCanary原理</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#LeakCanary%E6%A3%80%E6%B5%8B%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">LeakCanary检测流程</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#LeakCanary%E7%BB%93%E6%9E%84%E5%9B%BE\"><span class=\"toc-text\">LeakCanary结构图</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%A7%A6%E5%8F%91%E6%A3%80%E6%B5%8B%E6%97%B6%E6%9C%BA\"><span class=\"toc-text\">触发检测时机</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#LeakCanary%E6%A3%80%E6%B5%8B%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">LeakCanary检测内存泄漏流程</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Hprof%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">Hprof文件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Hprof%E6%96%87%E4%BB%B6%E5%88%86%E6%9E%90\"><span class=\"toc-text\">Hprof文件分析</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BB%83%E4%B9%A0%E9%A2%98-1\"><span class=\"toc-text\">练习题</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%80%9D%E8%80%83\"><span class=\"toc-text\">思考</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#ANR%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E5%93%8D%E5%BA%94\"><span class=\"toc-text\">ANR应用程序响应</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AF%BE%E7%A8%8B%E7%9B%AE%E6%A0%87%EF%BC%9A\"><span class=\"toc-text\">课程目标：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81%E5%88%9D%E8%AF%86ANR\"><span class=\"toc-text\">一、初识ANR</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%80%E4%B9%88%E6%98%AFANR\"><span class=\"toc-text\">什么是ANR</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#ANR%E4%BA%A7%E7%94%9F%E7%9A%84%E5%8E%9F%E5%9B%A0\"><span class=\"toc-text\">ANR产生的原因</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#ANR%E8%A7%A6%E5%8F%91%E7%9A%84%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">ANR触发的流程</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#ANR%E4%B8%8D%E8%A7%A6%E5%8F%91%E7%9A%84%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">ANR不触发的流程</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81ANR%E7%B1%BB%E5%9E%8B%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">二、ANR类型介绍</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81ANR%E6%A1%88%E4%BE%8B%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">三、ANR案例介绍</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%BB%E7%BA%BF%E7%A8%8B%E6%89%A7%E8%A1%8C%E8%80%97%E6%97%B6\"><span class=\"toc-text\">主线程执行耗时</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%BB%E7%BA%BF%E7%A8%8B%E6%AD%BB%E9%94%81\"><span class=\"toc-text\">主线程死锁</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%BB%E7%BA%BF%E7%A8%8B%E8%BF%9B%E8%A1%8C%E8%B7%A8%E8%BF%9B%E7%A8%8B%E9%80%9A%E4%BF%A1binder%E5%AF%BC%E8%87%B4ANR\"><span class=\"toc-text\">主线程进行跨进程通信binder导致ANR</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#SharePreference%E4%BD%BF%E7%94%A8commit-%E4%BF%9D%E5%AD%98%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">SharePreference使用commit()保存数据</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9B%9B%E3%80%81ANR%E9%97%AE%E9%A2%98%E5%AE%9A%E4%BD%8D\"><span class=\"toc-text\">四、ANR问题定位</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1%E3%80%81%E7%A1%AE%E5%AE%9AANR%E7%B1%BB%E5%9E%8B%E5%92%8C%E6%97%B6%E9%97%B4%E7%82%B9\"><span class=\"toc-text\">1、确定ANR类型和时间点</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2%E3%80%81%E6%A3%80%E6%9F%A5CPU%E4%BF%A1%E6%81%AF\"><span class=\"toc-text\">2、检查CPU信息</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3%E3%80%81%E6%A3%80%E6%9F%A5%E5%86%85%E5%AD%98%E4%BF%A1%E6%81%AF\"><span class=\"toc-text\">3、检查内存信息</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E6%A3%80%E6%9F%A5LowMemoryKiller\"><span class=\"toc-text\">4.检查LowMemoryKiller</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%BB%E7%BA%BF%E7%A8%8B%E6%AD%BB%E9%94%81%E5%AF%BC%E8%87%B4ANR\"><span class=\"toc-text\">主线程死锁导致ANR</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BB%83%E4%B9%A0%E9%A2%98-2\"><span class=\"toc-text\">练习题</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%94%E3%80%81%E6%A3%80%E6%B5%8B%E5%B7%A5%E5%85%B7\"><span class=\"toc-text\">五、检测工具</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#ANR-WatchDog\"><span class=\"toc-text\">ANR-WatchDog</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#ANR-WatchDog%E6%97%A5%E5%BF%97\"><span class=\"toc-text\">ANR-WatchDog日志</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#ANR-WatchDog%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">ANR-WatchDog原理</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#WatchDog%E5%BC%8A%E7%AB%AF\"><span class=\"toc-text\">WatchDog弊端</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#WatchDog%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">WatchDog总结</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BB%83%E4%B9%A0%E9%A2%98-3\"><span class=\"toc-text\">练习题</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%80%9D%E8%80%83%E9%A2%98\"><span class=\"toc-text\">思考题</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93-1\"><span class=\"toc-text\">总结</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%AF%BE%E5%90%8E%E4%BD%9C%E4%B8%9A\"><span class=\"toc-text\">课后作业</span></a></li></ol>","author":{"name":"ChenZheng","slug":"chenzheng","avatar":"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/cover/avatar.jpg","link":"https://github.com/sjwusj","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/sjwusj","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Android_Day11","uid":"dbaf3da6feb493141336195b06966273","slug":"Android-Day11","date":"2024-04-29T23:56:12.000Z","updated":"2024-04-30T12:13:07.164Z","comments":true,"path":"api/articles/Android-Day11.json","keywords":null,"cover":"image/cover3.jpg","text":"带你玩转Kotlinkotlin教程：https://www.runoob.com/kotlin/kotlin-tutorial.html 在线运行：https...","permalink":"/post/Android-Day11","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"安卓","slug":"安卓","count":9,"path":"api/categories/安卓.json"}],"tags":[{"name":"Android","slug":"Android","count":9,"path":"api/tags/Android.json"}],"author":{"name":"ChenZheng","slug":"chenzheng","avatar":"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/cover/avatar.jpg","link":"https://github.com/sjwusj","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/sjwusj","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"Android_Day9","uid":"35c62650c1bf7b38efffc0a7332ce550","slug":"Android-Day9","date":"2024-04-27T23:54:41.000Z","updated":"2024-04-29T00:01:52.203Z","comments":true,"path":"api/articles/Android-Day9.json","keywords":null,"cover":"image/cover3.jpg","text":"安卓实训第九天内容笔记 —— Android的权限，Android的HTTP请求...","permalink":"/post/Android-Day9","photos":[],"count_time":{"symbolsCount":"16k","symbolsTime":"15 mins."},"categories":[{"name":"安卓","slug":"安卓","count":9,"path":"api/categories/安卓.json"}],"tags":[{"name":"Android","slug":"Android","count":9,"path":"api/tags/Android.json"}],"author":{"name":"ChenZheng","slug":"chenzheng","avatar":"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/cover/avatar.jpg","link":"https://github.com/sjwusj","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/sjwusj","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}