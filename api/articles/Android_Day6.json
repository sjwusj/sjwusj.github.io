{"title":"Android_Day6","uid":"789fa1f0f80bab9920773ec9ec90b467","slug":"Android_Day6","date":"2024-04-25T00:07:34.000Z","updated":"2024-11-15T12:53:18.830Z","comments":true,"path":"api/articles/Android_Day6.json","keywords":null,"cover":"cover/cover3.jpg","content":"<h1 id=\"组件库的详情阐述与常用组件库原理\"><a href=\"#组件库的详情阐述与常用组件库原理\" class=\"headerlink\" title=\"组件库的详情阐述与常用组件库原理\"></a>组件库的详情阐述与常用组件库原理</h1><h2 id=\"目标\"><a href=\"#目标\" class=\"headerlink\" title=\"目标\"></a>目标</h2><ul>\n<li><p>了解组件库的使用和发布方式，学会自定义组件库发布任务</p>\n</li>\n<li><p>学习常用组件库的使用，运用组件库实现较复杂的页面效果</p>\n</li>\n<li><p>了解组件库相关原理，清楚组件库的应用场景</p>\n</li>\n</ul>\n<h2 id=\"收益\"><a href=\"#收益\" class=\"headerlink\" title=\"收益\"></a>收益</h2><ul>\n<li><p>实现高质量项目迭代能力</p>\n</li>\n<li><p>轻松的应对中大型项目</p>\n</li>\n<li><p>提高编码效率</p>\n</li>\n</ul>\n<h2 id=\"一、组件库的依赖、定制和发布\"><a href=\"#一、组件库的依赖、定制和发布\" class=\"headerlink\" title=\"一、组件库的依赖、定制和发布\"></a>一、组件库的依赖、定制和发布</h2><h3 id=\"组件库定义\"><a href=\"#组件库定义\" class=\"headerlink\" title=\"组件库定义\"></a>组件库定义</h3><ul>\n<li>一组可重用的UI组件和工具，用于构建应用程序。</li>\n<li>在Android开发中，组件库通常指的是Android SDK中提供的UI组件和工具，如按钮、文本框、图像视图、列表视图、网格视图等，以及用于处理应用程序逻辑的工具，如活动、服务、广播接收器、内容提供程序等。</li>\n</ul>\n<h3 id=\"组件库优势\"><a href=\"#组件库优势\" class=\"headerlink\" title=\"组件库优势\"></a>组件库优势</h3><ul>\n<li>提高开发效率，降低开发成本</li>\n<li>保证应用程序的一致性，可靠性</li>\n<li>提高应用程序的可扩展性</li>\n</ul>\n<h3 id=\"组件库文件格式\"><a href=\"#组件库文件格式\" class=\"headerlink\" title=\"组件库文件格式\"></a>组件库文件格式</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240425081718217.png\" alt=\"image-20240425081718217\"></p>\n<h3 id=\"组件库-依赖方式\"><a href=\"#组件库-依赖方式\" class=\"headerlink\" title=\"组件库-依赖方式\"></a>组件库-依赖方式</h3><p>Android中，组件基于Gradle构建和发布的，Gradle支持组件库的依赖方式常用的有implementation 和 api。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240425082208420.png\" alt=\"image-20240425082208420\"></p>\n<h3 id=\"组件依赖方式-本地依赖\"><a href=\"#组件依赖方式-本地依赖\" class=\"headerlink\" title=\"组件依赖方式-本地依赖\"></a>组件依赖方式-本地依赖</h3><p>将Jar文件放置在项目的libs目录下，并在项目的build.gradle文件中添加以下依赖：</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">dependencies&#123;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    implementation files(&#39;libs/library_name.jar&#39;)</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">&#125;</span></span></code></pre></div><p>其中，library_name.jar是Jar文件的名称。</p>\n<img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240425082534406.png\" alt=\"image-20240425082534406\" style=\"zoom:67%;\" />\n\n\n\n<h3 id=\"组件依赖方式-仓库依赖\"><a href=\"#组件依赖方式-仓库依赖\" class=\"headerlink\" title=\"组件依赖方式-仓库依赖\"></a>组件依赖方式-仓库依赖</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240425082729888.png\" alt=\"image-20240425082729888\"></p>\n<h3 id=\"创建自定义组件库步骤\"><a href=\"#创建自定义组件库步骤\" class=\"headerlink\" title=\"创建自定义组件库步骤\"></a>创建自定义组件库步骤</h3><p><a href=\"https://blog.csdn.net/qq_40881680/article/details/109262602\">Android 安卓创建自己的依赖库（保姆级教程）</a></p>\n<p><a href=\"https://blog.csdn.net/a772890398/article/details/50544172\">android studio 将已有的项目 以module Library的 形式引入到 自己的项目中</a></p>\n<ul>\n<li>创建一个新的Android Studio项目</li>\n<li>根目录下创建一个新的module，选择”Android Library”作为module类型</li>\n</ul>\n<img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240425083048971.png\" alt=\"image-20240425083048971\" style=\"zoom:67%;\" />\n\n\n\n<ul>\n<li>在项目CirclelmageLib这个Module中创建一个自定义View命名为CirclelmageView</li>\n<li>项目的App Module中引入CirclelmageLib</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240425085742214.png\" alt=\"image-20240425085742214\"></p>\n<img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240425100137612.png\" alt=\"image-20240425100137612\" style=\"zoom:67%;\" />\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240425085827120.png\" alt=\"image-20240425085827120\"></p>\n<h3 id=\"组件本地仓库发布步骤\"><a href=\"#组件本地仓库发布步骤\" class=\"headerlink\" title=\"组件本地仓库发布步骤\"></a>组件本地仓库发布步骤</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240425090255330.png\" alt=\"image-20240425090255330\"></p>\n<p>在build.gradle.kts(:CirclelmageLib)</p>\n<div class=\"language-kotlin\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">kotlin</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #82AAFF\">plugins</span><span style=\"color: #BABED8\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">......</span><span style=\"color: #BABED8\">.</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">id</span><span style=\"color: #BABED8\">(</span><span style=\"color: #C3E88D\">&quot;maven-publish&quot;</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">android</span><span style=\"color: #BABED8\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">......</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">dependencies</span><span style=\"color: #BABED8\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">......</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">publishing</span><span style=\"color: #BABED8\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">publications</span><span style=\"color: #BABED8\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #82AAFF\">register</span><span style=\"color: #BABED8\">&lt;</span><span style=\"color: #FFCB6B\">MavenPublication</span><span style=\"color: #BABED8\">&gt;(</span><span style=\"color: #C3E88D\">&quot;release&quot;</span><span style=\"color: #BABED8\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            groupId </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">&quot;com.xiaomi.lib&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            artifactId </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">&quot;image&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            version </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">&quot;1.0.0&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #82AAFF\">afterEvaluate</span><span style=\"color: #BABED8\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                </span><span style=\"color: #82AAFF\">artifact</span><span style=\"color: #BABED8\">(tasks.</span><span style=\"color: #82AAFF\">getByName</span><span style=\"color: #BABED8\">(</span><span style=\"color: #C3E88D\">&quot;bundleReleaseAar&quot;</span><span style=\"color: #BABED8\">))</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            &#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        &#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #82AAFF\">repositories</span><span style=\"color: #BABED8\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #82AAFF\">maven</span><span style=\"color: #BABED8\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                name </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">&quot;myRepo&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                url </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">uri</span><span style=\"color: #BABED8\">(</span><span style=\"color: #C3E88D\">&quot;../myRepo&quot;</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            &#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        &#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">&#125;</span></span></code></pre></div><p>在build.gradle.kts(:app)引用</p>\n<div class=\"language-kotlin\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">kotlin</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #82AAFF\">dependencies</span><span style=\"color: #BABED8\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">implementation</span><span style=\"color: #BABED8\">(</span><span style=\"color: #82AAFF\">project</span><span style=\"color: #BABED8\">(</span><span style=\"color: #C3E88D\">&quot;:CycleImage&quot;</span><span style=\"color: #BABED8\">))</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//    implementation(&quot;com.xiaomi.lib:image:1.0.0&quot;)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">&#125;</span></span></code></pre></div><h2 id=\"二、图片组件库的应用和原理\"><a href=\"#二、图片组件库的应用和原理\" class=\"headerlink\" title=\"二、图片组件库的应用和原理\"></a>二、图片组件库的应用和原理</h2><p>中文文档：<a href=\"https://muyangmin.github.io/glide-docs-cn/\">Glide v4</a></p>\n<p>官方地址：<a href=\"https://github.com/bumptech/glide/raw/master/static/glide_logo.png\">Glide</a></p>\n<h3 id=\"Glide图片库的使用\"><a href=\"#Glide图片库的使用\" class=\"headerlink\" title=\"Glide图片库的使用\"></a>Glide图片库的使用</h3><p>Glide组件源码地址:</p>\n<ul>\n<li><a href=\"https://github.com/bumptech/glide\">https://github.com/bumptech/glide</a></li>\n</ul>\n<p>1、引入依赖</p>\n<div class=\"language-kotlin\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">kotlin</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #82AAFF\">dependencies</span><span style=\"color: #BABED8\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">implementation</span><span style=\"color: #BABED8\">(</span><span style=\"color: #C3E88D\">&quot;com.github.bumptech.glide:glide:4.16.0&quot;</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">&#125;</span></span></code></pre></div><p>2、基础API调用</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">RequestOptions</span><span style=\"color: #BABED8\"> options </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">RequestOptions</span><span style=\"color: #89DDFF\">()</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">placeholder</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">R</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">drawable</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">cover</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">Glide</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">with</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">mContext</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">asBitmap</span><span style=\"color: #89DDFF\">()</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">load</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">imageUrl</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">apply</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">options</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">into</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">myImageView</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">                    /**</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">           * 图片组件库</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">           */</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">ImageView</span><span style=\"color: #BABED8\"> glideIv </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">findViewById</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">R</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">id</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">glide_iv</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">Glide</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">with</span><span style=\"color: #89DDFF\">(this).</span><span style=\"color: #82AAFF\">load</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">R</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">drawable</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">cover</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #82AAFF\">into</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">glideIv</span><span style=\"color: #89DDFF\">);</span></span></code></pre></div><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240425133615367.png\" alt=\"image-20240425133615367\"></p>\n<img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240425133622312.png\" alt=\"image-20240425133622312\" style=\"zoom:50%;\" />\n\n\n\n<h3 id=\"Glide样式库，支持裁剪，颜色饱和度，高斯模糊等效果\"><a href=\"#Glide样式库，支持裁剪，颜色饱和度，高斯模糊等效果\" class=\"headerlink\" title=\"Glide样式库，支持裁剪，颜色饱和度，高斯模糊等效果\"></a>Glide样式库，支持裁剪，颜色饱和度，高斯模糊等效果</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240425133821611.png\" alt=\"image-20240425133821611\"></p>\n<img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240425133827117.png\" alt=\"image-20240425133827117\" style=\"zoom:50%;\" />\n\n\n\n<h3 id=\"Glide核心原理\"><a href=\"#Glide核心原理\" class=\"headerlink\" title=\"Glide核心原理\"></a>Glide核心原理</h3><p>思考：如何设计一个优秀的图片加载库</p>\n<h3 id=\"Glide原理-图片加载缓存机制\"><a href=\"#Glide原理-图片加载缓存机制\" class=\"headerlink\" title=\"Glide原理-图片加载缓存机制\"></a>Glide原理-图片加载缓存机制</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240425134139549.png\" alt=\"image-20240425134139549\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240425134647810.png\" alt=\"image-20240425134647810\"></p>\n<img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240425134859137.png\" alt=\"image-20240425134859137\" style=\"zoom:67%;\" />\n\n\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240425134952394.png\" alt=\"image-20240425134952394\"></p>\n<h3 id=\"Glide原理-图片生命周期管理机制\"><a href=\"#Glide原理-图片生命周期管理机制\" class=\"headerlink\" title=\"Glide原理-图片生命周期管理机制\"></a>Glide原理-图片生命周期管理机制</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240425135116068.png\" alt=\"image-20240425135116068\"></p>\n<h3 id=\"其他图片加载库\"><a href=\"#其他图片加载库\" class=\"headerlink\" title=\"其他图片加载库\"></a>其他图片加载库</h3><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240425135204737.png\" alt=\"image-20240425135204737\"></p>\n<h3 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h3><p>第二部分</p>\n<p>1.以Glide图片组件为例，重点介绍了Glide图片库的引I入和使用</p>\n<p>2.介绍图片Glide组件的基本原理，重点介绍Glide图片库的缓存机制和生命周期管理</p>\n<p>3.介绍额外几种常用图片库组件</p>\n<h3 id=\"课后实践\"><a href=\"#课后实践\" class=\"headerlink\" title=\"课后实践\"></a>课后实践</h3><p>1.尝试引入Glide库进行本地图片的加载，感兴趣的可以研究下Glide网络图片的加载</p>\n<p>2.拓展：使用介绍的其他几种常用图片库，实现图片资源的加载</p>\n<h2 id=\"三、事件传递组件的应用和原理\"><a href=\"#三、事件传递组件的应用和原理\" class=\"headerlink\" title=\"三、事件传递组件的应用和原理\"></a>三、事件传递组件的应用和原理</h2><h3 id=\"EventBus组件简介\"><a href=\"#EventBus组件简介\" class=\"headerlink\" title=\"EventBus组件简介\"></a>EventBus组件简介</h3><p>适用于Android和Java的发布&#x2F;订阅事件总线，便于实现多线程间的消息通信。</p>\n<p>组件优势:</p>\n<ul>\n<li><p>1.简化组件间的通信复杂度</p>\n</li>\n<li><p>2.避免复杂依赖性和生命周期问题</p>\n</li>\n<li><p>3.速度快，性能好，代码简单优雅</p>\n</li>\n<li><p>4.解耦事件的发送者和接收者</p>\n</li>\n<li><p>5.灵活方便指定工作线程和优先级</p>\n</li>\n<li><p>6.库资源比较小，内存开销低</p>\n</li>\n</ul>\n<h3 id=\"EventBus组件使用\"><a href=\"#EventBus组件使用\" class=\"headerlink\" title=\"EventBus组件使用\"></a>EventBus组件使用</h3><p>项目地址:<a href=\"https://github.com/greenrobot/EventBus\">https://github.com/greenrobot/EventBus</a></p>\n<p>依赖集成:</p>\n<div class=\"language-kotlin\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">kotlin</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #82AAFF\">implementation</span><span style=\"color: #BABED8\">(</span><span style=\"color: #C3E88D\">&quot;org.greenrobot:eventbus:3.3.1&quot;</span><span style=\"color: #BABED8\">)</span></span></code></pre></div><h4 id=\"定义事件\"><a href=\"#定义事件\" class=\"headerlink\" title=\"定义事件\"></a>定义事件</h4><p>事件对象可以是任意java类型，比如String、int自定义类等</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">static</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">class</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">MessageEvent</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">/*Additional fields if needed*/</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><h4 id=\"注册-取消注册事件\"><a href=\"#注册-取消注册事件\" class=\"headerlink\" title=\"注册&#x2F;取消注册事件\"></a>注册&#x2F;取消注册事件</h4><p>在接收消息的页面注册事件</p>\n<ul>\n<li>EventBus.getDefault().register(this);</li>\n</ul>\n<p>在页面销毁之前取消事件的注册，规避内存泄漏</p>\n<ul>\n<li>EventBus.getDefault().unregister(this);</li>\n</ul>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF\">@</span><span style=\"color: #C792EA\">Override</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">onCreate</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">Bundle</span><span style=\"color: #BABED8\"> savedInstanceState</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  super</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">onCreate</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">savedInstanceState</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #676E95; font-style: italic\">/**</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">  * EventBus组件</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">  * 2、在接收消息的页面注册事件</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">  */</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  EventBus</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getDefault</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">register</span><span style=\"color: #89DDFF\">(this);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><h4 id=\"事件分发\"><a href=\"#事件分发\" class=\"headerlink\" title=\"事件分发\"></a>事件分发</h4><p>事件发送方式支持普通事件和粘性事件两种</p>\n<ul>\n<li>普通事件发送</li>\n</ul>\n<p>EventBus.getDefault().post(new MessageEvent();</p>\n<ul>\n<li>粘性事件发送在发送事件之后再订阅该事件也能收到该事件</li>\n</ul>\n<p>EventBus.getDefault().postSticky(newMessageEvent())</p>\n<h4 id=\"事件处理\"><a href=\"#事件处理\" class=\"headerlink\" title=\"事件处理\"></a>事件处理</h4><p>事件对象可以是任意java类型，比如String、Integer、自定义类等</p>\n<p>订阅者实现事件处理方法</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF\">@</span><span style=\"color: #C792EA\">Subscribe</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">threadMode</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> ThreadMode</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">MAIN</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">MessageEvent</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">MessageEvent</span><span style=\"color: #BABED8\"> event</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">event </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">null)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\"> </span><span style=\"color: #676E95; font-style: italic\">//TODO 接收事件后Do Something</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><p>注意：针对粘性事件需要增加sticky配置</p>\n<p><strong>@Subscribe(threadMode&#x3D;ThreadMode.MAIN,sticky&#x3D;true)</strong></p>\n<p>示例：</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">    /**</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">     * EventBus组件</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">     * 4、事件处理</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">     * </span><span style=\"color: #F78C6C; font-style: italic\">@param</span><span style=\"color: #676E95; font-style: italic\"> </span><span style=\"color: #BABED8; font-style: italic\">event</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">     */</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">@</span><span style=\"color: #C792EA\">Subscribe</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">threadMode</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> ThreadMode</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">MAIN</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">changeBackgroundColor</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">ChangeBackgroundEvent</span><span style=\"color: #BABED8\"> event</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">event </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">null)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">View</span><span style=\"color: #BABED8\"> view </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">getView</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">view </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">null)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            view</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">setBackgroundColor</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">0xff0000ff</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><h4 id=\"发布-订阅模式\"><a href=\"#发布-订阅模式\" class=\"headerlink\" title=\"发布&#x2F;订阅模式\"></a>发布&#x2F;订阅模式</h4><p>订阅者（Subscriber）将订阅的事件（Event）注册（register）到调度中心（EventBus)，当发布者（Publisher)发布该事件到调度中心时，也就是该事件触发时，由调度中心统一调度订阅者注册到调度中心的处理代码(onEvent())。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240425150302852.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240425150313934.png\" alt=\"image-20240425150313934\"></p>\n<h4 id=\"EventBus3-0四种线程模型\"><a href=\"#EventBus3-0四种线程模型\" class=\"headerlink\" title=\"EventBus3.0四种线程模型\"></a>EventBus3.0四种线程模型</h4><table>\n<thead>\n<tr>\n<th>POSTING(默认)</th>\n<th>表示事件处理函数的线程跟发布事件的线程在同一个线程</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>MAIN</td>\n<td>表示事件处理函数的线程在主线程（UI）线程，因此在这里不能进行耗时操作</td>\n</tr>\n<tr>\n<td>BACKGROUND</td>\n<td>表示事件处理函数的线程在后台线程，因此不能进行U操作。如果发布事件的线程是主线程（UI线程），那么事件处理函数将会开启一个后台线程，如果果发布事件的线程是在后台线程，那么事件处理函数就使用该线程</td>\n</tr>\n<tr>\n<td>ASYNC</td>\n<td>表示事件处理函数的线程跟发布事件的线程不在同一个线程</td>\n</tr>\n</tbody></table>\n<h3 id=\"小结-1\"><a href=\"#小结-1\" class=\"headerlink\" title=\"小结\"></a>小结</h3><p>第三部分</p>\n<p>1.介绍事件传递组件EventBus的使用和应用场景</p>\n<p>2.EventBus基础原理和机制</p>\n<h3 id=\"课后实践-1\"><a href=\"#课后实践-1\" class=\"headerlink\" title=\"课后实践\"></a>课后实践</h3><p>1.练习EventBus组件的基础使用方式</p>\n<p>2.拓展：EventBus支持设置优先级进行事件处理，也支持以Tag标识方式进行事件发布，探索和学习EventBus更多API的使用。</p>\n<h2 id=\"四、滑动刷新框架的应用和原理\"><a href=\"#四、滑动刷新框架的应用和原理\" class=\"headerlink\" title=\"四、滑动刷新框架的应用和原理\"></a>四、滑动刷新框架的应用和原理</h2><h3 id=\"1-介绍瀑布流的实现方式，掌握相关基础组件的使用\"><a href=\"#1-介绍瀑布流的实现方式，掌握相关基础组件的使用\" class=\"headerlink\" title=\"1.介绍瀑布流的实现方式，掌握相关基础组件的使用\"></a>1.介绍瀑布流的实现方式，掌握相关基础组件的使用</h3><p>EventBus组件使用</p>\n<h4 id=\"瀑布流简介\"><a href=\"#瀑布流简介\" class=\"headerlink\" title=\"瀑布流简介\"></a>瀑布流简介</h4><p>瀑布流，又称瀑布流式布局。它是比较流行的一种页面布局，视觉表现为参差不齐的多栏布局，随着页面滚动条向下滚动，这种布局还会不断加载数据块并附加至当前尾部。最早采用此布局的网站是Pinterest，逐渐在国内流行开来。</p>\n<p><strong>布局特点：</strong></p>\n<ul>\n<li><p>1.琳琅满目</p>\n</li>\n<li><p>2.唯美</p>\n</li>\n<li><p>3.操作简单</p>\n</li>\n</ul>\n<p><strong>应用场景：</strong></p>\n<ul>\n<li>瀑布流布局通常用于浏览众多带图片的视图模块，且图片尺寸大小不一的场景</li>\n</ul>\n<h4 id=\"瀑布流实现\"><a href=\"#瀑布流实现\" class=\"headerlink\" title=\"瀑布流实现\"></a>瀑布流实现</h4><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240425160445663.png\" alt=\"image-20240425160445663\"></p>\n<h4 id=\"简易瀑布流核心实现\"><a href=\"#简易瀑布流核心实现\" class=\"headerlink\" title=\"简易瀑布流核心实现\"></a>简易瀑布流核心实现</h4><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240425160600091.png\" alt=\"image-20240425160600091\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240425160724942.png\" alt=\"image-20240425160724942\"></p>\n<h4 id=\"BaseRecyclerViewAdapterHelper组件\"><a href=\"#BaseRecyclerViewAdapterHelper组件\" class=\"headerlink\" title=\"BaseRecyclerViewAdapterHelper组件\"></a>BaseRecyclerViewAdapterHelper组件</h4><p>灵活强大的循环适配器，大大提升研发效率，相比使用原生Adapter研发效率可提升70%</p>\n<p>组件优势</p>\n<ul>\n<li><p>1.支持多布局和分组布局</p>\n</li>\n<li><p>2.轻松实现添加列表动画</p>\n</li>\n<li><p>3.便捷实现点击和长按事件</p>\n</li>\n<li><p>4.支持自定义ViewHoder，灵活性强</p>\n</li>\n<li><p>5.支持自动加载能力</p>\n</li>\n<li><p>6.扩展性强</p>\n</li>\n</ul>\n<h4 id=\"BaseRecyclerViewAdapterHelper组件使用\"><a href=\"#BaseRecyclerViewAdapterHelper组件使用\" class=\"headerlink\" title=\"BaseRecyclerViewAdapterHelper组件使用\"></a>BaseRecyclerViewAdapterHelper组件使用</h4><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240425164545935.png\" alt=\"image-20240425164545935\"></p>\n<p>列表动画</p>\n<p>开启动画（默认为渐显效果）</p>\n<p>默认提供5种方法（渐显、缩放、从下到上，从左到右、从右到左）</p>\n<p>quickAdapter.openLoadAnimation();</p>\n<p>项目地址：<a href=\"https://github.com/CymChad/BaseRecyclerViewAdapterHelper\">https://github.com/CymChad/BaseRecyclerViewAdapterHelper</a></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240425164645310.png\" alt=\"image-20240425164645310\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240425164813055.png\" alt=\"image-20240425164813055\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240425164824310.png\" alt=\"image-20240425164824310\"></p>\n<h4 id=\"源码分析\"><a href=\"#源码分析\" class=\"headerlink\" title=\"源码分析\"></a>源码分析</h4><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240425164907127.png\" alt=\"image-20240425164907127\"></p>\n<h3 id=\"2-介绍基于瀑布流的下拉刷新组件的使用和实现原理\"><a href=\"#2-介绍基于瀑布流的下拉刷新组件的使用和实现原理\" class=\"headerlink\" title=\"2.介绍基于瀑布流的下拉刷新组件的使用和实现原理\"></a>2.介绍基于瀑布流的下拉刷新组件的使用和实现原理</h3><h4 id=\"下拉刷新-流程\"><a href=\"#下拉刷新-流程\" class=\"headerlink\" title=\"下拉刷新-流程\"></a>下拉刷新-流程</h4><p>1.手指下拉屏幕：当用户在应用程序界面下拉屏幕时，应用程序会监听到这个手势，并作出相应的响应。</p>\n<p>2.显示刷新状态：当应用程序监听到用户下拉屏幕的手势后，会在界面上显示一个刷新状态，例如”正在刷新”或者“下拉刷新”</p>\n<p>3.触发刷新：当用户下拉屏幕的距离达到一定程度时，应用程序会触发刷新操作，重新加载当前页面的内容。</p>\n<p>4.显示刷新进度：当应用程序开始重新加载当前页面的内容时，会在界面上显示一个刷新进度条，用于提示用户当前刷新的进度。</p>\n<p>5.完成刷新：当重新加载完当前页面的内容后，应用程序会将显示的刷新状态隐藏，并提示用户刷新完成。</p>\n<img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240425172120226.png\" alt=\"image-20240425172120226\" style=\"zoom:67%;\" />\n\n\n\n<h4 id=\"下拉刷新-原理\"><a href=\"#下拉刷新-原理\" class=\"headerlink\" title=\"下拉刷新-原理\"></a>下拉刷新-原理</h4><p>1.对一个刷新RefreshLayout（ViewGroup）而言，绘制过程中最重要的是onMeasure和onLayout方法，需要对HeaderView，ContentView，以及FooterView进行丈量和绘制。</p>\n<p>2.触发下拉滑动，在onlnterceptTouchEvent拦截事件中，一旦滑动的纵向距离大于0，表明手指再从上向下滑，同时这里应该判断一下RecyclerView中显示的第一条是不是全部数据中的第一条。然后拦截事件后交由onTouchEvent处理</p>\n<p>3.当手指抬起时，还要根据移动的y轴增量判断一下是否是有效的滑动，然后处理响应的业务逻辑。</p>\n<p>4.松手后触发异步线程加载业务逻辑，再通过Handler机制回调更新UI，刷新页面数据</p>\n<h4 id=\"SwipeRefreshLayout组件介绍\"><a href=\"#SwipeRefreshLayout组件介绍\" class=\"headerlink\" title=\"SwipeRefreshLayout组件介绍\"></a>SwipeRefreshLayout组件介绍</h4><p>SwipeRefreshLayout是一种官方提供的下拉刷新框架，只能包裹一个子控件，可以是任意子控件，支持ListView、RecyclerView、ScrollView，不支持上拉加载更多功能。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240425172642228.png\" alt=\"image-20240425172642228\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240425172555550.png\" alt=\"image-20240425172555550\"></p>\n<h4 id=\"SwipeRefreshLayout组件使用\"><a href=\"#SwipeRefreshLayout组件使用\" class=\"headerlink\" title=\"SwipeRefreshLayout组件使用\"></a>SwipeRefreshLayout组件使用</h4><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240425172653147.png\" alt=\"image-20240425172653147\"></p>\n<h4 id=\"课间实践\"><a href=\"#课间实践\" class=\"headerlink\" title=\"课间实践\"></a>课间实践</h4><p>使用AndroidStudioIDE自定义实现一个瀑布流效果</p>\n<p>1.练习SwipeRefreshLayout组件的使用</p>\n<p>2.基于SwipeRefreshLayout实现的不同风格的刷新进度动画</p>\n<h3 id=\"3-基于瀑布流的上拉加载更多的使用和实现原理\"><a href=\"#3-基于瀑布流的上拉加载更多的使用和实现原理\" class=\"headerlink\" title=\"3.基于瀑布流的上拉加载更多的使用和实现原理\"></a>3.基于瀑布流的上拉加载更多的使用和实现原理</h3><h4 id=\"上拉加载-核心思想-步骤\"><a href=\"#上拉加载-核心思想-步骤\" class=\"headerlink\" title=\"上拉加载-核心思想&amp;步骤\"></a>上拉加载-核心思想&amp;步骤</h4><p>1.监听RecyclerView的滑动回调事件RecyclerView.OnScrollListener</p>\n<p>2.判定加载更的条件：滑动至列表最后一个ltem完全可见</p>\n<p>3.触发加载更多动画，执行加载更多业务事件的处理</p>\n<h4 id=\"BaseRecyclerViewAdapterHelper组件实现上拉加载更多\"><a href=\"#BaseRecyclerViewAdapterHelper组件实现上拉加载更多\" class=\"headerlink\" title=\"BaseRecyclerViewAdapterHelper组件实现上拉加载更多\"></a>BaseRecyclerViewAdapterHelper组件实现上拉加载更多</h4><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240425172848626.png\" alt=\"image-20240425172848626\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240425172947413.png\" alt=\"image-20240425172947413\"></p>\n<h4 id=\"上拉加载-核心实现方案\"><a href=\"#上拉加载-核心实现方案\" class=\"headerlink\" title=\"上拉加载-核心实现方案\"></a>上拉加载-核心实现方案</h4><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240425173042968.png\" alt=\"image-20240425173042968\"></p>\n<h4 id=\"课间实践-1\"><a href=\"#课间实践-1\" class=\"headerlink\" title=\"课间实践\"></a>课间实践</h4><p>使用AndroidStudioIDE基于瀑布流实现加载更多功能</p>\n<p>1.基于BaseRecyclerViewAdapterHelper实现加载更多的能力。</p>\n<p>[更多关于该框架API使用可以参考官方文档2.x版本。]</p>\n<p><a href=\"https://github.com/CymChad/BaseRecyclerViewAdapterHelper/tree/2.x\">https://github.com/CymChad/BaseRecyclerViewAdapterHelper/tree/2.x</a></p>\n<p>2.重点：理解加载更多的核心实现，监听滑动底部，显示加载更多按钮</p>\n<p>3.拓展：感兴趣可以研究下BaseRecyclerViewAdapterHelper3.x和最新的4.x版本的使用。</p>\n<h4 id=\"通过PullToRefresh组件理解背后核心原理\"><a href=\"#通过PullToRefresh组件理解背后核心原理\" class=\"headerlink\" title=\"通过PullToRefresh组件理解背后核心原理\"></a>通过PullToRefresh组件理解背后核心原理</h4><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240425173202705.png\" alt=\"image-20240425173202705\"></p>\n<h4 id=\"核心原理\"><a href=\"#核心原理\" class=\"headerlink\" title=\"核心原理\"></a>核心原理</h4><p>PullToRefreshBase是刷新框架的核心类，本次分析主要基于该类通过分析onlnterceptTouchEvent()和onTouchEvent()探究内部实现。如下是onlnterceptTouchEvent()核心实现。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240425173251153.png\" alt=\"image-20240425173251153\"></p>\n<h4 id=\"开源组件\"><a href=\"#开源组件\" class=\"headerlink\" title=\"开源组件\"></a>开源组件</h4><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240425173314524.png\" alt=\"image-20240425173314524\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240425173348183.png\" alt=\"image-20240425173348183\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240425173445081.png\" alt=\"image-20240425173445081\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240425173541773.png\" alt=\"image-20240425173541773\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240425173626687.png\" alt=\"image-20240425173626687\"></p>\n<h3 id=\"4-基于三方刷新框架，剖析滑动刷新的核心实现原理\"><a href=\"#4-基于三方刷新框架，剖析滑动刷新的核心实现原理\" class=\"headerlink\" title=\"4.基于三方刷新框架，剖析滑动刷新的核心实现原理\"></a>4.基于三方刷新框架，剖析滑动刷新的核心实现原理</h3><h2 id=\"五、组件库的综合项目实践\"><a href=\"#五、组件库的综合项目实践\" class=\"headerlink\" title=\"五、组件库的综合项目实践\"></a>五、组件库的综合项目实践</h2><p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240425173644896.png\" alt=\"image-20240425173644896\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240425173725964.png\" alt=\"image-20240425173725964\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240425174006199.png\" alt=\"image-20240425174006199\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/sjwusj/imgbed@main/img/android/image-20240425174307067.png\" alt=\"image-20240425174307067\"></p>\n","text":"安卓实训第六天内容笔记 —— 组件库的详情阐述与常用组件库原理...","permalink":"/post/Android_Day6","photos":[],"count_time":{"symbolsCount":"7k","symbolsTime":"6 mins."},"categories":[{"name":"安卓","slug":"安卓","count":10,"path":"api/categories/安卓.json"}],"tags":[{"name":"Android","slug":"Android","count":10,"path":"api/tags/Android.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%BB%84%E4%BB%B6%E5%BA%93%E7%9A%84%E8%AF%A6%E6%83%85%E9%98%90%E8%BF%B0%E4%B8%8E%E5%B8%B8%E7%94%A8%E7%BB%84%E4%BB%B6%E5%BA%93%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">组件库的详情阐述与常用组件库原理</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%9B%AE%E6%A0%87\"><span class=\"toc-text\">目标</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%94%B6%E7%9B%8A\"><span class=\"toc-text\">收益</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81%E7%BB%84%E4%BB%B6%E5%BA%93%E7%9A%84%E4%BE%9D%E8%B5%96%E3%80%81%E5%AE%9A%E5%88%B6%E5%92%8C%E5%8F%91%E5%B8%83\"><span class=\"toc-text\">一、组件库的依赖、定制和发布</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BB%84%E4%BB%B6%E5%BA%93%E5%AE%9A%E4%B9%89\"><span class=\"toc-text\">组件库定义</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BB%84%E4%BB%B6%E5%BA%93%E4%BC%98%E5%8A%BF\"><span class=\"toc-text\">组件库优势</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BB%84%E4%BB%B6%E5%BA%93%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F\"><span class=\"toc-text\">组件库文件格式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BB%84%E4%BB%B6%E5%BA%93-%E4%BE%9D%E8%B5%96%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">组件库-依赖方式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BB%84%E4%BB%B6%E4%BE%9D%E8%B5%96%E6%96%B9%E5%BC%8F-%E6%9C%AC%E5%9C%B0%E4%BE%9D%E8%B5%96\"><span class=\"toc-text\">组件依赖方式-本地依赖</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BB%84%E4%BB%B6%E4%BE%9D%E8%B5%96%E6%96%B9%E5%BC%8F-%E4%BB%93%E5%BA%93%E4%BE%9D%E8%B5%96\"><span class=\"toc-text\">组件依赖方式-仓库依赖</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BB%84%E4%BB%B6%E5%BA%93%E6%AD%A5%E9%AA%A4\"><span class=\"toc-text\">创建自定义组件库步骤</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BB%84%E4%BB%B6%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93%E5%8F%91%E5%B8%83%E6%AD%A5%E9%AA%A4\"><span class=\"toc-text\">组件本地仓库发布步骤</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81%E5%9B%BE%E7%89%87%E7%BB%84%E4%BB%B6%E5%BA%93%E7%9A%84%E5%BA%94%E7%94%A8%E5%92%8C%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">二、图片组件库的应用和原理</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Glide%E5%9B%BE%E7%89%87%E5%BA%93%E7%9A%84%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">Glide图片库的使用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Glide%E6%A0%B7%E5%BC%8F%E5%BA%93%EF%BC%8C%E6%94%AF%E6%8C%81%E8%A3%81%E5%89%AA%EF%BC%8C%E9%A2%9C%E8%89%B2%E9%A5%B1%E5%92%8C%E5%BA%A6%EF%BC%8C%E9%AB%98%E6%96%AF%E6%A8%A1%E7%B3%8A%E7%AD%89%E6%95%88%E6%9E%9C\"><span class=\"toc-text\">Glide样式库，支持裁剪，颜色饱和度，高斯模糊等效果</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Glide%E6%A0%B8%E5%BF%83%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">Glide核心原理</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Glide%E5%8E%9F%E7%90%86-%E5%9B%BE%E7%89%87%E5%8A%A0%E8%BD%BD%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6\"><span class=\"toc-text\">Glide原理-图片加载缓存机制</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Glide%E5%8E%9F%E7%90%86-%E5%9B%BE%E7%89%87%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E7%AE%A1%E7%90%86%E6%9C%BA%E5%88%B6\"><span class=\"toc-text\">Glide原理-图片生命周期管理机制</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%85%B6%E4%BB%96%E5%9B%BE%E7%89%87%E5%8A%A0%E8%BD%BD%E5%BA%93\"><span class=\"toc-text\">其他图片加载库</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B0%8F%E7%BB%93\"><span class=\"toc-text\">小结</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AF%BE%E5%90%8E%E5%AE%9E%E8%B7%B5\"><span class=\"toc-text\">课后实践</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81%E4%BA%8B%E4%BB%B6%E4%BC%A0%E9%80%92%E7%BB%84%E4%BB%B6%E7%9A%84%E5%BA%94%E7%94%A8%E5%92%8C%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">三、事件传递组件的应用和原理</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#EventBus%E7%BB%84%E4%BB%B6%E7%AE%80%E4%BB%8B\"><span class=\"toc-text\">EventBus组件简介</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#EventBus%E7%BB%84%E4%BB%B6%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">EventBus组件使用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AE%9A%E4%B9%89%E4%BA%8B%E4%BB%B6\"><span class=\"toc-text\">定义事件</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%B3%A8%E5%86%8C-%E5%8F%96%E6%B6%88%E6%B3%A8%E5%86%8C%E4%BA%8B%E4%BB%B6\"><span class=\"toc-text\">注册&#x2F;取消注册事件</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BA%8B%E4%BB%B6%E5%88%86%E5%8F%91\"><span class=\"toc-text\">事件分发</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BA%8B%E4%BB%B6%E5%A4%84%E7%90%86\"><span class=\"toc-text\">事件处理</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8F%91%E5%B8%83-%E8%AE%A2%E9%98%85%E6%A8%A1%E5%BC%8F\"><span class=\"toc-text\">发布&#x2F;订阅模式</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#EventBus3-0%E5%9B%9B%E7%A7%8D%E7%BA%BF%E7%A8%8B%E6%A8%A1%E5%9E%8B\"><span class=\"toc-text\">EventBus3.0四种线程模型</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B0%8F%E7%BB%93-1\"><span class=\"toc-text\">小结</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AF%BE%E5%90%8E%E5%AE%9E%E8%B7%B5-1\"><span class=\"toc-text\">课后实践</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9B%9B%E3%80%81%E6%BB%91%E5%8A%A8%E5%88%B7%E6%96%B0%E6%A1%86%E6%9E%B6%E7%9A%84%E5%BA%94%E7%94%A8%E5%92%8C%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">四、滑动刷新框架的应用和原理</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E4%BB%8B%E7%BB%8D%E7%80%91%E5%B8%83%E6%B5%81%E7%9A%84%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F%EF%BC%8C%E6%8E%8C%E6%8F%A1%E7%9B%B8%E5%85%B3%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">1.介绍瀑布流的实现方式，掌握相关基础组件的使用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%80%91%E5%B8%83%E6%B5%81%E7%AE%80%E4%BB%8B\"><span class=\"toc-text\">瀑布流简介</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%80%91%E5%B8%83%E6%B5%81%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">瀑布流实现</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%AE%80%E6%98%93%E7%80%91%E5%B8%83%E6%B5%81%E6%A0%B8%E5%BF%83%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">简易瀑布流核心实现</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#BaseRecyclerViewAdapterHelper%E7%BB%84%E4%BB%B6\"><span class=\"toc-text\">BaseRecyclerViewAdapterHelper组件</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#BaseRecyclerViewAdapterHelper%E7%BB%84%E4%BB%B6%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">BaseRecyclerViewAdapterHelper组件使用</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90\"><span class=\"toc-text\">源码分析</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E4%BB%8B%E7%BB%8D%E5%9F%BA%E4%BA%8E%E7%80%91%E5%B8%83%E6%B5%81%E7%9A%84%E4%B8%8B%E6%8B%89%E5%88%B7%E6%96%B0%E7%BB%84%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8%E5%92%8C%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">2.介绍基于瀑布流的下拉刷新组件的使用和实现原理</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%8B%E6%8B%89%E5%88%B7%E6%96%B0-%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">下拉刷新-流程</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%8B%E6%8B%89%E5%88%B7%E6%96%B0-%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">下拉刷新-原理</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#SwipeRefreshLayout%E7%BB%84%E4%BB%B6%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">SwipeRefreshLayout组件介绍</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#SwipeRefreshLayout%E7%BB%84%E4%BB%B6%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">SwipeRefreshLayout组件使用</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%AF%BE%E9%97%B4%E5%AE%9E%E8%B7%B5\"><span class=\"toc-text\">课间实践</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E5%9F%BA%E4%BA%8E%E7%80%91%E5%B8%83%E6%B5%81%E7%9A%84%E4%B8%8A%E6%8B%89%E5%8A%A0%E8%BD%BD%E6%9B%B4%E5%A4%9A%E7%9A%84%E4%BD%BF%E7%94%A8%E5%92%8C%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">3.基于瀑布流的上拉加载更多的使用和实现原理</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%8A%E6%8B%89%E5%8A%A0%E8%BD%BD-%E6%A0%B8%E5%BF%83%E6%80%9D%E6%83%B3-%E6%AD%A5%E9%AA%A4\"><span class=\"toc-text\">上拉加载-核心思想&amp;步骤</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#BaseRecyclerViewAdapterHelper%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E4%B8%8A%E6%8B%89%E5%8A%A0%E8%BD%BD%E6%9B%B4%E5%A4%9A\"><span class=\"toc-text\">BaseRecyclerViewAdapterHelper组件实现上拉加载更多</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%8A%E6%8B%89%E5%8A%A0%E8%BD%BD-%E6%A0%B8%E5%BF%83%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%A1%88\"><span class=\"toc-text\">上拉加载-核心实现方案</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%AF%BE%E9%97%B4%E5%AE%9E%E8%B7%B5-1\"><span class=\"toc-text\">课间实践</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%80%9A%E8%BF%87PullToRefresh%E7%BB%84%E4%BB%B6%E7%90%86%E8%A7%A3%E8%83%8C%E5%90%8E%E6%A0%B8%E5%BF%83%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">通过PullToRefresh组件理解背后核心原理</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%A0%B8%E5%BF%83%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">核心原理</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%BC%80%E6%BA%90%E7%BB%84%E4%BB%B6\"><span class=\"toc-text\">开源组件</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E5%9F%BA%E4%BA%8E%E4%B8%89%E6%96%B9%E5%88%B7%E6%96%B0%E6%A1%86%E6%9E%B6%EF%BC%8C%E5%89%96%E6%9E%90%E6%BB%91%E5%8A%A8%E5%88%B7%E6%96%B0%E7%9A%84%E6%A0%B8%E5%BF%83%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">4.基于三方刷新框架，剖析滑动刷新的核心实现原理</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%94%E3%80%81%E7%BB%84%E4%BB%B6%E5%BA%93%E7%9A%84%E7%BB%BC%E5%90%88%E9%A1%B9%E7%9B%AE%E5%AE%9E%E8%B7%B5\"><span class=\"toc-text\">五、组件库的综合项目实践</span></a></li></ol></li></ol>","author":{"name":"ChenZheng","slug":"blog-author","avatar":"/cover/avatar.jpg","link":"/","description":"幼稚园的小朋友の快乐小屋","socials":{"github":"https://github.com/sjwusj","twitter":"https://github.com/sjwusj","stackoverflow":"","wechat":"","qq":"","weibo":"https://github.com/sjwusj","zhihu":"https://github.com/sjwusj","csdn":"https://github.com/sjwusj","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Android_Day7","uid":"4f8e02efed9740b74bd2c4b8b52278c1","slug":"Android-Day7","date":"2024-04-25T23:57:08.000Z","updated":"2024-11-15T12:52:48.749Z","comments":true,"path":"api/articles/Android-Day7.json","keywords":null,"cover":"cover/cover3.jpg","text":"安卓实训第七天内容笔记 —— Android动画的基本概念和原理...","permalink":"/post/Android-Day7","photos":[],"count_time":{"symbolsCount":"8.3k","symbolsTime":"8 mins."},"categories":[{"name":"安卓","slug":"安卓","count":10,"path":"api/categories/安卓.json"}],"tags":[{"name":"Android","slug":"Android","count":10,"path":"api/tags/Android.json"}],"author":{"name":"ChenZheng","slug":"blog-author","avatar":"/cover/avatar.jpg","link":"/","description":"幼稚园的小朋友の快乐小屋","socials":{"github":"https://github.com/sjwusj","twitter":"https://github.com/sjwusj","stackoverflow":"","wechat":"","qq":"","weibo":"https://github.com/sjwusj","zhihu":"https://github.com/sjwusj","csdn":"https://github.com/sjwusj","juejin":"","customs":{}}}},"next_post":{"title":"Android_Day5","uid":"2b20ef5d584a158c12799264067175a5","slug":"Android_Day5","date":"2024-04-24T00:06:23.000Z","updated":"2024-11-15T12:53:15.273Z","comments":true,"path":"api/articles/Android_Day5.json","keywords":null,"cover":"cover/cover3.jpg","text":"安卓实训第五天内容笔记——Android 布局详解与优化...","permalink":"/post/Android_Day5","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"13 mins."},"categories":[{"name":"安卓","slug":"安卓","count":10,"path":"api/categories/安卓.json"}],"tags":[{"name":"Android","slug":"Android","count":10,"path":"api/tags/Android.json"}],"author":{"name":"ChenZheng","slug":"blog-author","avatar":"/cover/avatar.jpg","link":"/","description":"幼稚园的小朋友の快乐小屋","socials":{"github":"https://github.com/sjwusj","twitter":"https://github.com/sjwusj","stackoverflow":"","wechat":"","qq":"","weibo":"https://github.com/sjwusj","zhihu":"https://github.com/sjwusj","csdn":"https://github.com/sjwusj","juejin":"","customs":{}}}}}